{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:logger/server.js"],"names":["module","export","SystemLogger","StdOut","LoggerManager","processString","Logger","enabled","loggers","queue","showPackage","showFileAndLine","logLevel","register","logger","name","emit","addToQueue","args","push","dispatchQueue","_","each","item","_log","apply","clearQueue","disable","enable","EventEmitter","defaultTypes","debug","color","level","log","info","success","warn","error","_Logger","config","self","Object","assign","typeConfig","type","call","section","__section","method","box","methods","sections","getPrefix","options","prefix","details","_getCallerDetails","detailParts","file","line","length","join","getStack","Error","stack","lines","split","splice","index","len","match","exec","slice","packageMatch","makeABox","message","title","isArray","Math","max","map","topLine","s","pad","separator","lrpad","rpad","arguments","isString","undefined","subPrefix","console","forEach","unshift","global","string","date","obj","EJSON","parse","time","Log","format","startup","write","process","stdout","Date","id","Random","ts","RocketChat","limit","settings","get","shift","Meteor","publish","userId","authz","hasPermission","ready","added","on"],"mappings":"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","file":"/packages/rocketchat_logger.js","sourcesContent":["/* globals EventEmitter LoggerManager SystemLogger Log*/\n\n//TODO: change this global to import\nLoggerManager = new class extends EventEmitter { // eslint-disable-line no-undef\n\tconstructor() {\n\t\tsuper();\n\t\tthis.enabled = false;\n\t\tthis.loggers = {};\n\t\tthis.queue = [];\n\t\tthis.showPackage = false;\n\t\tthis.showFileAndLine = false;\n\t\tthis.logLevel = 0;\n\t}\n\tregister(logger) {\n\t\tif (!logger instanceof Logger) {\n\t\t\treturn;\n\t\t}\n\t\tthis.loggers[logger.name] = logger;\n\t\tthis.emit('register', logger);\n\t}\n\taddToQueue(logger, args) {\n\t\tthis.queue.push({\n\t\t\tlogger, args\n\t\t});\n\t}\n\tdispatchQueue() {\n\t\t_.each(this.queue, (item) => item.logger._log.apply(item.logger, item.args));\n\t\tthis.clearQueue();\n\t}\n\tclearQueue() {\n\t\tthis.queue = [];\n\t}\n\n\tdisable() {\n\t\tthis.enabled = false;\n\t}\n\n\tenable(dispatchQueue = false) {\n\t\tthis.enabled = true;\n\t\treturn (dispatchQueue === true) ? this.dispatchQueue() : this.clearQueue();\n\t}\n};\n\n\n\nconst defaultTypes = {\n\tdebug: {\n\t\tname: 'debug',\n\t\tcolor: 'blue',\n\t\tlevel: 2\n\t},\n\tlog: {\n\t\tname: 'info',\n\t\tcolor: 'blue',\n\t\tlevel: 1\n\t},\n\tinfo: {\n\t\tname: 'info',\n\t\tcolor: 'blue',\n\t\tlevel: 1\n\t},\n\tsuccess: {\n\t\tname: 'info',\n\t\tcolor: 'green',\n\t\tlevel: 1\n\t},\n\twarn: {\n\t\tname: 'warn',\n\t\tcolor: 'magenta',\n\t\tlevel: 1\n\t},\n\terror: {\n\t\tname: 'error',\n\t\tcolor: 'red',\n\t\tlevel: 0\n\t}\n};\n\nclass _Logger {\n\tconstructor(name, config = {}) {\n\t\tconst self = this;\n\t\tthis.name = name;\n\n\t\tthis.config = Object.assign({}, config);\n\t\tif (LoggerManager.loggers && LoggerManager.loggers[this.name] != null) {\n\t\t\tLoggerManager.loggers[this.name].warn('Duplicated instance');\n\t\t\treturn LoggerManager.loggers[this.name];\n\t\t}\n\t\t_.each(defaultTypes, (typeConfig, type) => {\n\t\t\tthis[type] = function(...args) {\n\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\tsection: this.__section,\n\t\t\t\t\ttype,\n\t\t\t\t\tlevel: typeConfig.level,\n\t\t\t\t\tmethod: typeConfig.name,\n\t\t\t\t\t'arguments': args\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tself[`${ type }_box`] = function(...args) {\n\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\tsection: this.__section,\n\t\t\t\t\ttype,\n\t\t\t\t\tbox: true,\n\t\t\t\t\tlevel: typeConfig.level,\n\t\t\t\t\tmethod: typeConfig.name,\n\t\t\t\t\t'arguments': args\n\t\t\t\t});\n\t\t\t};\n\t\t});\n\t\tif (this.config.methods) {\n\t\t\t_.each(this.config.methods, (typeConfig, method) => {\n\t\t\t\tif (this[method] != null) {\n\t\t\t\t\tself.warn(`Method ${ method } already exists`);\n\t\t\t\t}\n\t\t\t\tif (defaultTypes[typeConfig.type] == null) {\n\t\t\t\t\tself.warn(`Method type ${ typeConfig.type } does not exist`);\n\t\t\t\t}\n\t\t\t\tthis[method] = function(...args) {\n\t\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\t\tsection: this.__section,\n\t\t\t\t\t\ttype: typeConfig.type,\n\t\t\t\t\t\tlevel: typeConfig.level != null ? typeConfig.level : defaultTypes[typeConfig.type] && defaultTypes[typeConfig.type].level,\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t'arguments': args\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tthis[`${ method }_box`] = function(...args) {\n\t\t\t\t\treturn self._log.call(self, {\n\t\t\t\t\t\tsection: this.__section,\n\t\t\t\t\t\ttype: typeConfig.type,\n\t\t\t\t\t\tbox: true,\n\t\t\t\t\t\tlevel: typeConfig.level != null ? typeConfig.level : defaultTypes[typeConfig.type] && defaultTypes[typeConfig.type].level,\n\t\t\t\t\t\tmethod,\n\t\t\t\t\t\t'arguments': args\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tif (this.config.sections) {\n\t\t\t_.each(this.config.sections, (name, section) => {\n\t\t\t\tthis[section] = {};\n\t\t\t\t_.each(defaultTypes, (typeConfig, type) => {\n\t\t\t\t\tself[section][type] = (...args) => this[type].apply({__section: name}, args);\n\t\t\t\t\tself[section][`${ type }_box`] = (...args) => this[`${ type }_box`].apply({__section: name}, args);\n\t\t\t\t});\n\t\t\t\t_.each(this.config.methods, (typeConfig, method) => {\n\t\t\t\t\tself[section][method] = (...args) => self[method].apply({__section: name}, args);\n\t\t\t\t\tself[section][`${ method }_box`] = (...args) => self[`${ method }_box`].apply({__section: name}, args);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tLoggerManager.register(this);\n\t}\n\tgetPrefix(options) {\n\t\tlet prefix = `${ this.name } âž” ${ options.method }`;\n\t\tif (options.section) {\n\t\t\tprefix = `${ this.name } âž” ${ options.section }.${ options.method }`;\n\t\t}\n\t\tconst details = this._getCallerDetails();\n\t\tconst detailParts = [];\n\t\tif (details['package'] && (LoggerManager.showPackage === true || options.type === 'error')) {\n\t\t\tdetailParts.push(details['package']);\n\t\t}\n\t\tif (LoggerManager.showFileAndLine === true || options.type === 'error') {\n\t\t\tif ((details.file != null) && (details.line != null)) {\n\t\t\t\tdetailParts.push(`${ details.file }:${ details.line }`);\n\t\t\t} else {\n\t\t\t\tif (details.file != null) {\n\t\t\t\t\tdetailParts.push(details.file);\n\t\t\t\t}\n\t\t\t\tif (details.line != null) {\n\t\t\t\t\tdetailParts.push(details.line);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (defaultTypes[options.type]) {\n\t\t\t// format the message to a colored message\n\t\t\tprefix = prefix[defaultTypes[options.type].color];\n\t\t}\n\t\tif (detailParts.length > 0) {\n\t\t\tprefix = `${ detailParts.join(' ') } ${ prefix }`;\n\t\t}\n\t\treturn prefix;\n\t}\n\t_getCallerDetails() {\n\t\tconst getStack = () => {\n\t\t\t// We do NOT use Error.prepareStackTrace here (a V8 extension that gets us a\n\t\t\t// core-parsed stack) since it's impossible to compose it with the use of\n\t\t\t// Error.prepareStackTrace used on the server for source maps.\n\t\t\tconst {stack} = new Error();\n\t\t\treturn stack;\n\t\t};\n\t\tconst stack = getStack();\n\t\tif (!stack) {\n\t\t\treturn {};\n\t\t}\n\t\tconst lines = stack.split('\\n').splice(1);\n\t\t// looking for the first line outside the logging package (or an\n\t\t// eval if we find that first)\n\t\tlet line = lines[0];\n\t\tfor (let index = 0, len = lines.length; index < len, index++; line = lines[index]) {\n\t\t\tif (line.match(/^\\s*at eval \\(eval/)) {\n\t\t\t\treturn {file: 'eval'};\n\t\t\t}\n\n\t\t\tif (!line.match(/packages\\/rocketchat_logger(?:\\/|\\.js)/)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst details = {};\n\t\t// The format for FF is 'functionName@filePath:lineNumber'\n\t\t// The format for V8 is 'functionName (packages/logging/logging.js:81)' or\n\t\t//                      'packages/logging/logging.js:81'\n\t\tconst match = /(?:[@(]| at )([^(]+?):([0-9:]+)(?:\\)|$)/.exec(line);\n\t\tif (!match) {\n\t\t\treturn details;\n\t\t}\n\t\tdetails.line = match[2].split(':')[0];\n\t\t// Possible format: https://foo.bar.com/scripts/file.js?random=foobar\n\t\t// XXX: if you can write the following in better way, please do it\n\t\t// XXX: what about evals?\n\t\tdetails.file = match[1].split('/').slice(-1)[0].split('?')[0];\n\t\tconst packageMatch = match[1].match(/packages\\/([^\\.\\/]+)(?:\\/|\\.)/);\n\t\tif (packageMatch) {\n\t\t\tdetails['package'] = packageMatch[1];\n\t\t}\n\t\treturn details;\n\t}\n\tmakeABox(message, title) {\n\t\tif (!_.isArray(message)) {\n\t\t\tmessage = message.split('\\n');\n\t\t}\n\t\tlet len = 0;\n\n\t\tlen = Math.max.apply(null, message.map(line => line.length));\n\n\t\tconst topLine = `+--${ s.pad('', len, '-') }--+`;\n\t\tconst separator = `|  ${ s.pad('', len, '') }  |`;\n\t\tlet lines = [];\n\n\t\tlines.push(topLine);\n\t\tif (title) {\n\t\t\tlines.push(`|  ${ s.lrpad(title, len) }  |`);\n\t\t\tlines.push(topLine);\n\t\t}\n\t\tlines.push(separator);\n\n\t\tlines = [...lines, ...message.map(line => `|  ${ s.rpad(line, len) }  |`)];\n\n\t\tlines.push(separator);\n\t\tlines.push(topLine);\n\t\treturn lines;\n\t}\n\n\t_log(options) {\n\t\tif (LoggerManager.enabled === false) {\n\t\t\tLoggerManager.addToQueue(this, arguments);\n\t\t\treturn;\n\t\t}\n\t\tif (options.level == null) {\n\t\t\toptions.level = 1;\n\t\t}\n\n\t\tif (LoggerManager.logLevel < options.level) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst prefix = this.getPrefix(options);\n\n\t\tif (options.box === true && _.isString(options.arguments[0])) {\n\t\t\tlet color = undefined;\n\t\t\tif (defaultTypes[options.type]) {\n\t\t\t\tcolor = defaultTypes[options.type].color;\n\t\t\t}\n\n\t\t\tconst box = this.makeABox(options.arguments[0], options.arguments[1]);\n\t\t\tlet subPrefix = 'âž”';\n\t\t\tif (color) {\n\t\t\t\tsubPrefix = subPrefix[color];\n\t\t\t}\n\n\t\t\tconsole.log(subPrefix, prefix);\n\t\t\tbox.forEach(line => {\n\t\t\t\tconsole.log(subPrefix, color ? line[color]: line);\n\t\t\t});\n\n\t\t} else {\n\t\t\toptions.arguments.unshift(prefix);\n\t\t\tconsole.log.apply(console, options.arguments);\n\t\t}\n\t}\n}\n// TODO: change this global to import\nLogger = global.Logger = _Logger;\nconst processString = function(string, date) {\n\tlet obj;\n\ttry {\n\t\tif (string[0] === '{') {\n\t\t\tobj = EJSON.parse(string);\n\t\t} else {\n\t\t\tobj = {\n\t\t\t\tmessage: string,\n\t\t\t\ttime: date,\n\t\t\t\tlevel: 'info'\n\t\t\t};\n\t\t}\n\t\treturn Log.format(obj, {color: true});\n\t} catch (error) {\n\t\treturn string;\n\t}\n};\n// TODO: change this global to import\nSystemLogger = new Logger('System', { // eslint-disable-line no-undef\n\tmethods: {\n\t\tstartup: {\n\t\t\ttype: 'success',\n\t\t\tlevel: 0\n\t\t}\n\t}\n});\n\n\nconst StdOut = new class extends EventEmitter {\n\tconstructor() {\n\t\tsuper();\n\t\tconst write = process.stdout.write;\n\t\tthis.queue = [];\n\t\tprocess.stdout.write = (...args) => {\n\t\t\twrite.apply(process.stdout, args);\n\t\t\tconst date = new Date;\n\t\t\tconst string = processString(args[0], date);\n\t\t\tconst item = {\n\t\t\t\tid: Random.id(),\n\t\t\t\tstring,\n\t\t\t\tts: date\n\t\t\t};\n\t\t\tthis.queue.push(item);\n\n\t\t\tif (typeof RocketChat !== 'undefined') {\n\t\t\t\tconst limit = RocketChat.settings.get('Log_View_Limit');\n\t\t\t\tif (limit && this.queue.length > limit) {\n\t\t\t\t\tthis.queue.shift();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.emit('write', string, item);\n\t\t};\n\t}\n};\n\n\nMeteor.publish('stdout', function() {\n\tif (!this.userId || RocketChat.authz.hasPermission(this.userId, 'view-logs') !== true) {\n\t\treturn this.ready();\n\t}\n\n\tStdOut.queue.forEach(item => {\n\t\tthis.added('stdout', item.id, {\n\t\t\tstring: item.string,\n\t\t\tts: item.ts\n\t\t});\n\t});\n\n\tthis.ready();\n\tStdOut.on('write', (string, item) => {\n\t\tthis.added('stdout', item.id, {\n\t\t\tstring: item.string,\n\t\t\tts: item.ts\n\t\t});\n\t});\n});\n\n\nexport { SystemLogger, StdOut, LoggerManager, processString, Logger };\n"]}