{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_ui-account/client/avatar/avatar.coffee","meteor://ðŸ’»app/client/avatar/avatar.coffee.js","meteor://ðŸ’»app/packages/rocketchat_ui-account/client/avatar/prompt.coffee","meteor://ðŸ’»app/client/avatar/prompt.coffee.js","meteor://ðŸ’»app/packages/rocketchat_ui-account/client/account.coffee","meteor://ðŸ’»app/client/account.coffee.js","meteor://ðŸ’»app/packages/rocketchat_ui-account/client/accountFlex.coffee","meteor://ðŸ’»app/client/accountFlex.coffee.js","meteor://ðŸ’»app/packages/rocketchat_ui-account/client/accountPreferences.coffee","meteor://ðŸ’»app/client/accountPreferences.coffee.js","meteor://ðŸ’»app/packages/rocketchat_ui-account/client/accountProfile.coffee","meteor://ðŸ’»app/client/accountProfile.coffee.js"],"names":["Template","avatar","helpers","imageUrl","ref","url","username","userId","Meteor","users","findOne","Session","get","getAvatarUrlFromUsername","toastr","module","import","v","avatarPrompt","onCreated","self","suggestions","ReactiveVar","upload","getSuggestions","set","call","error","avatars","ready","onRendered","Tracker","afterFlush","RocketChat","settings","FlowRouter","go","SideNav","setFlex","openFlex","instance","suggestAvatar","service","_","capitalize","user","initialsUsername","events","tmpService","err","details","timeToReset","t","seconds","parseInt","success","callbacks","run","trim","$","val","blob","contentType","event","template","loginWithService","serviceConfig","alert","console","log","message","e","files","i","len","reader","originalEvent","target","length","dataTransfer","test","type","FileReader","readAsDataURL","onloadend","result","account","accountFlex","overArrow","leaveArrow","closeFlex","menu","close","allowUserProfileChange","allowUserAvatarChange","accountPreferences","audioAssets","CustomSounds","getList","newMessageNotification","ref1","ref2","preferences","newRoomNotification","languages","key","language","TAPi18n","getLanguages","push","extend","sortBy","userLanguage","defaultUserLanguage","split","shift","toLowerCase","checked","property","value","defaultValue","currentValue","ref3","ref4","ref5","ref6","ref7","ref8","selected","highlights","join","desktopNotificationEnabled","KonchatNotification","notificationStatus","window","Notification","permission","desktopNotificationDisabled","desktopNotificationDuration","showRoles","settingsTemplate","parentTemplate","child","useEmojis","autorun","show","hide","clearForm","find","localStorage","getItem","save","data","reload","selectedLanguage","setItem","convertAsciiEmoji","saveMobileBandwidth","collapseMediaByDefault","viewMode","hideUsernames","hideRoles","hideFlexTab","hideAvatars","mergeChannels","sendOnEnter","unreadRoomsMode","autoImageLoad","emailNotificationMode","compact","map","unreadAlert","results","setTimeout","_reload","handleError","currentTarget","getDesktopPermission","notify","duration","payload","sender","title","__","text","$audio","audio","preventDefault","play","accountProfile","allowDeleteOwnAccount","realname","name","email","emails","address","emailVerified","verified","allowUsernameChange","allowEmailChange","usernameChangeDisabled","allowPasswordChange","passwordChangeDisabled","customFields","changePassword","newPassword","callback","remove","typedPassword","each","swal","reqPass","s","services","password","bcrypt","inputType","showCancelButton","closeOnConfirm","confirmButtonText","cancelButtonText","_this","warning","SHA256","showInputError","templateInstance","logoutOtherClients","deleteConfirmation","innerHTML","disabled","replace"],"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","file":"/packages/rocketchat_ui-account.js","sourcesContent":["Template.avatar.helpers\n\timageUrl: ->\n\t\tusername = this.username\n\t\tif not username? and this.userId?\n\t\t\tusername = Meteor.users.findOne(this.userId)?.username\n\n\t\tif not username?\n\t\t\treturn\n\n\t\tSession.get \"avatar_random_#{username}\"\n\n\t\turl = getAvatarUrlFromUsername(username)\n\n\t\treturn \"background-image:url(#{url});\"\n","Template.avatar.helpers({\n  imageUrl: function() {\n    var ref, url, username;\n    username = this.username;\n    if ((username == null) && (this.userId != null)) {\n      username = (ref = Meteor.users.findOne(this.userId)) != null ? ref.username : void 0;\n    }\n    if (username == null) {\n      return;\n    }\n    Session.get(\"avatar_random_\" + username);\n    url = getAvatarUrlFromUsername(username);\n    return \"background-image:url(\" + url + \");\";\n  }\n});\n","import toastr from 'toastr'\nTemplate.avatarPrompt.onCreated ->\n\tself = this\n\tself.suggestions = new ReactiveVar\n\tself.upload = new ReactiveVar\n\n\tself.getSuggestions = ->\n\t\tself.suggestions.set undefined\n\t\tMeteor.call 'getAvatarSuggestion', (error, avatars) ->\n\t\t\tself.suggestions.set\n\t\t\t\tready: true\n\t\t\t\tavatars: avatars\n\n\tself.getSuggestions()\n\nTemplate.avatarPrompt.onRendered ->\n\tTracker.afterFlush ->\n\t\t# this should throw an error-template\n\t\tFlowRouter.go(\"home\") if !RocketChat.settings.get(\"Accounts_AllowUserAvatarChange\")\n\t\tSideNav.setFlex \"accountFlex\"\n\t\tSideNav.openFlex()\n\nTemplate.avatarPrompt.helpers\n\tsuggestions: ->\n\t\treturn Template.instance().suggestions.get()\n\n\tsuggestAvatar: (service) ->\n\t\tsuggestions = Template.instance().suggestions.get()\n\t\treturn RocketChat.settings.get(\"Accounts_OAuth_#{_.capitalize service}\") and not suggestions.avatars[service]\n\n\tupload: ->\n\t\treturn Template.instance().upload.get()\n\n\tusername: ->\n\t\treturn Meteor.user()?.username\n\n\tinitialsUsername: ->\n\t\treturn '@'+Meteor.user()?.username\n\nTemplate.avatarPrompt.events\n\t'click .select-service': ->\n\t\tif @service is 'initials'\n\t\t\tMeteor.call 'resetAvatar', (err) ->\n\t\t\t\tif err?.details?.timeToReset?\n\t\t\t\t\ttoastr.error t('error-too-many-requests', { seconds: parseInt(err.details.timeToReset / 1000) })\n\t\t\t\telse\n\t\t\t\t\ttoastr.success t('Avatar_changed_successfully')\n\t\t\t\t\tRocketChat.callbacks.run('userAvatarSet', 'initials')\n\t\telse if @service is 'url'\n\t\t\tif _.trim $('#avatarurl').val()\n\t\t\t\tMeteor.call 'setAvatarFromService', $('#avatarurl').val(), '', @service, (err) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\tif err.details?.timeToReset?\n\t\t\t\t\t\t\ttoastr.error t('error-too-many-requests', { seconds: parseInt(err.details.timeToReset / 1000) })\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\ttoastr.error t('Avatar_url_invalid_or_error')\n\t\t\t\t\telse\n\t\t\t\t\t\ttoastr.success t('Avatar_changed_successfully')\n\t\t\t\t\t\tRocketChat.callbacks.run('userAvatarSet', 'url')\n\t\t\telse\n\t\t\t\ttoastr.error t('Please_enter_value_for_url')\n\t\telse\n\t\t\ttmpService = @service\n\t\t\tMeteor.call 'setAvatarFromService', @blob, @contentType, @service, (err) ->\n\t\t\t\tif err?.details?.timeToReset?\n\t\t\t\t\ttoastr.error t('error-too-many-requests', { seconds: parseInt(err.details.timeToReset / 1000) })\n\t\t\t\telse\n\t\t\t\t\ttoastr.success t('Avatar_changed_successfully')\n\t\t\t\t\tRocketChat.callbacks.run('userAvatarSet', tmpService)\n\n\t'click .login-with-service': (event, template) ->\n\t\tloginWithService = \"loginWith#{_.capitalize(this)}\"\n\n\t\tserviceConfig = {}\n\n\t\tMeteor[loginWithService] serviceConfig, (error) ->\n\t\t\tif error?.error is 'github-no-public-email'\n\t\t\t\talert t(\"github_no_public_email\")\n\t\t\t\treturn\n\n\t\t\tconsole.log error\n\t\t\tif error?\n\t\t\t\ttoastr.error error.message\n\t\t\t\treturn\n\n\t\t\ttemplate.getSuggestions()\n\n\t'change .avatar-file-input': (event, template) ->\n\t\te = event.originalEvent or event\n\t\tfiles = e.target.files\n\t\tif not files or files.length is 0\n\t\t\tfiles = e.dataTransfer?.files or []\n\n\t\tfor blob in files\n\t\t\tif not /image\\/.+/.test blob.type\n\t\t\t\treturn\n\n\t\t\treader = new FileReader()\n\t\t\treader.readAsDataURL(blob)\n\t\t\treader.onloadend = ->\n\t\t\t\ttemplate.upload.set\n\t\t\t\t\tservice: 'upload'\n\t\t\t\t\tcontentType: blob.type\n\t\t\t\t\tblob: reader.result\n\t\t\t\tRocketChat.callbacks.run('userAvatarSet', 'upload')\n","import toastr from 'toastr';\n\nTemplate.avatarPrompt.onCreated(function() {\n  var self;\n  self = this;\n  self.suggestions = new ReactiveVar;\n  self.upload = new ReactiveVar;\n  self.getSuggestions = function() {\n    self.suggestions.set(void 0);\n    return Meteor.call('getAvatarSuggestion', function(error, avatars) {\n      return self.suggestions.set({\n        ready: true,\n        avatars: avatars\n      });\n    });\n  };\n  return self.getSuggestions();\n});\n\nTemplate.avatarPrompt.onRendered(function() {\n  return Tracker.afterFlush(function() {\n    if (!RocketChat.settings.get(\"Accounts_AllowUserAvatarChange\")) {\n      FlowRouter.go(\"home\");\n    }\n    SideNav.setFlex(\"accountFlex\");\n    return SideNav.openFlex();\n  });\n});\n\nTemplate.avatarPrompt.helpers({\n  suggestions: function() {\n    return Template.instance().suggestions.get();\n  },\n  suggestAvatar: function(service) {\n    var suggestions;\n    suggestions = Template.instance().suggestions.get();\n    return RocketChat.settings.get(\"Accounts_OAuth_\" + (_.capitalize(service))) && !suggestions.avatars[service];\n  },\n  upload: function() {\n    return Template.instance().upload.get();\n  },\n  username: function() {\n    var ref;\n    return (ref = Meteor.user()) != null ? ref.username : void 0;\n  },\n  initialsUsername: function() {\n    var ref;\n    return '@' + ((ref = Meteor.user()) != null ? ref.username : void 0);\n  }\n});\n\nTemplate.avatarPrompt.events({\n  'click .select-service': function() {\n    var tmpService;\n    if (this.service === 'initials') {\n      return Meteor.call('resetAvatar', function(err) {\n        var ref;\n        if ((err != null ? (ref = err.details) != null ? ref.timeToReset : void 0 : void 0) != null) {\n          return toastr.error(t('error-too-many-requests', {\n            seconds: parseInt(err.details.timeToReset / 1000)\n          }));\n        } else {\n          toastr.success(t('Avatar_changed_successfully'));\n          return RocketChat.callbacks.run('userAvatarSet', 'initials');\n        }\n      });\n    } else if (this.service === 'url') {\n      if (_.trim($('#avatarurl').val())) {\n        return Meteor.call('setAvatarFromService', $('#avatarurl').val(), '', this.service, function(err) {\n          var ref;\n          if (err) {\n            if (((ref = err.details) != null ? ref.timeToReset : void 0) != null) {\n              return toastr.error(t('error-too-many-requests', {\n                seconds: parseInt(err.details.timeToReset / 1000)\n              }));\n            } else {\n              return toastr.error(t('Avatar_url_invalid_or_error'));\n            }\n          } else {\n            toastr.success(t('Avatar_changed_successfully'));\n            return RocketChat.callbacks.run('userAvatarSet', 'url');\n          }\n        });\n      } else {\n        return toastr.error(t('Please_enter_value_for_url'));\n      }\n    } else {\n      tmpService = this.service;\n      return Meteor.call('setAvatarFromService', this.blob, this.contentType, this.service, function(err) {\n        var ref;\n        if ((err != null ? (ref = err.details) != null ? ref.timeToReset : void 0 : void 0) != null) {\n          return toastr.error(t('error-too-many-requests', {\n            seconds: parseInt(err.details.timeToReset / 1000)\n          }));\n        } else {\n          toastr.success(t('Avatar_changed_successfully'));\n          return RocketChat.callbacks.run('userAvatarSet', tmpService);\n        }\n      });\n    }\n  },\n  'click .login-with-service': function(event, template) {\n    var loginWithService, serviceConfig;\n    loginWithService = \"loginWith\" + (_.capitalize(this));\n    serviceConfig = {};\n    return Meteor[loginWithService](serviceConfig, function(error) {\n      if ((error != null ? error.error : void 0) === 'github-no-public-email') {\n        alert(t(\"github_no_public_email\"));\n        return;\n      }\n      console.log(error);\n      if (error != null) {\n        toastr.error(error.message);\n        return;\n      }\n      return template.getSuggestions();\n    });\n  },\n  'change .avatar-file-input': function(event, template) {\n    var blob, e, files, i, len, reader, ref;\n    e = event.originalEvent || event;\n    files = e.target.files;\n    if (!files || files.length === 0) {\n      files = ((ref = e.dataTransfer) != null ? ref.files : void 0) || [];\n    }\n    for (i = 0, len = files.length; i < len; i++) {\n      blob = files[i];\n      if (!/image\\/.+/.test(blob.type)) {\n        return;\n      }\n      reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onloadend = function() {\n        template.upload.set({\n          service: 'upload',\n          contentType: blob.type,\n          blob: reader.result\n        });\n        return RocketChat.callbacks.run('userAvatarSet', 'upload');\n      };\n    }\n  }\n});\n","Template.account.onRendered ->\n\tTracker.afterFlush ->\n\t\tSideNav.setFlex \"accountFlex\"\n\t\tSideNav.openFlex()\n","Template.account.onRendered(function() {\n  return Tracker.afterFlush(function() {\n    SideNav.setFlex(\"accountFlex\");\n    return SideNav.openFlex();\n  });\n});\n","Template.accountFlex.events\n\t'mouseenter header': ->\n\t\tSideNav.overArrow()\n\n\t'mouseleave header': ->\n\t\tSideNav.leaveArrow()\n\n\t'click header': ->\n\t\tSideNav.closeFlex()\n\n\t'click .cancel-settings': ->\n\t\tSideNav.closeFlex()\n\n\t'click .account-link': ->\n\t\tmenu.close()\n\nTemplate.accountFlex.helpers\n\tallowUserProfileChange: ->\n\t\treturn RocketChat.settings.get(\"Accounts_AllowUserProfileChange\")\n\tallowUserAvatarChange: ->\n\t\treturn RocketChat.settings.get(\"Accounts_AllowUserAvatarChange\")","Template.accountFlex.events({\n  'mouseenter header': function() {\n    return SideNav.overArrow();\n  },\n  'mouseleave header': function() {\n    return SideNav.leaveArrow();\n  },\n  'click header': function() {\n    return SideNav.closeFlex();\n  },\n  'click .cancel-settings': function() {\n    return SideNav.closeFlex();\n  },\n  'click .account-link': function() {\n    return menu.close();\n  }\n});\n\nTemplate.accountFlex.helpers({\n  allowUserProfileChange: function() {\n    return RocketChat.settings.get(\"Accounts_AllowUserProfileChange\");\n  },\n  allowUserAvatarChange: function() {\n    return RocketChat.settings.get(\"Accounts_AllowUserAvatarChange\");\n  }\n});\n","import toastr from 'toastr'\nTemplate.accountPreferences.helpers\n\taudioAssets: ->\n\t\treturn RocketChat.CustomSounds && RocketChat.CustomSounds.getList && RocketChat.CustomSounds.getList() || [];\n\n\tnewMessageNotification: ->\n\t\treturn Meteor.user()?.settings?.preferences?.newMessageNotification || 'chime'\n\n\tnewRoomNotification: ->\n\t\treturn Meteor.user()?.settings?.preferences?.newRoomNotification || 'door'\n\n\tlanguages: ->\n\t\tlanguages = TAPi18n.getLanguages()\n\t\tresult = []\n\t\tfor key, language of languages\n\t\t\tresult.push _.extend(language, { key: key })\n\t\treturn _.sortBy(result, 'key')\n\n\tuserLanguage: (key) ->\n\t\treturn (Meteor.user().language or defaultUserLanguage())?.split('-').shift().toLowerCase() is key\n\n\tchecked: (property, value, defaultValue) ->\n\t\tif not Meteor.user()?.settings?.preferences?[property]? and defaultValue is true\n\t\t\tcurrentValue = value\n\t\telse if Meteor.user()?.settings?.preferences?[property]?\n\t\t\tcurrentValue = !!Meteor.user()?.settings?.preferences?[property]\n\n\t\treturn currentValue is value\n\n\tselected: (property, value, defaultValue) ->\n\t\tif not Meteor.user()?.settings?.preferences?[property]\n\t\t\treturn defaultValue is true\n\t\telse\n\t\t\treturn Meteor.user()?.settings?.preferences?[property] == value\n\n\thighlights: ->\n\t\treturn Meteor.user()?.settings?.preferences?['highlights']?.join(', ')\n\n\tdesktopNotificationEnabled: ->\n\t\treturn (KonchatNotification.notificationStatus.get() is 'granted') or (window.Notification && Notification.permission is \"granted\")\n\n\tdesktopNotificationDisabled: ->\n\t\treturn (KonchatNotification.notificationStatus.get() is 'denied') or (window.Notification && Notification.permission is \"denied\")\n\n\tdesktopNotificationDuration: ->\n\t\treturn Meteor.user()?.settings?.preferences?.desktopNotificationDuration - 0\n\n\tshowRoles: ->\n\t\treturn RocketChat.settings.get('UI_DisplayRoles');\n\nTemplate.accountPreferences.onCreated ->\n\tsettingsTemplate = this.parentTemplate(3)\n\tsettingsTemplate.child ?= []\n\tsettingsTemplate.child.push this\n\n\t@useEmojis = new ReactiveVar not Meteor.user()?.settings?.preferences?.useEmojis? or Meteor.user().settings.preferences.useEmojis\n\tinstance = @\n\t@autorun ->\n\t\tif instance.useEmojis.get()\n\t\t\tTracker.afterFlush ->\n\t\t\t\t$('#convertAsciiEmoji').show()\n\t\telse\n\t\t\tTracker.afterFlush ->\n\t\t\t\t$('#convertAsciiEmoji').hide()\n\n\t@clearForm = ->\n\t\t@find('#language').value = localStorage.getItem('userLanguage')\n\n\t@save = ->\n\t\tinstance = @\n\t\tdata = {}\n\n\t\treload = false\n\t\tselectedLanguage = $('#language').val()\n\n\t\tif localStorage.getItem('userLanguage') isnt selectedLanguage\n\t\t\tlocalStorage.setItem 'userLanguage', selectedLanguage\n\t\t\tdata.language = selectedLanguage\n\t\t\treload = true\n\n\t\tdata.newRoomNotification = $('select[name=newRoomNotification]').val()\n\t\tdata.newMessageNotification = $('select[name=newMessageNotification]').val()\n\t\tdata.useEmojis = $('input[name=useEmojis]:checked').val()\n\t\tdata.convertAsciiEmoji = $('input[name=convertAsciiEmoji]:checked').val()\n\t\tdata.saveMobileBandwidth = $('input[name=saveMobileBandwidth]:checked').val()\n\t\tdata.collapseMediaByDefault = $('input[name=collapseMediaByDefault]:checked').val()\n\t\tdata.viewMode = parseInt($('#viewMode').find('select').val())\n\t\tdata.hideUsernames = $('#hideUsernames').find('input:checked').val()\n\t\tdata.hideRoles = $('#hideRoles').find('input:checked').val()\n\t\tdata.hideFlexTab = $('#hideFlexTab').find('input:checked').val()\n\t\tdata.hideAvatars = $('#hideAvatars').find('input:checked').val()\n\t\tdata.mergeChannels = $('#mergeChannels').find('input:checked').val()\n\t\tdata.sendOnEnter = $('#sendOnEnter').find('select').val()\n\t\tdata.unreadRoomsMode = $('input[name=unreadRoomsMode]:checked').val()\n\t\tdata.autoImageLoad = $('input[name=autoImageLoad]:checked').val()\n\t\tdata.emailNotificationMode = $('select[name=emailNotificationMode]').val()\n\t\tdata.highlights = _.compact(_.map($('[name=highlights]').val().split(','), (e) -> return _.trim(e)))\n\t\tdata.desktopNotificationDuration = $('input[name=desktopNotificationDuration]').val()\n\t\tdata.unreadAlert = $('#unreadAlert').find('input:checked').val()\n\n\t\tMeteor.call 'saveUserPreferences', data, (error, results) ->\n\t\t\tif results\n\t\t\t\ttoastr.success t('Preferences_saved')\n\t\t\t\tinstance.clearForm()\n\t\t\t\tif reload\n\t\t\t\t\tsetTimeout ->\n\t\t\t\t\t\tMeteor._reload.reload()\n\t\t\t\t\t, 1000\n\n\t\t\tif error\n\t\t\t\thandleError(error)\n\nTemplate.accountPreferences.onRendered ->\n\tTracker.afterFlush ->\n\t\tSideNav.setFlex \"accountFlex\"\n\t\tSideNav.openFlex()\n\nTemplate.accountPreferences.events\n\t'click .submit button': (e, t) ->\n\t\tt.save()\n\n\t'change input[name=useEmojis]': (e, t) ->\n\t\tt.useEmojis.set $(e.currentTarget).val() is '1'\n\n\t'click .enable-notifications': ->\n\t\tKonchatNotification.getDesktopPermission()\n\n\t'click .test-notifications': ->\n\t\tKonchatNotification.notify\n\t\t\tduration: $('input[name=desktopNotificationDuration]').val()\n\t\t\tpayload:\n\t\t\t\tsender:\n\t\t\t\t\tusername: 'rocket.cat'\n\t\t\ttitle: TAPi18n.__('Desktop_Notification_Test')\n\t\t\ttext: TAPi18n.__('This_is_a_desktop_notification')\n\n\t'change .audio': (e) ->\n\t\te.preventDefault()\n\t\taudio = $(e.currentTarget).val()\n\t\tif audio is 'none'\n\t\t\treturn\n\n\t\tif audio\n\t\t\t$audio = $('audio#' + audio)\n\t\t\t$audio?[0]?.play()\n","import toastr from 'toastr';\n\nTemplate.accountPreferences.helpers({\n  audioAssets: function() {\n    return RocketChat.CustomSounds && RocketChat.CustomSounds.getList && RocketChat.CustomSounds.getList() || [];\n  },\n  newMessageNotification: function() {\n    var ref, ref1, ref2;\n    return ((ref = Meteor.user()) != null ? (ref1 = ref.settings) != null ? (ref2 = ref1.preferences) != null ? ref2.newMessageNotification : void 0 : void 0 : void 0) || 'chime';\n  },\n  newRoomNotification: function() {\n    var ref, ref1, ref2;\n    return ((ref = Meteor.user()) != null ? (ref1 = ref.settings) != null ? (ref2 = ref1.preferences) != null ? ref2.newRoomNotification : void 0 : void 0 : void 0) || 'door';\n  },\n  languages: function() {\n    var key, language, languages, result;\n    languages = TAPi18n.getLanguages();\n    result = [];\n    for (key in languages) {\n      language = languages[key];\n      result.push(_.extend(language, {\n        key: key\n      }));\n    }\n    return _.sortBy(result, 'key');\n  },\n  userLanguage: function(key) {\n    var ref;\n    return ((ref = Meteor.user().language || defaultUserLanguage()) != null ? ref.split('-').shift().toLowerCase() : void 0) === key;\n  },\n  checked: function(property, value, defaultValue) {\n    var currentValue, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, ref8;\n    if ((((ref = Meteor.user()) != null ? (ref1 = ref.settings) != null ? (ref2 = ref1.preferences) != null ? ref2[property] : void 0 : void 0 : void 0) == null) && defaultValue === true) {\n      currentValue = value;\n    } else if (((ref3 = Meteor.user()) != null ? (ref4 = ref3.settings) != null ? (ref5 = ref4.preferences) != null ? ref5[property] : void 0 : void 0 : void 0) != null) {\n      currentValue = !!((ref6 = Meteor.user()) != null ? (ref7 = ref6.settings) != null ? (ref8 = ref7.preferences) != null ? ref8[property] : void 0 : void 0 : void 0);\n    }\n    return currentValue === value;\n  },\n  selected: function(property, value, defaultValue) {\n    var ref, ref1, ref2, ref3, ref4, ref5;\n    if (!((ref = Meteor.user()) != null ? (ref1 = ref.settings) != null ? (ref2 = ref1.preferences) != null ? ref2[property] : void 0 : void 0 : void 0)) {\n      return defaultValue === true;\n    } else {\n      return ((ref3 = Meteor.user()) != null ? (ref4 = ref3.settings) != null ? (ref5 = ref4.preferences) != null ? ref5[property] : void 0 : void 0 : void 0) === value;\n    }\n  },\n  highlights: function() {\n    var ref, ref1, ref2, ref3;\n    return (ref = Meteor.user()) != null ? (ref1 = ref.settings) != null ? (ref2 = ref1.preferences) != null ? (ref3 = ref2['highlights']) != null ? ref3.join(', ') : void 0 : void 0 : void 0 : void 0;\n  },\n  desktopNotificationEnabled: function() {\n    return (KonchatNotification.notificationStatus.get() === 'granted') || (window.Notification && Notification.permission === \"granted\");\n  },\n  desktopNotificationDisabled: function() {\n    return (KonchatNotification.notificationStatus.get() === 'denied') || (window.Notification && Notification.permission === \"denied\");\n  },\n  desktopNotificationDuration: function() {\n    var ref, ref1, ref2;\n    return ((ref = Meteor.user()) != null ? (ref1 = ref.settings) != null ? (ref2 = ref1.preferences) != null ? ref2.desktopNotificationDuration : void 0 : void 0 : void 0) - 0;\n  },\n  showRoles: function() {\n    return RocketChat.settings.get('UI_DisplayRoles');\n  }\n});\n\nTemplate.accountPreferences.onCreated(function() {\n  var instance, ref, ref1, ref2, settingsTemplate;\n  settingsTemplate = this.parentTemplate(3);\n  if (settingsTemplate.child == null) {\n    settingsTemplate.child = [];\n  }\n  settingsTemplate.child.push(this);\n  this.useEmojis = new ReactiveVar((((ref = Meteor.user()) != null ? (ref1 = ref.settings) != null ? (ref2 = ref1.preferences) != null ? ref2.useEmojis : void 0 : void 0 : void 0) == null) || Meteor.user().settings.preferences.useEmojis);\n  instance = this;\n  this.autorun(function() {\n    if (instance.useEmojis.get()) {\n      return Tracker.afterFlush(function() {\n        return $('#convertAsciiEmoji').show();\n      });\n    } else {\n      return Tracker.afterFlush(function() {\n        return $('#convertAsciiEmoji').hide();\n      });\n    }\n  });\n  this.clearForm = function() {\n    return this.find('#language').value = localStorage.getItem('userLanguage');\n  };\n  return this.save = function() {\n    var data, reload, selectedLanguage;\n    instance = this;\n    data = {};\n    reload = false;\n    selectedLanguage = $('#language').val();\n    if (localStorage.getItem('userLanguage') !== selectedLanguage) {\n      localStorage.setItem('userLanguage', selectedLanguage);\n      data.language = selectedLanguage;\n      reload = true;\n    }\n    data.newRoomNotification = $('select[name=newRoomNotification]').val();\n    data.newMessageNotification = $('select[name=newMessageNotification]').val();\n    data.useEmojis = $('input[name=useEmojis]:checked').val();\n    data.convertAsciiEmoji = $('input[name=convertAsciiEmoji]:checked').val();\n    data.saveMobileBandwidth = $('input[name=saveMobileBandwidth]:checked').val();\n    data.collapseMediaByDefault = $('input[name=collapseMediaByDefault]:checked').val();\n    data.viewMode = parseInt($('#viewMode').find('select').val());\n    data.hideUsernames = $('#hideUsernames').find('input:checked').val();\n    data.hideRoles = $('#hideRoles').find('input:checked').val();\n    data.hideFlexTab = $('#hideFlexTab').find('input:checked').val();\n    data.hideAvatars = $('#hideAvatars').find('input:checked').val();\n    data.mergeChannels = $('#mergeChannels').find('input:checked').val();\n    data.sendOnEnter = $('#sendOnEnter').find('select').val();\n    data.unreadRoomsMode = $('input[name=unreadRoomsMode]:checked').val();\n    data.autoImageLoad = $('input[name=autoImageLoad]:checked').val();\n    data.emailNotificationMode = $('select[name=emailNotificationMode]').val();\n    data.highlights = _.compact(_.map($('[name=highlights]').val().split(','), function(e) {\n      return _.trim(e);\n    }));\n    data.desktopNotificationDuration = $('input[name=desktopNotificationDuration]').val();\n    data.unreadAlert = $('#unreadAlert').find('input:checked').val();\n    return Meteor.call('saveUserPreferences', data, function(error, results) {\n      if (results) {\n        toastr.success(t('Preferences_saved'));\n        instance.clearForm();\n        if (reload) {\n          setTimeout(function() {\n            return Meteor._reload.reload();\n          }, 1000);\n        }\n      }\n      if (error) {\n        return handleError(error);\n      }\n    });\n  };\n});\n\nTemplate.accountPreferences.onRendered(function() {\n  return Tracker.afterFlush(function() {\n    SideNav.setFlex(\"accountFlex\");\n    return SideNav.openFlex();\n  });\n});\n\nTemplate.accountPreferences.events({\n  'click .submit button': function(e, t) {\n    return t.save();\n  },\n  'change input[name=useEmojis]': function(e, t) {\n    return t.useEmojis.set($(e.currentTarget).val() === '1');\n  },\n  'click .enable-notifications': function() {\n    return KonchatNotification.getDesktopPermission();\n  },\n  'click .test-notifications': function() {\n    return KonchatNotification.notify({\n      duration: $('input[name=desktopNotificationDuration]').val(),\n      payload: {\n        sender: {\n          username: 'rocket.cat'\n        }\n      },\n      title: TAPi18n.__('Desktop_Notification_Test'),\n      text: TAPi18n.__('This_is_a_desktop_notification')\n    });\n  },\n  'change .audio': function(e) {\n    var $audio, audio, ref;\n    e.preventDefault();\n    audio = $(e.currentTarget).val();\n    if (audio === 'none') {\n      return;\n    }\n    if (audio) {\n      $audio = $('audio#' + audio);\n      return $audio != null ? (ref = $audio[0]) != null ? ref.play() : void 0 : void 0;\n    }\n  }\n});\n","import toastr from 'toastr'\nTemplate.accountProfile.helpers\n\tallowDeleteOwnAccount: ->\n\t\treturn RocketChat.settings.get('Accounts_AllowDeleteOwnAccount')\n\n\trealname: ->\n\t\treturn Meteor.user().name\n\n\tusername: ->\n\t\treturn Meteor.user().username\n\n\temail: ->\n\t\treturn Meteor.user().emails?[0]?.address\n\n\temailVerified: ->\n\t\treturn  Meteor.user().emails?[0]?.verified\n\n\tallowUsernameChange: ->\n\t\treturn RocketChat.settings.get(\"Accounts_AllowUsernameChange\") and RocketChat.settings.get(\"LDAP_Enable\") isnt true\n\n\tallowEmailChange: ->\n\t\treturn RocketChat.settings.get(\"Accounts_AllowEmailChange\")\n\n\tusernameChangeDisabled: ->\n\t\treturn t('Username_Change_Disabled')\n\n\tallowPasswordChange: ->\n\t\treturn RocketChat.settings.get(\"Accounts_AllowPasswordChange\")\n\n\tpasswordChangeDisabled: ->\n\t\treturn t('Password_Change_Disabled')\n\n\tcustomFields: ->\n\t\treturn Meteor.user().customFields\n\nTemplate.accountProfile.onCreated ->\n\tsettingsTemplate = this.parentTemplate(3)\n\tsettingsTemplate.child ?= []\n\tsettingsTemplate.child.push this\n\n\t@clearForm = ->\n\t\t@find('#password').value = ''\n\n\t@changePassword = (newPassword, callback) ->\n\t\tinstance = @\n\t\tif not newPassword\n\t\t\treturn callback()\n\n\t\telse\n\t\t\tif !RocketChat.settings.get(\"Accounts_AllowPasswordChange\")\n\t\t\t\ttoastr.remove();\n\t\t\t\ttoastr.error t('Password_Change_Disabled')\n\t\t\t\tinstance.clearForm()\n\t\t\t\treturn\n\n\t@save = (typedPassword) ->\n\t\tinstance = @\n\n\t\tdata = { typedPassword: typedPassword }\n\n\t\tif _.trim($('#password').val()) and RocketChat.settings.get(\"Accounts_AllowPasswordChange\")\n\t\t\tdata.newPassword = $('#password').val()\n\n\t\tif _.trim $('#realname').val()\n\t\t\tdata.realname = _.trim $('#realname').val()\n\n\t\tif _.trim($('#username').val()) isnt Meteor.user().username\n\t\t\tif !RocketChat.settings.get(\"Accounts_AllowUsernameChange\")\n\t\t\t\ttoastr.remove();\n\t\t\t\ttoastr.error t('Username_Change_Disabled')\n\t\t\t\tinstance.clearForm()\n\t\t\t\treturn\n\t\t\telse\n\t\t\t\tdata.username = _.trim $('#username').val()\n\n\t\tif _.trim($('#email').val()) isnt Meteor.user().emails?[0]?.address\n\t\t\tif !RocketChat.settings.get(\"Accounts_AllowEmailChange\")\n\t\t\t\ttoastr.remove();\n\t\t\t\ttoastr.error t('Email_Change_Disabled')\n\t\t\t\tinstance.clearForm()\n\t\t\t\treturn\n\t\t\telse\n\t\t\t\tdata.email = _.trim $('#email').val()\n\n\t\tcustomFields = {}\n\t\t$('[data-customfield=true]').each () ->\n\t\t\tcustomFields[this.name] = $(this).val() or ''\n\n\t\tMeteor.call 'saveUserProfile', data, customFields, (error, results) ->\n\t\t\tif results\n\t\t\t\ttoastr.remove();\n\t\t\t\ttoastr.success t('Profile_saved_successfully')\n\t\t\t\tswal.close()\n\t\t\t\tinstance.clearForm()\n\n\t\t\tif error\n\t\t\t\ttoastr.remove();\n\t\t\t\thandleError(error)\n\nTemplate.accountProfile.onRendered ->\n\tTracker.afterFlush ->\n\t\t# this should throw an error-template\n\t\tFlowRouter.go(\"home\") if !RocketChat.settings.get(\"Accounts_AllowUserProfileChange\")\n\t\tSideNav.setFlex \"accountFlex\"\n\t\tSideNav.openFlex()\n\nTemplate.accountProfile.events\n\t'click .submit button': (e, instance) ->\n\t\tuser = Meteor.user()\n\t\treqPass = ((_.trim($('#email').val()) isnt user?.emails?[0]?.address) or _.trim($('#password').val())) and s.trim(user?.services?.password?.bcrypt)\n\t\tunless reqPass\n\t\t\treturn instance.save()\n\n\t\tswal\n\t\t\ttitle: t(\"Please_enter_your_password\"),\n\t\t\ttext: t(\"For_your_security_you_must_enter_your_current_password_to_continue\"),\n\t\t\ttype: \"input\",\n\t\t\tinputType: \"password\",\n\t\t\tshowCancelButton: true,\n\t\t\tcloseOnConfirm: false,\n\t\t\tconfirmButtonText: t('Save'),\n\t\t\tcancelButtonText: t('Cancel')\n\n\t\t, (typedPassword) =>\n\t\t\tif typedPassword\n\t\t\t\ttoastr.remove();\n\t\t\t\ttoastr.warning(t(\"Please_wait_while_your_profile_is_being_saved\"));\n\t\t\t\tinstance.save(SHA256(typedPassword))\n\t\t\telse\n\t\t\t\tswal.showInputError(t(\"You_need_to_type_in_your_password_in_order_to_do_this\"));\n\t\t\t\treturn false;\n\t'click .logoutOthers button': (event, templateInstance) ->\n\t\tMeteor.logoutOtherClients (error) ->\n\t\t\tif error\n\t\t\t\ttoastr.remove();\n\t\t\t\thandleError(error)\n\t\t\telse\n\t\t\t\ttoastr.remove();\n\t\t\t\ttoastr.success t('Logged_out_of_other_clients_successfully')\n\t'click .delete-account button': (e) ->\n\t\te.preventDefault();\n\t\tif s.trim Meteor.user()?.services?.password?.bcrypt\n\t\t\tswal\n\t\t\t\ttitle: t(\"Are_you_sure_you_want_to_delete_your_account\"),\n\t\t\t\ttext: t(\"If_you_are_sure_type_in_your_password\"),\n\t\t\t\ttype: \"input\",\n\t\t\t\tinputType: \"password\",\n\t\t\t\tshowCancelButton: true,\n\t\t\t\tcloseOnConfirm: false,\n\t\t\t\tconfirmButtonText: t('Delete')\n\t\t\t\tcancelButtonText: t('Cancel')\n\n\t\t\t, (typedPassword) =>\n\t\t\t\tif typedPassword\n\t\t\t\t\ttoastr.remove();\n\t\t\t\t\ttoastr.warning(t(\"Please_wait_while_your_account_is_being_deleted\"));\n\t\t\t\t\tMeteor.call 'deleteUserOwnAccount', SHA256(typedPassword), (error, results) ->\n\t\t\t\t\t\tif error\n\t\t\t\t\t\t\ttoastr.remove();\n\t\t\t\t\t\t\tswal.showInputError(t(\"Your_password_is_wrong\"));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tswal.close();\n\t\t\t\telse\n\t\t\t\t\tswal.showInputError(t(\"You_need_to_type_in_your_password_in_order_to_do_this\"));\n\t\t\t\t\treturn false;\n\t\telse\n\t\t\tswal\n\t\t\t\ttitle: t(\"Are_you_sure_you_want_to_delete_your_account\"),\n\t\t\t\ttext: t(\"If_you_are_sure_type_in_your_username\"),\n\t\t\t\ttype: \"input\",\n\t\t\t\tshowCancelButton: true,\n\t\t\t\tcloseOnConfirm: false,\n\t\t\t\tconfirmButtonText: t('Delete')\n\t\t\t\tcancelButtonText: t('Cancel')\n\n\t\t\t, (deleteConfirmation) =>\n\t\t\t\tif deleteConfirmation is Meteor.user()?.username\n\t\t\t\t\ttoastr.remove();\n\t\t\t\t\ttoastr.warning(t(\"Please_wait_while_your_account_is_being_deleted\"));\n\t\t\t\t\tMeteor.call 'deleteUserOwnAccount', deleteConfirmation, (error, results) ->\n\t\t\t\t\t\tif error\n\t\t\t\t\t\t\ttoastr.remove();\n\t\t\t\t\t\t\tswal.showInputError(t(\"Your_password_is_wrong\"));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tswal.close();\n\t\t\t\telse\n\t\t\t\t\tswal.showInputError(t(\"You_need_to_type_in_your_username_in_order_to_do_this\"));\n\t\t\t\t\treturn false;\n\n\t'click #resend-verification-email': (e) ->\n\t\te.preventDefault()\n\n\t\te.currentTarget.innerHTML = e.currentTarget.innerHTML + ' ...'\n\t\te.currentTarget.disabled = true\n\n\t\tMeteor.call 'sendConfirmationEmail', Meteor.user().emails?[0]?.address, (error, results) =>\n\t\t\tif results\n\t\t\t\ttoastr.success t('Verification_email_sent')\n\t\t\telse if error\n\t\t\t\thandleError(error)\n\n\t\t\te.currentTarget.innerHTML = e.currentTarget.innerHTML.replace(' ...', '')\n\t\t\te.currentTarget.disabled = false\n","import toastr from 'toastr';\n\nTemplate.accountProfile.helpers({\n  allowDeleteOwnAccount: function() {\n    return RocketChat.settings.get('Accounts_AllowDeleteOwnAccount');\n  },\n  realname: function() {\n    return Meteor.user().name;\n  },\n  username: function() {\n    return Meteor.user().username;\n  },\n  email: function() {\n    var ref, ref1;\n    return (ref = Meteor.user().emails) != null ? (ref1 = ref[0]) != null ? ref1.address : void 0 : void 0;\n  },\n  emailVerified: function() {\n    var ref, ref1;\n    return (ref = Meteor.user().emails) != null ? (ref1 = ref[0]) != null ? ref1.verified : void 0 : void 0;\n  },\n  allowUsernameChange: function() {\n    return RocketChat.settings.get(\"Accounts_AllowUsernameChange\") && RocketChat.settings.get(\"LDAP_Enable\") !== true;\n  },\n  allowEmailChange: function() {\n    return RocketChat.settings.get(\"Accounts_AllowEmailChange\");\n  },\n  usernameChangeDisabled: function() {\n    return t('Username_Change_Disabled');\n  },\n  allowPasswordChange: function() {\n    return RocketChat.settings.get(\"Accounts_AllowPasswordChange\");\n  },\n  passwordChangeDisabled: function() {\n    return t('Password_Change_Disabled');\n  },\n  customFields: function() {\n    return Meteor.user().customFields;\n  }\n});\n\nTemplate.accountProfile.onCreated(function() {\n  var settingsTemplate;\n  settingsTemplate = this.parentTemplate(3);\n  if (settingsTemplate.child == null) {\n    settingsTemplate.child = [];\n  }\n  settingsTemplate.child.push(this);\n  this.clearForm = function() {\n    return this.find('#password').value = '';\n  };\n  this.changePassword = function(newPassword, callback) {\n    var instance;\n    instance = this;\n    if (!newPassword) {\n      return callback();\n    } else {\n      if (!RocketChat.settings.get(\"Accounts_AllowPasswordChange\")) {\n        toastr.remove();\n        toastr.error(t('Password_Change_Disabled'));\n        instance.clearForm();\n      }\n    }\n  };\n  return this.save = function(typedPassword) {\n    var customFields, data, instance, ref, ref1;\n    instance = this;\n    data = {\n      typedPassword: typedPassword\n    };\n    if (_.trim($('#password').val()) && RocketChat.settings.get(\"Accounts_AllowPasswordChange\")) {\n      data.newPassword = $('#password').val();\n    }\n    if (_.trim($('#realname').val())) {\n      data.realname = _.trim($('#realname').val());\n    }\n    if (_.trim($('#username').val()) !== Meteor.user().username) {\n      if (!RocketChat.settings.get(\"Accounts_AllowUsernameChange\")) {\n        toastr.remove();\n        toastr.error(t('Username_Change_Disabled'));\n        instance.clearForm();\n        return;\n      } else {\n        data.username = _.trim($('#username').val());\n      }\n    }\n    if (_.trim($('#email').val()) !== ((ref = Meteor.user().emails) != null ? (ref1 = ref[0]) != null ? ref1.address : void 0 : void 0)) {\n      if (!RocketChat.settings.get(\"Accounts_AllowEmailChange\")) {\n        toastr.remove();\n        toastr.error(t('Email_Change_Disabled'));\n        instance.clearForm();\n        return;\n      } else {\n        data.email = _.trim($('#email').val());\n      }\n    }\n    customFields = {};\n    $('[data-customfield=true]').each(function() {\n      return customFields[this.name] = $(this).val() || '';\n    });\n    return Meteor.call('saveUserProfile', data, customFields, function(error, results) {\n      if (results) {\n        toastr.remove();\n        toastr.success(t('Profile_saved_successfully'));\n        swal.close();\n        instance.clearForm();\n      }\n      if (error) {\n        toastr.remove();\n        return handleError(error);\n      }\n    });\n  };\n});\n\nTemplate.accountProfile.onRendered(function() {\n  return Tracker.afterFlush(function() {\n    if (!RocketChat.settings.get(\"Accounts_AllowUserProfileChange\")) {\n      FlowRouter.go(\"home\");\n    }\n    SideNav.setFlex(\"accountFlex\");\n    return SideNav.openFlex();\n  });\n});\n\nTemplate.accountProfile.events({\n  'click .submit button': function(e, instance) {\n    var ref, ref1, ref2, ref3, reqPass, user;\n    user = Meteor.user();\n    reqPass = ((_.trim($('#email').val()) !== (user != null ? (ref = user.emails) != null ? (ref1 = ref[0]) != null ? ref1.address : void 0 : void 0 : void 0)) || _.trim($('#password').val())) && s.trim(user != null ? (ref2 = user.services) != null ? (ref3 = ref2.password) != null ? ref3.bcrypt : void 0 : void 0 : void 0);\n    if (!reqPass) {\n      return instance.save();\n    }\n    return swal({\n      title: t(\"Please_enter_your_password\"),\n      text: t(\"For_your_security_you_must_enter_your_current_password_to_continue\"),\n      type: \"input\",\n      inputType: \"password\",\n      showCancelButton: true,\n      closeOnConfirm: false,\n      confirmButtonText: t('Save'),\n      cancelButtonText: t('Cancel')\n    }, (function(_this) {\n      return function(typedPassword) {\n        if (typedPassword) {\n          toastr.remove();\n          toastr.warning(t(\"Please_wait_while_your_profile_is_being_saved\"));\n          return instance.save(SHA256(typedPassword));\n        } else {\n          swal.showInputError(t(\"You_need_to_type_in_your_password_in_order_to_do_this\"));\n          return false;\n        }\n      };\n    })(this));\n  },\n  'click .logoutOthers button': function(event, templateInstance) {\n    return Meteor.logoutOtherClients(function(error) {\n      if (error) {\n        toastr.remove();\n        return handleError(error);\n      } else {\n        toastr.remove();\n        return toastr.success(t('Logged_out_of_other_clients_successfully'));\n      }\n    });\n  },\n  'click .delete-account button': function(e) {\n    var ref, ref1, ref2;\n    e.preventDefault();\n    if (s.trim((ref = Meteor.user()) != null ? (ref1 = ref.services) != null ? (ref2 = ref1.password) != null ? ref2.bcrypt : void 0 : void 0 : void 0)) {\n      return swal({\n        title: t(\"Are_you_sure_you_want_to_delete_your_account\"),\n        text: t(\"If_you_are_sure_type_in_your_password\"),\n        type: \"input\",\n        inputType: \"password\",\n        showCancelButton: true,\n        closeOnConfirm: false,\n        confirmButtonText: t('Delete'),\n        cancelButtonText: t('Cancel')\n      }, (function(_this) {\n        return function(typedPassword) {\n          if (typedPassword) {\n            toastr.remove();\n            toastr.warning(t(\"Please_wait_while_your_account_is_being_deleted\"));\n            return Meteor.call('deleteUserOwnAccount', SHA256(typedPassword), function(error, results) {\n              if (error) {\n                toastr.remove();\n                return swal.showInputError(t(\"Your_password_is_wrong\"));\n              } else {\n                return swal.close();\n              }\n            });\n          } else {\n            swal.showInputError(t(\"You_need_to_type_in_your_password_in_order_to_do_this\"));\n            return false;\n          }\n        };\n      })(this));\n    } else {\n      return swal({\n        title: t(\"Are_you_sure_you_want_to_delete_your_account\"),\n        text: t(\"If_you_are_sure_type_in_your_username\"),\n        type: \"input\",\n        showCancelButton: true,\n        closeOnConfirm: false,\n        confirmButtonText: t('Delete'),\n        cancelButtonText: t('Cancel')\n      }, (function(_this) {\n        return function(deleteConfirmation) {\n          var ref3;\n          if (deleteConfirmation === ((ref3 = Meteor.user()) != null ? ref3.username : void 0)) {\n            toastr.remove();\n            toastr.warning(t(\"Please_wait_while_your_account_is_being_deleted\"));\n            return Meteor.call('deleteUserOwnAccount', deleteConfirmation, function(error, results) {\n              if (error) {\n                toastr.remove();\n                return swal.showInputError(t(\"Your_password_is_wrong\"));\n              } else {\n                return swal.close();\n              }\n            });\n          } else {\n            swal.showInputError(t(\"You_need_to_type_in_your_username_in_order_to_do_this\"));\n            return false;\n          }\n        };\n      })(this));\n    }\n  },\n  'click #resend-verification-email': function(e) {\n    var ref, ref1;\n    e.preventDefault();\n    e.currentTarget.innerHTML = e.currentTarget.innerHTML + ' ...';\n    e.currentTarget.disabled = true;\n    return Meteor.call('sendConfirmationEmail', (ref = Meteor.user().emails) != null ? (ref1 = ref[0]) != null ? ref1.address : void 0 : void 0, (function(_this) {\n      return function(error, results) {\n        if (results) {\n          toastr.success(t('Verification_email_sent'));\n        } else if (error) {\n          handleError(error);\n        }\n        e.currentTarget.innerHTML = e.currentTarget.innerHTML.replace(' ...', '');\n        return e.currentTarget.disabled = false;\n      };\n    })(this));\n  }\n});\n"]}