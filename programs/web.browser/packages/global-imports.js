/* Imports for global scope */

check = Package.check.check;
Match = Package.check.Match;
EJSON = Package.ejson.EJSON;
FastClick = Package.fastclick.FastClick;
HTTP = Package.http.HTTP;
$ = Package.jquery.$;
jQuery = Package.jquery.jQuery;
Log = Package.logging.Log;
Mongo = Package.mongo.Mongo;
Random = Package.random.Random;
RateLimiter = Package['rate-limit'].RateLimiter;
ReactiveDict = Package['reactive-dict'].ReactiveDict;
ReactiveVar = Package['reactive-var'].ReactiveVar;
Reload = Package.reload.Reload;
ServiceConfiguration = Package['service-configuration'].ServiceConfiguration;
Session = Package.session.Session;
Spacebars = Package.spacebars.Spacebars;
Tracker = Package.tracker.Tracker;
Deps = Package.tracker.Deps;
CustomOAuth = Package['rocketchat:custom-oauth'].CustomOAuth;
renderEmoji = Package['rocketchat:emoji'].renderEmoji;
fileUploadHandler = Package['rocketchat:file-upload'].fileUploadHandler;
FileUpload = Package['rocketchat:file-upload'].FileUpload;
Importer = Package['rocketchat:importer'].Importer;
RocketChat = Package['rocketchat:lib'].RocketChat;
RocketChatTabBar = Package['rocketchat:lib'].RocketChatTabBar;
Logger = Package['rocketchat:logger'].Logger;
SystemLogger = Package['rocketchat:logger'].SystemLogger;
LoggerManager = Package['rocketchat:logger'].LoggerManager;
Mailer = Package['rocketchat:mailer'].Mailer;
Streamer = Package['rocketchat:streamer'].Streamer;
renderMessageBody = Package['rocketchat:ui-message'].renderMessageBody;
WebRTC = Package['rocketchat:webrtc'].WebRTC;
Kadira = Package['rocketchat:monitoring'].Kadira;
DelayedTask = Package['konecty:delayed-task'].DelayedTask;
UserPresence = Package['konecty:user-presence'].UserPresence;
Status = Package['francocatena:status'].Status;
Gravatar = Package['jparker:gravatar'].Gravatar;
BlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;
FlowRouter = Package['kadira:flow-router'].FlowRouter;
SandstormAccounts = Package['kenton:accounts-sandstorm'].SandstormAccounts;
TimeSync = Package['mizzao:timesync'].TimeSync;
ReactiveStore = Package['mrt:reactive-store'].ReactiveStore;
Helpers = Package['raix:handlebar-helpers'].Helpers;
Push = Package['raix:push'].Push;
s = Package['underscorestring:underscore.string'].s;
slugify = Package['yasaricli:slugify'].slugify;
Meta = Package['yasinuslu:blaze-meta'].Meta;
Accounts = Package['accounts-base'].Accounts;
Facebook = Package['facebook-oauth'].Facebook;
Github = Package['github-oauth'].Github;
Google = Package['google-oauth'].Google;
MeteorDeveloperAccounts = Package['meteor-developer-oauth'].MeteorDeveloperAccounts;
Twitter = Package['twitter-oauth'].Twitter;
Blaze = Package.ui.Blaze;
UI = Package.ui.UI;
Handlebars = Package.ui.Handlebars;
Template = Package['templating-runtime'].Template;
meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;
Promise = Package.promise.Promise;
meteorInstall = Package.modules.meteorInstall;
process = Package.modules.process;
Meteor = Package.meteor.Meteor;
global = Package.meteor.global;
meteorEnv = Package.meteor.meteorEnv;
WebApp = Package.webapp.WebApp;
_ = Package.underscore._;
DDP = Package['ddp-client'].DDP;
LaunchScreen = Package['launch-screen'].LaunchScreen;
OAuth = Package.oauth.OAuth;
Oauth = Package.oauth.Oauth;
TAPi18next = Package['tap:i18n'].TAPi18next;
TAPi18n = Package['tap:i18n'].TAPi18n;
LinkedIn = Package['pauli:linkedin-oauth'].LinkedIn;
CryptoJS = Package['tmeasday:crypto-base'].CryptoJS;
HTML = Package.htmljs.HTML;
Symbol = Package['ecmascript-runtime-client'].Symbol;
Map = Package['ecmascript-runtime-client'].Map;
Set = Package['ecmascript-runtime-client'].Set;
Autoupdate = Package.autoupdate.Autoupdate;

