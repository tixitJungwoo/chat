{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:statistics/lib/rocketchat.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/models/Statistics.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/functions/get.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/functions/save.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/methods/getStatistics.js"],"names":["RocketChat","statistics","models","Statistics","tryEnsureIndex","findOneById","_id","options","query","findOne","findLast","sort","createdAt","limit","records","find","fetch","_Base","get","_getStatistics","uniqueId","settings","Settings","installedAt","Info","version","tag","branch","totalUsers","Meteor","users","count","activeUsers","active","nonActiveUsers","onlineUsers","statusConnection","awayUsers","offlineUsers","totalRooms","Rooms","totalChannels","findByType","totalPrivateGroups","totalDirect","totlalLivechat","totalMessages","Messages","totalChannelMessages","_","reduce","fields","_countChannelMessages","num","room","msgs","totalPrivateGroupMessages","_countPrivateGroupMessages","totalDirectMessages","_countDirectMessages","totalLivechatMessages","_countLivechatMessages","lastLogin","Users","getLastLogin","lastMessageSentAt","getLastTimestamp","lastSeenSubscription","Subscriptions","getLastSeen","os","Npm","require","type","platform","arch","release","uptime","loadavg","totalmem","freemem","cpus","process","nodeVersion","pid","deploy","method","env","DEPLOY_METHOD","DEPLOY_PLATFORM","migration","Migrations","_getControl","instanceCount","InstanceStatus","getCollection","_updatedAt","$gt","Date","now","MongoInternals","defaultRemoteCollectionDriver","mongo","_oplogHandle","onOplogEntry","oplogEnabled","save","insert","methods","getStatistics","refresh","userId","Error","authz","hasPermission"],"mappings":"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","file":"/packages/rocketchat_statistics.js","sourcesContent":["RocketChat.statistics = {};\n","RocketChat.models.Statistics = new class extends RocketChat.models._Base {\n\tconstructor() {\n\t\tsuper('statistics');\n\n\t\tthis.tryEnsureIndex({ 'createdAt': 1 });\n\t}\n\n\t// FIND ONE\n\tfindOneById(_id, options) {\n\t\tconst query = { _id };\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindLast() {\n\t\tconst options = {\n\t\t\tsort: {\n\t\t\t\tcreatedAt: -1\n\t\t\t},\n\t\t\tlimit: 1\n\t\t};\n\t\tconst records = this.find({}, options).fetch();\n\t\treturn records && records[0];\n\t}\n};\n","/* global InstanceStatus, MongoInternals */\nRocketChat.statistics.get = function _getStatistics() {\n\tconst statistics = {};\n\n\t// Version\n\tstatistics.uniqueId = RocketChat.settings.get('uniqueID');\n\tif (RocketChat.models.Settings.findOne('uniqueID')) {\n\t\tstatistics.installedAt = RocketChat.models.Settings.findOne('uniqueID').createdAt;\n\t}\n\n\tif (RocketChat.Info) {\n\t\tstatistics.version = RocketChat.Info.version;\n\t\tstatistics.tag = RocketChat.Info.tag;\n\t\tstatistics.branch = RocketChat.Info.branch;\n\t}\n\n\t// User statistics\n\tstatistics.totalUsers = Meteor.users.find().count();\n\tstatistics.activeUsers = Meteor.users.find({ active: true }).count();\n\tstatistics.nonActiveUsers = statistics.totalUsers - statistics.activeUsers;\n\tstatistics.onlineUsers = Meteor.users.find({ statusConnection: 'online' }).count();\n\tstatistics.awayUsers = Meteor.users.find({ statusConnection: 'away' }).count();\n\tstatistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers;\n\n\t// Room statistics\n\tstatistics.totalRooms = RocketChat.models.Rooms.find().count();\n\tstatistics.totalChannels = RocketChat.models.Rooms.findByType('c').count();\n\tstatistics.totalPrivateGroups = RocketChat.models.Rooms.findByType('p').count();\n\tstatistics.totalDirect = RocketChat.models.Rooms.findByType('d').count();\n\tstatistics.totlalLivechat = RocketChat.models.Rooms.findByType('l').count();\n\n\t// Message statistics\n\tstatistics.totalMessages = RocketChat.models.Messages.find().count();\n\tstatistics.totalChannelMessages = _.reduce(RocketChat.models.Rooms.findByType('c', { fields: { 'msgs': 1 }}).fetch(), function _countChannelMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalPrivateGroupMessages = _.reduce(RocketChat.models.Rooms.findByType('p', { fields: { 'msgs': 1 }}).fetch(), function _countPrivateGroupMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalDirectMessages = _.reduce(RocketChat.models.Rooms.findByType('d', { fields: { 'msgs': 1 }}).fetch(), function _countDirectMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalLivechatMessages = _.reduce(RocketChat.models.Rooms.findByType('l', { fields: { 'msgs': 1 }}).fetch(), function _countLivechatMessages(num, room) { return num + room.msgs; }, 0);\n\n\tstatistics.lastLogin = RocketChat.models.Users.getLastLogin();\n\tstatistics.lastMessageSentAt = RocketChat.models.Messages.getLastTimestamp();\n\tstatistics.lastSeenSubscription = RocketChat.models.Subscriptions.getLastSeen();\n\n\tconst os = Npm.require('os');\n\tstatistics.os = {\n\t\ttype: os.type(),\n\t\tplatform: os.platform(),\n\t\tarch: os.arch(),\n\t\trelease: os.release(),\n\t\tuptime: os.uptime(),\n\t\tloadavg: os.loadavg(),\n\t\ttotalmem: os.totalmem(),\n\t\tfreemem: os.freemem(),\n\t\tcpus: os.cpus()\n\t};\n\n\tstatistics.process = {\n\t\tnodeVersion: process.version,\n\t\tpid: process.pid,\n\t\tuptime: process.uptime()\n\t};\n\n\tstatistics.deploy = {\n\t\tmethod: process.env.DEPLOY_METHOD || 'tar',\n\t\tplatform: process.env.DEPLOY_PLATFORM || 'selfinstall'\n\t};\n\n\tstatistics.migration = RocketChat.Migrations._getControl();\n\tstatistics.instanceCount = InstanceStatus.getCollection().find({ _updatedAt: { $gt: new Date(Date.now() - process.uptime() * 1000 - 2000) }}).count();\n\n\tif (MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle && MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle.onOplogEntry && RocketChat.settings.get('Force_Disable_OpLog_For_Cache') !== true) {\n\t\tstatistics.oplogEnabled = true;\n\t}\n\n\treturn statistics;\n};\n","RocketChat.statistics.save = function() {\n\tconst statistics = RocketChat.statistics.get();\n\tstatistics.createdAt = new Date;\n\tRocketChat.models.Statistics.insert(statistics);\n\treturn statistics;\n};\n","Meteor.methods({\n\tgetStatistics(refresh) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getStatistics' });\n\t\t}\n\n\t\tif (RocketChat.authz.hasPermission(Meteor.userId(), 'view-statistics') !== true) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'getStatistics' });\n\t\t}\n\n\t\tif (refresh) {\n\t\t\treturn RocketChat.statistics.save();\n\t\t} else {\n\t\t\treturn RocketChat.models.Statistics.findLast();\n\t\t}\n\t}\n});\n"]}