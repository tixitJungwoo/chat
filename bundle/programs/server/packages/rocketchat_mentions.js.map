{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:mentions/server.js"],"names":["MentionsServer","message","msgMentionRegex","RegExp","RocketChat","settings","get","mentionsAll","userMentions","mentions","msg","match","forEach","m","mention","trim","substr","push","messageMaxAll","allChannel","models","Rooms","findOneById","rid","usernames","length","_id","username","Meteor","users","find","$in","_","unique","fields","fetch","verifiedMentions","msgChannelRegex","channels","map","c","verifiedChannels","name","t","callbacks","add","priority","HIGH"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;EAKA,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AAChC,KAAMC,kBAAkB,IAAIC,MAAJ,yBAAkCC,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,uBAAxB,CAAlC,QAAwF,GAAxF,CAAxB;AACA,KAAMC,cAAc,EAApB;AACA,KAAMC,eAAe,EAArB;AACA,KAAIC,WAAWR,QAAQS,GAAR,CAAYC,KAAZ,CAAkBT,eAAlB,CAAf;;AACA,KAAIO,QAAJ,EAAc;AACbA,WAASG,OAAT,CAAiB,UAACC,CAAD,EAAO;AACvB,OAAMC,UAAUD,EAAEE,IAAF,GAASC,MAAT,CAAgB,CAAhB,CAAhB;;AACA,OAAIF,YAAY,KAAZ,IAAqBA,YAAY,MAArC,EAA6C;AAC5C,WAAON,aAAaS,IAAb,CAAkBH,OAAlB,CAAP;AACA;;AACD,OAAIA,YAAY,KAAhB,EAAuB;AACtB,QAAMI,gBAAgBd,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,gBAAxB,CAAtB;AACA,QAAMa,aAAaf,WAAWgB,MAAX,CAAkBC,KAAlB,CAAwBC,WAAxB,CAAoCrB,QAAQsB,GAA5C,CAAnB;;AACA,QAAIL,kBAAkB,CAAlB,IAAuBC,WAAWK,SAAX,CAAqBC,MAArB,IAA+BP,aAA1D,EAAyE;AACxE;AACA;AACD;;AACDX,eAAYU,IAAZ,CAAiB;AAChBS,SAAKZ,OADW;AAEhBa,cAAUb;AAFM,IAAjB;AAIA,GAhBD;AAiBAL,aAAWD,aAAaiB,MAAb,GAAsBG,OAAOC,KAAP,CAAaC,IAAb,CAAkB;AAAEH,aAAU;AAACI,SAAKC,EAAEC,MAAF,CAASzB,YAAT;AAAN;AAAZ,GAAlB,EAA8D;AAAE0B,WAAQ;AAACR,SAAK,IAAN;AAAYC,cAAU;AAAtB;AAAV,GAA9D,EAAuGQ,KAAvG,EAAtB,GAAuI,EAAlJ;AAEA,MAAMC,6BAAuB7B,WAAvB,mCAAuCE,QAAvC,EAAN;;AACA,MAAI2B,iBAAiBX,MAAjB,KAA4B,CAAhC,EAAmC;AAClCxB,WAAQQ,QAAR,GAAmB2B,gBAAnB;AACA;AACD;;AAED,KAAMC,kBAAkB,IAAIlC,MAAJ,yBAAkCC,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,uBAAxB,CAAlC,QAAwF,GAAxF,CAAxB;AACA,KAAIgC,WAAWrC,QAAQS,GAAR,CAAYC,KAAZ,CAAkB0B,eAAlB,CAAf;;AACA,KAAIC,QAAJ,EAAc;AACbA,aAAWA,SAASC,GAAT,CAAa;AAAA,UAAKC,EAAEzB,IAAF,GAASC,MAAT,CAAgB,CAAhB,CAAL;AAAA,GAAb,CAAX;AACA,MAAMyB,mBAAmBrC,WAAWgB,MAAX,CAAkBC,KAAlB,CAAwBS,IAAxB,CAA6B;AAAEY,SAAM;AAACX,SAAKC,EAAEC,MAAF,CAASK,QAAT;AAAN,IAAR;AAAmCK,MAAG;AAAtC,GAA7B,EAA0E;AAAET,WAAQ;AAACR,SAAK,CAAN;AAASgB,UAAM;AAAf;AAAV,GAA1E,EAAyGP,KAAzG,EAAzB;;AACA,MAAIM,iBAAiBhB,MAAjB,KAA4B,CAAhC,EAAmC;AAClCxB,WAAQqC,QAAR,GAAmBG,gBAAnB;AACA;AACD;;AACD,QAAOxC,OAAP;AACA;;AAEDG,WAAWwC,SAAX,CAAqBC,GAArB,CAAyB,mBAAzB,EAA8C7C,cAA9C,EAA8DI,WAAWwC,SAAX,CAAqBE,QAArB,CAA8BC,IAA5F,EAAkG,UAAlG,E","file":"/packages/rocketchat_mentions.js","sourcesContent":["/*\n* Mentions is a named function that will process Mentions\n* @param {Object} message - The message object\n*/\n\nfunction MentionsServer(message) {\n\tconst msgMentionRegex = new RegExp(`(?:^|\\\\s|\\\\n)(?:@)(${ RocketChat.settings.get('UTF8_Names_Validation') })`, 'g');\n\tconst mentionsAll = [];\n\tconst userMentions = [];\n\tlet mentions = message.msg.match(msgMentionRegex);\n\tif (mentions) {\n\t\tmentions.forEach((m) => {\n\t\t\tconst mention = m.trim().substr(1);\n\t\t\tif (mention !== 'all' && mention !== 'here') {\n\t\t\t\treturn userMentions.push(mention);\n\t\t\t}\n\t\t\tif (mention === 'all') {\n\t\t\t\tconst messageMaxAll = RocketChat.settings.get('Message_MaxAll');\n\t\t\t\tconst allChannel = RocketChat.models.Rooms.findOneById(message.rid);\n\t\t\t\tif (messageMaxAll !== 0 && allChannel.usernames.length >= messageMaxAll) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmentionsAll.push({\n\t\t\t\t_id: mention,\n\t\t\t\tusername: mention\n\t\t\t});\n\t\t});\n\t\tmentions = userMentions.length ? Meteor.users.find({ username: {$in: _.unique(userMentions)}}, { fields: {_id: true, username: true }}).fetch() : [];\n\n\t\tconst verifiedMentions = [...mentionsAll, ...mentions];\n\t\tif (verifiedMentions.length !== 0) {\n\t\t\tmessage.mentions = verifiedMentions;\n\t\t}\n\t}\n\n\tconst msgChannelRegex = new RegExp(`(?:^|\\\\s|\\\\n)(?:#)(${ RocketChat.settings.get('UTF8_Names_Validation') })`, 'g');\n\tlet channels = message.msg.match(msgChannelRegex);\n\tif (channels) {\n\t\tchannels = channels.map(c => c.trim().substr(1));\n\t\tconst verifiedChannels = RocketChat.models.Rooms.find({ name: {$in: _.unique(channels)}, t: 'c'\t}, { fields: {_id: 1, name: 1 }}).fetch();\n\t\tif (verifiedChannels.length !== 0) {\n\t\t\tmessage.channels = verifiedChannels;\n\t\t}\n\t}\n\treturn message;\n}\n\nRocketChat.callbacks.add('beforeSaveMessage', MentionsServer, RocketChat.callbacks.priority.HIGH, 'mentions');\n"]}