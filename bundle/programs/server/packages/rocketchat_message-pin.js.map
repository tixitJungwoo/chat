{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:message-pin/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:message-pin/server/pinMessage.js","meteor://ðŸ’»app/packages/rocketchat:message-pin/server/publications/pinnedMessages.js","meteor://ðŸ’»app/packages/rocketchat:message-pin/server/startup/indexes.js"],"names":["Meteor","startup","RocketChat","settings","add","type","group","models","Permissions","upsert","$setOnInsert","roles","methods","pinMessage","message","pinnedAt","userId","Error","method","get","action","room","Rooms","findOneById","rid","Array","isArray","usernames","indexOf","user","username","originalMessage","Messages","_id","cloneAndSaveAsHistoryById","me","Users","pinned","Date","now","pinnedBy","callbacks","run","setPinnedByIdAndUserId","createWithTypeRoomIdMessageAndUser","attachments","msg","u","getAvatarUrlFromUsername","ts","unpinMessage","publish","limit","ready","publication","cursorHandle","findPinnedByRoom","sort","observeChanges","added","record","changed","removed","onStop","stop","defer","tryEnsureIndex","sparse"],"mappings":"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","file":"/packages/rocketchat_message-pin.js","sourcesContent":["Meteor.startup(function() {\n\tRocketChat.settings.add('Message_AllowPinning', true, {\n\t\ttype: 'boolean',\n\t\tgroup: 'Message',\n\t\t'public': true\n\t});\n\treturn RocketChat.models.Permissions.upsert('pin-message', {\n\t\t$setOnInsert: {\n\t\t\troles: ['owner', 'moderator', 'admin']\n\t\t}\n\t});\n});\n","Meteor.methods({\n\tpinMessage(message, pinnedAt) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'pinMessage'\n\t\t\t});\n\t\t}\n\t\tif (!RocketChat.settings.get('Message_AllowPinning')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Message pinning not allowed', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\t\tconst room = RocketChat.models.Rooms.findOneById(message.rid);\n\t\tif (Array.isArray(room.usernames) && room.usernames.indexOf(Meteor.user().username) === -1) {\n\t\t\treturn false;\n\t\t}\n\t\tlet originalMessage = RocketChat.models.Messages.findOneById(message._id);\n\t\tif (originalMessage == null || originalMessage._id == null) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Message you are pinning was not found', {\n\t\t\t\tmethod: 'pinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\t\t//If we keep history of edits, insert a new message to store history information\n\t\tif (RocketChat.settings.get('Message_KeepHistory')) {\n\t\t\tRocketChat.models.Messages.cloneAndSaveAsHistoryById(message._id);\n\t\t}\n\t\tconst me = RocketChat.models.Users.findOneById(Meteor.userId());\n\t\toriginalMessage.pinned = true;\n\t\toriginalMessage.pinnedAt = pinnedAt || Date.now;\n\t\toriginalMessage.pinnedBy = {\n\t\t\t_id: Meteor.userId(),\n\t\t\tusername: me.username\n\t\t};\n\t\toriginalMessage = RocketChat.callbacks.run('beforeSaveMessage', originalMessage);\n\t\tRocketChat.models.Messages.setPinnedByIdAndUserId(originalMessage._id, originalMessage.pinnedBy, originalMessage.pinned);\n\t\treturn RocketChat.models.Messages.createWithTypeRoomIdMessageAndUser('message_pinned', originalMessage.rid, '', me, {\n\t\t\tattachments: [\n\t\t\t\t{\n\t\t\t\t\t'text': originalMessage.msg,\n\t\t\t\t\t'author_name': originalMessage.u.username,\n\t\t\t\t\t'author_icon': getAvatarUrlFromUsername(originalMessage.u.username),\n\t\t\t\t\t'ts': originalMessage.ts\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t},\n\tunpinMessage(message) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\tmethod: 'unpinMessage'\n\t\t\t});\n\t\t}\n\t\tif (!RocketChat.settings.get('Message_AllowPinning')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Message pinning not allowed', {\n\t\t\t\tmethod: 'unpinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\t\tconst room = RocketChat.models.Rooms.findOneById(message.rid);\n\n\t\tif (Array.isArray(room.usernames) && room.usernames.indexOf(Meteor.user().username) === -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet originalMessage = RocketChat.models.Messages.findOneById(message._id);\n\n\t\tif (originalMessage == null || originalMessage._id == null) {\n\t\t\tthrow new Meteor.Error('error-invalid-message', 'Message you are unpinning was not found', {\n\t\t\t\tmethod: 'unpinMessage',\n\t\t\t\taction: 'Message_pinning'\n\t\t\t});\n\t\t}\n\t\t//If we keep history of edits, insert a new message to store history information\n\t\tif (RocketChat.settings.get('Message_KeepHistory')) {\n\t\t\tRocketChat.models.Messages.cloneAndSaveAsHistoryById(originalMessage._id);\n\t\t}\n\t\tconst me = RocketChat.models.Users.findOneById(Meteor.userId());\n\t\toriginalMessage.pinned = false;\n\t\toriginalMessage.pinnedBy = {\n\t\t\t_id: Meteor.userId(),\n\t\t\tusername: me.username\n\t\t};\n\t\toriginalMessage = RocketChat.callbacks.run('beforeSaveMessage', originalMessage);\n\t\treturn RocketChat.models.Messages.setPinnedByIdAndUserId(originalMessage._id, originalMessage.pinnedBy, originalMessage.pinned);\n\t}\n});\n","Meteor.publish('pinnedMessages', function(rid, limit = 50) {\n\tif (!this.userId) {\n\t\treturn this.ready();\n\t}\n\tconst publication = this;\n\n\tconst user = RocketChat.models.Users.findOneById(this.userId);\n\tif (!user) {\n\t\treturn this.ready();\n\t}\n\tconst cursorHandle = RocketChat.models.Messages.findPinnedByRoom(rid, { sort: { ts: -1 }, limit }).observeChanges({\n\t\tadded(_id, record) {\n\t\t\treturn publication.added('rocketchat_pinned_message', _id, record);\n\t\t},\n\t\tchanged(_id, record) {\n\t\t\treturn publication.changed('rocketchat_pinned_message', _id, record);\n\t\t},\n\t\tremoved(_id) {\n\t\t\treturn publication.removed('rocketchat_pinned_message', _id);\n\t\t}\n\t});\n\tthis.ready();\n\treturn this.onStop(function() {\n\t\treturn cursorHandle.stop();\n\t});\n});\n","Meteor.startup(function() {\n\treturn Meteor.defer(function() {\n\t\treturn RocketChat.models.Messages.tryEnsureIndex({\n\t\t\t'pinnedBy._id': 1\n\t\t}, {\n\t\t\tsparse: 1\n\t\t});\n\t});\n});\n"]}