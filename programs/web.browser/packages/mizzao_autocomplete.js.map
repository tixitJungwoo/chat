{"version":3,"sources":["meteor://ðŸ’»app/packages/mizzao_autocomplete/autocomplete-client.coffee","meteor://ðŸ’»app/autocomplete-client.coffee.js","meteor://ðŸ’»app/packages/mizzao_autocomplete/templates.coffee","meteor://ðŸ’»app/templates.coffee.js"],"names":["AutoCompleteRecords","getField","getFindParams","getRegExp","isServerSearch","isWholeField","validateRule","bind","fn","me","apply","arguments","Mongo","Collection","rule","_","isString","collection","subscription","Match","test","String","Error","callback","console","warn","token","RegExp","filter","limit","options","selector","sortspec","extend","sort","field","isFunction","$regex","matchAll","$options","obj","str","j","key","len","ref","split","length","AutoComplete","KEYS","settings","onItemClick","position","rules","expressions","k","len1","ref1","results","push","call","matched","loaded","ruleDep","Deps","Dependency","filterDep","loadingDep","sub","comp","autorun","_this","ref2","subName","stop","matchedRule","getFilter","setLoaded","Meteor","subscribe","prototype","teardown","depend","setMatchedRule","i","changed","setFilter","x","isLoaded","val","onKeyUp","breakLoop","matches","startpos","$element","element","selectionStart","getText","substring","match","onKeyDown","e","constructor","indexOf","keyCode","select","preventDefault","stopPropagation","next","prev","blur","hideList","onFocus","defer","onBlur","setTimeout","doc","processSelection","onItemHover","tmplInst","$","removeClass","target","closest","addClass","filteredList","ensureSelection","find","isShowing","showing","positionContainer","node","Blaze","getData","replacement","replace","setText","trigger","finalFight","fullStuff","newPosition","posfix","separator","setSelectionRange","text","is","html","offset","pos","getCaretCoordinates","left","width","outerWidth","bottom","offsetParent","height","top","parseInt","css","selectedItem","currentItem","currentTemplate","template","AutocompleteTest","records","acEvents","attributes","autocompleteHelpers","t","ac","Template","inputAutocomplete","events","textareaAutocomplete","omit","autocompleteContainer","parentView","templateInstance","onViewReady","firstNode","With","_autocompleteContainer","helpers","rendered","data","destroyed","empty","count","noMatchTemplate","_noMatch"],"mappings":"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","file":"/packages/mizzao_autocomplete.js","sourcesContent":["AutoCompleteRecords = new Mongo.Collection(\"autocompleteRecords\")\n\nisServerSearch = (rule) -> _.isString(rule.collection)\n\nvalidateRule = (rule) ->\n  if rule.subscription? and not Match.test(rule.collection, String)\n    throw new Error(\"Collection name must be specified as string for server-side search\")\n\n  # XXX back-compat message, to be removed\n  if rule.callback?\n    console.warn(\"autocomplete no longer supports callbacks; use event listeners instead.\")\n\nisWholeField = (rule) ->\n  # either '' or null both count as whole field.\n  return !rule.token\n\ngetRegExp = (rule) ->\n  unless isWholeField(rule)\n    # Expressions for the range from the last word break to the current cursor position\n    new RegExp('(^|\\\\b|\\\\s)' + rule.token + '([\\\\w.]*)$')\n  else\n    # Whole-field behavior - word characters or spaces\n    new RegExp('(^)(.*)$')\n\ngetFindParams = (rule, filter, limit) ->\n  # This is a different 'filter' - the selector from the settings\n  # We need to extend so that we don't copy over rule.filter\n  selector = _.extend({}, rule.filter || {})\n  options = { limit: limit }\n\n  # Match anything, no sort, limit X\n  return [ selector, options ] unless filter\n\n  if rule.sort and rule.field\n    sortspec = {}\n    # Only sort if there is a filter, for faster performance on a match of anything\n    sortspec[rule.field] = 1\n    options.sort = sortspec\n\n  if _.isFunction(rule.selector)\n    # Custom selector\n    _.extend(selector, rule.selector(filter))\n  else\n    selector[rule.field] = {\n      $regex: if rule.matchAll then filter else \"^\" + filter\n      # default is case insensitive search - empty string is not the same as undefined!\n      $options: if (typeof rule.options is 'undefined') then 'i' else rule.options\n    }\n\n  return [ selector, options ]\n\ngetField = (obj, str) ->\n  obj = obj[key] for key in str.split(\".\")\n  return obj\n\nclass @AutoComplete\n\n  @KEYS: [\n    40, # DOWN\n    38, # UP\n    13, # ENTER\n    27, # ESCAPE\n    9   # TAB\n  ]\n\n  constructor: (settings) ->\n    @limit = settings.limit || 5\n    @position = settings.position || \"bottom\"\n\n    @rules = settings.rules\n    validateRule(rule) for rule in @rules\n\n    @expressions = (getRegExp(rule) for rule in @rules)\n\n    @matched = -1\n    @loaded = true\n\n    # Reactive dependencies for current matching rule and filter\n    @ruleDep = new Deps.Dependency\n    @filterDep = new Deps.Dependency\n    @loadingDep = new Deps.Dependency\n\n    # autosubscribe to the record set published by the server based on the filter\n    # This will tear down server subscriptions when they are no longer being used.\n    @sub = null\n    @comp = Deps.autorun =>\n      # Stop any existing sub immediately, don't wait\n      @sub?.stop()\n\n      return unless (rule = @matchedRule()) and (filter = @getFilter()) isnt null\n\n      # subscribe only for server-side collections\n      unless isServerSearch(rule)\n        @setLoaded(true) # Immediately loaded\n        return\n\n      [ selector, options ] = getFindParams(rule, filter, @limit)\n\n      # console.debug 'Subscribing to <%s> in <%s>.<%s>', filter, rule.collection, rule.field\n      @setLoaded(false)\n      subName = rule.subscription || \"autocomplete-recordset\"\n      @sub = Meteor.subscribe(subName,\n        selector, options, rule.collection, => @setLoaded(true))\n\n  teardown: ->\n    # Stop the reactive computation we started for this autocomplete instance\n    @comp.stop()\n\n  # reactive getters and setters for @filter and the currently matched rule\n  matchedRule: ->\n    @ruleDep.depend()\n    if @matched >= 0 then @rules[@matched] else null\n\n  setMatchedRule: (i) ->\n    @matched = i\n    @ruleDep.changed()\n\n  getFilter: ->\n    @filterDep.depend()\n    return @filter\n\n  setFilter: (x) ->\n    @filter = x\n    @filterDep.changed()\n    return @filter\n\n  isLoaded: ->\n    @loadingDep.depend()\n    return @loaded\n\n  setLoaded: (val) ->\n    return if val is @loaded # Don't cause redraws unnecessarily\n    @loaded = val\n    @loadingDep.changed()\n\n  onKeyUp: ->\n    return unless @$element # Don't try to do this while loading\n    startpos = @element.selectionStart\n    val = @getText().substring(0, startpos)\n\n    ###\n      Matching on multiple expressions.\n      We always go from a matched state to an unmatched one\n      before going to a different matched one.\n    ###\n    i = 0\n    breakLoop = false\n    while i < @expressions.length\n      matches = val.match(@expressions[i])\n\n      # matching -> not matching\n      if not matches and @matched is i\n        @setMatchedRule(-1)\n        breakLoop = true\n\n      # not matching -> matching\n      if matches and @matched is -1\n        @setMatchedRule(i)\n        breakLoop = true\n\n      # Did filter change?\n      if matches and @filter isnt matches[2]\n        @setFilter(matches[2])\n        breakLoop = true\n\n      break if breakLoop\n      i++\n\n  onKeyDown: (e) ->\n    return if @matched is -1 or (@constructor.KEYS.indexOf(e.keyCode) < 0)\n\n    switch e.keyCode\n      when 9, 13 # TAB, ENTER\n        if @select() # Don't jump fields or submit if select successful\n          e.preventDefault()\n          e.stopPropagation()\n      # preventDefault needed below to avoid moving cursor when selecting\n      when 40 # DOWN\n        e.preventDefault()\n        @next()\n      when 38 # UP\n        e.preventDefault()\n        @prev()\n      when 27 # ESCAPE\n        @$element.blur()\n        @hideList()\n\n    return\n\n  onFocus: ->\n    # We need to run onKeyUp after the focus resolves,\n    # or the caret position (selectionStart) will not be correct\n    Meteor.defer => @onKeyUp()\n\n  onBlur: ->\n    # We need to delay this so click events work\n    # TODO this is a bit of a hack; see if we can't be smarter\n    Meteor.setTimeout =>\n      @hideList()\n    , 500\n\n  onItemClick: (doc, e) => @processSelection(doc, @rules[@matched])\n\n  onItemHover: (doc, e) ->\n    @tmplInst.$(\".-autocomplete-item\").removeClass(\"selected\")\n    $(e.target).closest(\".-autocomplete-item\").addClass(\"selected\")\n\n  filteredList: ->\n    # @ruleDep.depend() # optional as long as we use depend on filter, because list will always get re-rendered\n    filter = @getFilter() # Reactively depend on the filter\n    return null if @matched is -1\n\n    rule = @rules[@matched]\n    # Don't display list unless we have a token or a filter (or both)\n    # Single field: nothing displayed until something is typed\n    return null unless rule.token or filter\n\n    [ selector, options ] = getFindParams(rule, filter, @limit)\n\n    Meteor.defer => @ensureSelection()\n\n    # if server collection, the server has already done the filtering work\n    return AutoCompleteRecords.find({}, options) if isServerSearch(rule)\n\n    # Otherwise, search on client\n    return rule.collection.find(selector, options)\n\n  isShowing: ->\n    rule = @matchedRule()\n    # Same rules as above\n    showing = rule? and (rule.token or @getFilter())\n\n    # Do this after the render\n    if showing\n      Meteor.defer =>\n        @positionContainer()\n        @ensureSelection()\n\n    return showing\n\n  # Replace text with currently selected item\n  select: ->\n    node = @tmplInst.find(\".-autocomplete-item.selected\")\n    return false unless node?\n    doc = Blaze.getData(node)\n    return false unless doc # Don't select if nothing matched\n\n    @processSelection(doc, @rules[@matched])\n    return true\n\n  processSelection: (doc, rule) ->\n    replacement = getField(doc, rule.field)\n\n    unless isWholeField(rule)\n      @replace(replacement, rule)\n      @hideList()\n\n    else\n      # Empty string or doesn't exist?\n      # Single-field replacement: replace whole field\n      @setText(replacement)\n\n      # Field retains focus, but list is hidden unless another key is pressed\n      # Must be deferred or onKeyUp will trigger and match again\n      # TODO this is a hack; see above\n      @onBlur()\n\n    @$element.trigger(\"autocompleteselect\", doc)\n    return\n\n  # Replace the appropriate region\n  replace: (replacement) ->\n    startpos = @element.selectionStart\n    fullStuff = @getText()\n    val = fullStuff.substring(0, startpos)\n    val = val.replace(@expressions[@matched], \"$1\" + @rules[@matched].token + replacement)\n    posfix = fullStuff.substring(startpos, fullStuff.length)\n    separator = (if posfix.match(/^\\s/) then \"\" else \" \")\n    finalFight = val + separator + posfix\n    @setText finalFight\n\n    newPosition = val.length + 1\n    @element.setSelectionRange(newPosition, newPosition)\n    return\n\n  hideList: ->\n    @setMatchedRule(-1)\n    @setFilter(null)\n\n  getText: ->\n    return @$element.val() || @$element.text()\n\n  setText: (text) ->\n    if @$element.is(\"input,textarea\")\n      @$element.val(text)\n    else\n      @$element.html(text)\n\n  ###\n    Rendering functions\n  ###\n  positionContainer: ->\n    # First render; Pick the first item and set css whenever list gets shown\n    position = @$element.position()\n\n    rule = @matchedRule()\n\n    offset = getCaretCoordinates(@element, @element.selectionStart)\n\n    # In whole-field positioning, we don't move the container and make it the\n    # full width of the field.\n    if rule? and isWholeField(rule)\n      pos =\n        left: position.left\n        width: @$element.outerWidth()               # position.offsetWidth\n    else # Normal positioning, at token word\n      pos =\n        left: position.left + offset.left\n\n    # Position menu from top (above) or from bottom of caret (below, default)\n    if @position is \"top\"\n      pos.bottom = @$element.offsetParent().height() - position.top - offset.top\n    else\n      pos.top = position.top + offset.top + parseInt(@$element.css('font-size'))\n\n    @tmplInst.$(\".-autocomplete-container\").css(pos)\n\n  ensureSelection : ->\n    # Re-render; make sure selected item is something in the list or none if list empty\n    selectedItem = @tmplInst.$(\".-autocomplete-item.selected\")\n\n    unless selectedItem.length\n      # Select anything\n      @tmplInst.$(\".-autocomplete-item:first-child\").addClass(\"selected\")\n\n  # Select next item in list\n  next: ->\n    currentItem = @tmplInst.$(\".-autocomplete-item.selected\")\n    return unless currentItem.length # Don't try to iterate an empty list\n    currentItem.removeClass(\"selected\")\n\n    next = currentItem.next()\n    if next.length\n      next.addClass(\"selected\")\n    else # End of list or lost selection; Go back to first item\n      @tmplInst.$(\".-autocomplete-item:first-child\").addClass(\"selected\")\n\n  # Select previous item in list\n  prev: ->\n    currentItem = @tmplInst.$(\".-autocomplete-item.selected\")\n    return unless currentItem.length # Don't try to iterate an empty list\n    currentItem.removeClass(\"selected\")\n\n    prev = currentItem.prev()\n    if prev.length\n      prev.addClass(\"selected\")\n    else # Beginning of list or lost selection; Go to end of list\n      @tmplInst.$(\".-autocomplete-item:last-child\").addClass(\"selected\")\n\n  # This doesn't need to be reactive because list already changes reactively\n  # and will cause all of the items to re-render anyway\n  currentTemplate: -> @rules[@matched].template\n\nAutocompleteTest =\n  records: AutoCompleteRecords\n  getRegExp: getRegExp\n  getFindParams: getFindParams\n","var AutoCompleteRecords, getField, getFindParams, getRegExp, isServerSearch, isWholeField, validateRule,                  \n  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\nAutoCompleteRecords = new Mongo.Collection(\"autocompleteRecords\");\n\nisServerSearch = function(rule) {\n  return _.isString(rule.collection);\n};\n\nvalidateRule = function(rule) {\n  if ((rule.subscription != null) && !Match.test(rule.collection, String)) {\n    throw new Error(\"Collection name must be specified as string for server-side search\");\n  }\n  if (rule.callback != null) {\n    return console.warn(\"autocomplete no longer supports callbacks; use event listeners instead.\");\n  }\n};\n\nisWholeField = function(rule) {\n  return !rule.token;\n};\n\ngetRegExp = function(rule) {\n  if (!isWholeField(rule)) {\n    return new RegExp('(^|\\\\b|\\\\s)' + rule.token + '([\\\\w.]*)$');\n  } else {\n    return new RegExp('(^)(.*)$');\n  }\n};\n\ngetFindParams = function(rule, filter, limit) {\n  var options, selector, sortspec;\n  selector = _.extend({}, rule.filter || {});\n  options = {\n    limit: limit\n  };\n  if (!filter) {\n    return [selector, options];\n  }\n  if (rule.sort && rule.field) {\n    sortspec = {};\n    sortspec[rule.field] = 1;\n    options.sort = sortspec;\n  }\n  if (_.isFunction(rule.selector)) {\n    _.extend(selector, rule.selector(filter));\n  } else {\n    selector[rule.field] = {\n      $regex: rule.matchAll ? filter : \"^\" + filter,\n      $options: typeof rule.options === 'undefined' ? 'i' : rule.options\n    };\n  }\n  return [selector, options];\n};\n\ngetField = function(obj, str) {\n  var j, key, len, ref;\n  ref = str.split(\".\");\n  for (j = 0, len = ref.length; j < len; j++) {\n    key = ref[j];\n    obj = obj[key];\n  }\n  return obj;\n};\n\nthis.AutoComplete = (function() {\n  AutoComplete.KEYS = [40, 38, 13, 27, 9];\n\n  function AutoComplete(settings) {\n    this.onItemClick = bind(this.onItemClick, this);\n    var j, len, ref, rule;\n    this.limit = settings.limit || 5;\n    this.position = settings.position || \"bottom\";\n    this.rules = settings.rules;\n    ref = this.rules;\n    for (j = 0, len = ref.length; j < len; j++) {\n      rule = ref[j];\n      validateRule(rule);\n    }\n    this.expressions = (function() {\n      var k, len1, ref1, results;\n      ref1 = this.rules;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        rule = ref1[k];\n        results.push(getRegExp(rule));\n      }\n      return results;\n    }).call(this);\n    this.matched = -1;\n    this.loaded = true;\n    this.ruleDep = new Deps.Dependency;\n    this.filterDep = new Deps.Dependency;\n    this.loadingDep = new Deps.Dependency;\n    this.sub = null;\n    this.comp = Deps.autorun((function(_this) {\n      return function() {\n        var filter, options, ref1, ref2, selector, subName;\n        if ((ref1 = _this.sub) != null) {\n          ref1.stop();\n        }\n        if (!((rule = _this.matchedRule()) && (filter = _this.getFilter()) !== null)) {\n          return;\n        }\n        if (!isServerSearch(rule)) {\n          _this.setLoaded(true);\n          return;\n        }\n        ref2 = getFindParams(rule, filter, _this.limit), selector = ref2[0], options = ref2[1];\n        _this.setLoaded(false);\n        subName = rule.subscription || \"autocomplete-recordset\";\n        return _this.sub = Meteor.subscribe(subName, selector, options, rule.collection, function() {\n          return _this.setLoaded(true);\n        });\n      };\n    })(this));\n  }\n\n  AutoComplete.prototype.teardown = function() {\n    return this.comp.stop();\n  };\n\n  AutoComplete.prototype.matchedRule = function() {\n    this.ruleDep.depend();\n    if (this.matched >= 0) {\n      return this.rules[this.matched];\n    } else {\n      return null;\n    }\n  };\n\n  AutoComplete.prototype.setMatchedRule = function(i) {\n    this.matched = i;\n    return this.ruleDep.changed();\n  };\n\n  AutoComplete.prototype.getFilter = function() {\n    this.filterDep.depend();\n    return this.filter;\n  };\n\n  AutoComplete.prototype.setFilter = function(x) {\n    this.filter = x;\n    this.filterDep.changed();\n    return this.filter;\n  };\n\n  AutoComplete.prototype.isLoaded = function() {\n    this.loadingDep.depend();\n    return this.loaded;\n  };\n\n  AutoComplete.prototype.setLoaded = function(val) {\n    if (val === this.loaded) {\n      return;\n    }\n    this.loaded = val;\n    return this.loadingDep.changed();\n  };\n\n  AutoComplete.prototype.onKeyUp = function() {\n    var breakLoop, i, matches, results, startpos, val;\n    if (!this.$element) {\n      return;\n    }\n    startpos = this.element.selectionStart;\n    val = this.getText().substring(0, startpos);\n\n    /*\n      Matching on multiple expressions.\n      We always go from a matched state to an unmatched one\n      before going to a different matched one.\n     */\n    i = 0;\n    breakLoop = false;\n    results = [];\n    while (i < this.expressions.length) {\n      matches = val.match(this.expressions[i]);\n      if (!matches && this.matched === i) {\n        this.setMatchedRule(-1);\n        breakLoop = true;\n      }\n      if (matches && this.matched === -1) {\n        this.setMatchedRule(i);\n        breakLoop = true;\n      }\n      if (matches && this.filter !== matches[2]) {\n        this.setFilter(matches[2]);\n        breakLoop = true;\n      }\n      if (breakLoop) {\n        break;\n      }\n      results.push(i++);\n    }\n    return results;\n  };\n\n  AutoComplete.prototype.onKeyDown = function(e) {\n    if (this.matched === -1 || (this.constructor.KEYS.indexOf(e.keyCode) < 0)) {\n      return;\n    }\n    switch (e.keyCode) {\n      case 9:\n      case 13:\n        if (this.select()) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        break;\n      case 40:\n        e.preventDefault();\n        this.next();\n        break;\n      case 38:\n        e.preventDefault();\n        this.prev();\n        break;\n      case 27:\n        this.$element.blur();\n        this.hideList();\n    }\n  };\n\n  AutoComplete.prototype.onFocus = function() {\n    return Meteor.defer((function(_this) {\n      return function() {\n        return _this.onKeyUp();\n      };\n    })(this));\n  };\n\n  AutoComplete.prototype.onBlur = function() {\n    return Meteor.setTimeout((function(_this) {\n      return function() {\n        return _this.hideList();\n      };\n    })(this), 500);\n  };\n\n  AutoComplete.prototype.onItemClick = function(doc, e) {\n    return this.processSelection(doc, this.rules[this.matched]);\n  };\n\n  AutoComplete.prototype.onItemHover = function(doc, e) {\n    this.tmplInst.$(\".-autocomplete-item\").removeClass(\"selected\");\n    return $(e.target).closest(\".-autocomplete-item\").addClass(\"selected\");\n  };\n\n  AutoComplete.prototype.filteredList = function() {\n    var filter, options, ref, rule, selector;\n    filter = this.getFilter();\n    if (this.matched === -1) {\n      return null;\n    }\n    rule = this.rules[this.matched];\n    if (!(rule.token || filter)) {\n      return null;\n    }\n    ref = getFindParams(rule, filter, this.limit), selector = ref[0], options = ref[1];\n    Meteor.defer((function(_this) {\n      return function() {\n        return _this.ensureSelection();\n      };\n    })(this));\n    if (isServerSearch(rule)) {\n      return AutoCompleteRecords.find({}, options);\n    }\n    return rule.collection.find(selector, options);\n  };\n\n  AutoComplete.prototype.isShowing = function() {\n    var rule, showing;\n    rule = this.matchedRule();\n    showing = (rule != null) && (rule.token || this.getFilter());\n    if (showing) {\n      Meteor.defer((function(_this) {\n        return function() {\n          _this.positionContainer();\n          return _this.ensureSelection();\n        };\n      })(this));\n    }\n    return showing;\n  };\n\n  AutoComplete.prototype.select = function() {\n    var doc, node;\n    node = this.tmplInst.find(\".-autocomplete-item.selected\");\n    if (node == null) {\n      return false;\n    }\n    doc = Blaze.getData(node);\n    if (!doc) {\n      return false;\n    }\n    this.processSelection(doc, this.rules[this.matched]);\n    return true;\n  };\n\n  AutoComplete.prototype.processSelection = function(doc, rule) {\n    var replacement;\n    replacement = getField(doc, rule.field);\n    if (!isWholeField(rule)) {\n      this.replace(replacement, rule);\n      this.hideList();\n    } else {\n      this.setText(replacement);\n      this.onBlur();\n    }\n    this.$element.trigger(\"autocompleteselect\", doc);\n  };\n\n  AutoComplete.prototype.replace = function(replacement) {\n    var finalFight, fullStuff, newPosition, posfix, separator, startpos, val;\n    startpos = this.element.selectionStart;\n    fullStuff = this.getText();\n    val = fullStuff.substring(0, startpos);\n    val = val.replace(this.expressions[this.matched], \"$1\" + this.rules[this.matched].token + replacement);\n    posfix = fullStuff.substring(startpos, fullStuff.length);\n    separator = (posfix.match(/^\\s/) ? \"\" : \" \");\n    finalFight = val + separator + posfix;\n    this.setText(finalFight);\n    newPosition = val.length + 1;\n    this.element.setSelectionRange(newPosition, newPosition);\n  };\n\n  AutoComplete.prototype.hideList = function() {\n    this.setMatchedRule(-1);\n    return this.setFilter(null);\n  };\n\n  AutoComplete.prototype.getText = function() {\n    return this.$element.val() || this.$element.text();\n  };\n\n  AutoComplete.prototype.setText = function(text) {\n    if (this.$element.is(\"input,textarea\")) {\n      return this.$element.val(text);\n    } else {\n      return this.$element.html(text);\n    }\n  };\n\n\n  /*\n    Rendering functions\n   */\n\n  AutoComplete.prototype.positionContainer = function() {\n    var offset, pos, position, rule;\n    position = this.$element.position();\n    rule = this.matchedRule();\n    offset = getCaretCoordinates(this.element, this.element.selectionStart);\n    if ((rule != null) && isWholeField(rule)) {\n      pos = {\n        left: position.left,\n        width: this.$element.outerWidth()\n      };\n    } else {\n      pos = {\n        left: position.left + offset.left\n      };\n    }\n    if (this.position === \"top\") {\n      pos.bottom = this.$element.offsetParent().height() - position.top - offset.top;\n    } else {\n      pos.top = position.top + offset.top + parseInt(this.$element.css('font-size'));\n    }\n    return this.tmplInst.$(\".-autocomplete-container\").css(pos);\n  };\n\n  AutoComplete.prototype.ensureSelection = function() {\n    var selectedItem;\n    selectedItem = this.tmplInst.$(\".-autocomplete-item.selected\");\n    if (!selectedItem.length) {\n      return this.tmplInst.$(\".-autocomplete-item:first-child\").addClass(\"selected\");\n    }\n  };\n\n  AutoComplete.prototype.next = function() {\n    var currentItem, next;\n    currentItem = this.tmplInst.$(\".-autocomplete-item.selected\");\n    if (!currentItem.length) {\n      return;\n    }\n    currentItem.removeClass(\"selected\");\n    next = currentItem.next();\n    if (next.length) {\n      return next.addClass(\"selected\");\n    } else {\n      return this.tmplInst.$(\".-autocomplete-item:first-child\").addClass(\"selected\");\n    }\n  };\n\n  AutoComplete.prototype.prev = function() {\n    var currentItem, prev;\n    currentItem = this.tmplInst.$(\".-autocomplete-item.selected\");\n    if (!currentItem.length) {\n      return;\n    }\n    currentItem.removeClass(\"selected\");\n    prev = currentItem.prev();\n    if (prev.length) {\n      return prev.addClass(\"selected\");\n    } else {\n      return this.tmplInst.$(\".-autocomplete-item:last-child\").addClass(\"selected\");\n    }\n  };\n\n  AutoComplete.prototype.currentTemplate = function() {\n    return this.rules[this.matched].template;\n  };\n\n  return AutoComplete;\n\n})();\n\nAutocompleteTest = {\n  records: AutoCompleteRecords,\n  getRegExp: getRegExp,\n  getFindParams: getFindParams\n};\n","# Events on template instances, sent to the autocomplete class\nacEvents =\n  \"keydown\": (e, t) -> t.ac.onKeyDown(e)\n  \"keyup\": (e, t) -> t.ac.onKeyUp(e)\n  \"focus\": (e, t) -> t.ac.onFocus(e)\n  \"blur\": (e, t) -> t.ac.onBlur(e)\n\nTemplate.inputAutocomplete.events(acEvents)\nTemplate.textareaAutocomplete.events(acEvents)\n\nattributes = -> _.omit(@, 'settings') # Render all but the settings parameter\n\nautocompleteHelpers = {\n  attributes,\n  autocompleteContainer: new Template('AutocompleteContainer', ->\n    ac = new AutoComplete( Blaze.getData().settings )\n    # Set the autocomplete object on the parent template instance\n    this.parentView.templateInstance().ac = ac\n\n    # Set nodes on render in the autocomplete class\n    this.onViewReady ->\n      ac.element = this.parentView.firstNode()\n      ac.$element = $(ac.element)\n\n    return Blaze.With(ac, -> Template._autocompleteContainer)\n  )\n}\n\nTemplate.inputAutocomplete.helpers(autocompleteHelpers)\nTemplate.textareaAutocomplete.helpers(autocompleteHelpers)\n\nTemplate._autocompleteContainer.rendered = ->\n  @data.tmplInst = this\n\nTemplate._autocompleteContainer.destroyed = ->\n  # Meteor._debug \"autocomplete destroyed\"\n  @data.teardown()\n\n###\n  List rendering helpers\n###\n\nTemplate._autocompleteContainer.events\n  # t.data is the AutoComplete instance; `this` is the data item\n  \"click .-autocomplete-item\": (e, t) -> t.data.onItemClick(this, e)\n  \"mouseenter .-autocomplete-item\": (e, t) -> t.data.onItemHover(this, e)\n\nTemplate._autocompleteContainer.helpers\n  empty: -> @filteredList().count() is 0\n  noMatchTemplate: -> @matchedRule().noMatchTemplate || Template._noMatch\n","var acEvents, attributes, autocompleteHelpers;\n\nacEvents = {\n  \"keydown\": function(e, t) {\n    return t.ac.onKeyDown(e);\n  },\n  \"keyup\": function(e, t) {\n    return t.ac.onKeyUp(e);\n  },\n  \"focus\": function(e, t) {\n    return t.ac.onFocus(e);\n  },\n  \"blur\": function(e, t) {\n    return t.ac.onBlur(e);\n  }\n};\n\nTemplate.inputAutocomplete.events(acEvents);\n\nTemplate.textareaAutocomplete.events(acEvents);\n\nattributes = function() {\n  return _.omit(this, 'settings');\n};\n\nautocompleteHelpers = {\n  attributes: attributes,\n  autocompleteContainer: new Template('AutocompleteContainer', function() {\n    var ac;\n    ac = new AutoComplete(Blaze.getData().settings);\n    this.parentView.templateInstance().ac = ac;\n    this.onViewReady(function() {\n      ac.element = this.parentView.firstNode();\n      return ac.$element = $(ac.element);\n    });\n    return Blaze.With(ac, function() {\n      return Template._autocompleteContainer;\n    });\n  })\n};\n\nTemplate.inputAutocomplete.helpers(autocompleteHelpers);\n\nTemplate.textareaAutocomplete.helpers(autocompleteHelpers);\n\nTemplate._autocompleteContainer.rendered = function() {\n  return this.data.tmplInst = this;\n};\n\nTemplate._autocompleteContainer.destroyed = function() {\n  return this.data.teardown();\n};\n\n\n/*\n  List rendering helpers\n */\n\nTemplate._autocompleteContainer.events({\n  \"click .-autocomplete-item\": function(e, t) {\n    return t.data.onItemClick(this, e);\n  },\n  \"mouseenter .-autocomplete-item\": function(e, t) {\n    return t.data.onItemHover(this, e);\n  }\n});\n\nTemplate._autocompleteContainer.helpers({\n  empty: function() {\n    return this.filteredList().count() === 0;\n  },\n  noMatchTemplate: function() {\n    return this.matchedRule().noMatchTemplate || Template._noMatch;\n  }\n});\n"]}