{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/methods/saveNotificationSettings.js","meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/models/Subscriptions.js"],"names":["Meteor","methods","saveNotificationSettings","rid","field","value","userId","Error","method","check","String","indexOf","subscription","RocketChat","models","Subscriptions","findOneByRoomIdAndUserId","updateAudioNotificationById","_id","updateDesktopNotificationsById","updateMobilePushNotificationsById","updateEmailNotificationsById","updateUnreadAlertById","updateDisableNotificationsById","updateHideUnreadStatusById","saveDesktopNotificationDuration","updateDesktopNotificationDurationById","audioNotification","query","update","$set","desktopNotifications","desktopNotificationDuration","mobilePushNotifications","emailNotifications","unreadAlert","disableNotifications","hideUnreadStatus","findAlwaysNotifyDesktopUsersByRoomId","roomId","find","findDontNotifyDesktopUsersByRoomId","findAlwaysNotifyMobileUsersByRoomId","findDontNotifyMobileUsersByRoomId","findNotificationPreferencesByRoom","$exists","$or","findWithSendEmailByRoomId","fields","u"],"mappings":"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","file":"/packages/rocketchat_push-notifications.js","sourcesContent":["Meteor.methods({\n\tsaveNotificationSettings(rid, field, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['audioNotification', 'desktopNotifications', 'mobilePushNotifications', 'emailNotifications', 'unreadAlert', 'disableNotifications', 'hideUnreadStatus'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tif (field !== 'audioNotification' && field !== 'hideUnreadStatus' && field !== 'disableNotifications' && ['all', 'mentions', 'nothing', 'default'].indexOf(value) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings value', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tswitch (field) {\n\t\t\tcase 'audioNotification':\n\t\t\t\tRocketChat.models.Subscriptions.updateAudioNotificationById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'desktopNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateDesktopNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'mobilePushNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateMobilePushNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'emailNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateEmailNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'unreadAlert':\n\t\t\t\tRocketChat.models.Subscriptions.updateUnreadAlertById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'disableNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateDisableNotificationsById(subscription._id, value === '1' ? true : false);\n\t\t\t\tbreak;\n\t\t\tcase 'hideUnreadStatus':\n\t\t\t\tRocketChat.models.Subscriptions.updateHideUnreadStatusById(subscription._id, value === '1' ? true : false);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tsaveDesktopNotificationDuration(rid, value) {\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveDesktopNotificationDuration' });\n\t\t}\n\t\tRocketChat.models.Subscriptions.updateDesktopNotificationDurationById(subscription._id, value);\n\t\treturn true;\n\t}\n});\n","RocketChat.models.Subscriptions.updateAudioNotificationById = function(_id, audioNotification) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\taudioNotification\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationsById = function(_id, desktopNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationDurationById = function(_id, value) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotificationDuration: value - 0\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateMobilePushNotificationsById = function(_id, mobilePushNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tmobilePushNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateEmailNotificationsById = function(_id, emailNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\temailNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateUnreadAlertById = function(_id, unreadAlert) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tunreadAlert\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDisableNotificationsById = function(_id, disableNotifications) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdisableNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateHideUnreadStatusById = function(_id, hideUnreadStatus) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\thideUnreadStatus\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findNotificationPreferencesByRoom = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\t'u._id': {$exists: true},\n\t\t$or: [\n\t\t\t{audioNotification: {$exists: true}},\n\t\t\t{desktopNotifications: {$exists: true}},\n\t\t\t{desktopNotificationDuration: {$exists: true}},\n\t\t\t{mobilePushNotifications: {$exists: true}},\n\t\t\t{disableNotifications: {$exists: true}}\n\t\t]\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findWithSendEmailByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\temailNotifications: {\n\t\t\t$exists: true\n\t\t}\n\t};\n\n\treturn this.find(query, { fields: { emailNotifications: 1, u: 1 } });\n};\n"]}