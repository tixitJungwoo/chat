{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:videobridge/lib/messageType.js","meteor://ðŸ’»app/packages/rocketchat:videobridge/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:videobridge/server/models/Rooms.js","meteor://ðŸ’»app/packages/rocketchat:videobridge/server/methods/jitsiSetTimeout.js","meteor://ðŸ’»app/packages/rocketchat:videobridge/server/actionLink.js"],"names":["Meteor","startup","RocketChat","MessageTypes","registerType","id","system","message","settings","addGroup","add","type","i18nLabel","alert","enableQuery","_id","value","models","Rooms","setJitsiTimeout","time","query","update","$set","jitsiTimeout","methods","rid","userId","Error","method","room","findOneById","currentTime","Date","getTime","Messages","createWithTypeRoomIdMessageAndUser","user","actionLinks","icon","label","method_id","params","register"],"mappings":"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","file":"/packages/rocketchat_videobridge.js","sourcesContent":["Meteor.startup(function() {\n\tRocketChat.MessageTypes.registerType({\n\t\tid: 'jitsi_call_started',\n\t\tsystem: true,\n\t\tmessage: 'Started a Video Call!'\n\t});\n});\n","Meteor.startup(function() {\n\tRocketChat.settings.addGroup('Video Conference', function() {\n\t\tthis.add('Jitsi_Enabled', false, {\n\t\t\ttype: 'boolean',\n\t\t\ti18nLabel: 'Enabled',\n\t\t\talert: 'This Feature is currently in beta! Please report bugs to github.com/RocketChat/Rocket.Chat/issues',\n\t\t\tpublic: true\n\t\t});\n\n\t\tthis.add('Jitsi_Domain', 'meet.jit.si', {\n\t\t\ttype: 'string',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'Jitsi_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'Domain',\n\t\t\tpublic: true\n\t\t});\n\n\t\tthis.add('Jitsi_URL_Room_Prefix', 'RocketChat', {\n\t\t\ttype: 'string',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'Jitsi_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'URL_room_prefix',\n\t\t\tpublic: true\n\t\t});\n\n\t\tthis.add('Jitsi_SSL', true, {\n\t\t\ttype: 'boolean',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'Jitsi_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'SSL',\n\t\t\tpublic: true\n\t\t});\n\n\t\tthis.add('Jitsi_Open_New_Window', false, {\n\t\t\ttype: 'boolean',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'Jitsi_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'Always_open_in_new_window',\n\t\t\tpublic: true\n\t\t});\n\n\t\tthis.add('Jitsi_Enable_Channels', false, {\n\t\t\ttype: 'boolean',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'Jitsi_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'Jitsi_Enable_Channels',\n\t\t\tpublic: true\n\t\t});\n\n\t\tthis.add('Jitsi_Chrome_Extension', 'nocfbnnmjnndkbipkabodnheejiegccf', {\n\t\t\ttype: 'string',\n\t\t\tenableQuery: {\n\t\t\t\t_id: 'Jitsi_Enabled',\n\t\t\t\tvalue: true\n\t\t\t},\n\t\t\ti18nLabel: 'Jitsi_Chrome_Extension',\n\t\t\tpublic: true\n\t\t});\n\t});\n});\n","/**\n * sets jitsiTimeout to indicate a call is in progress\n * @param {string} _id - Room id\n * @parm {number} time - time to set\n */\nRocketChat.models.Rooms.setJitsiTimeout = function(_id, time) {\n\tconst query = {\n\t\t_id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tjitsiTimeout: time\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n","\nMeteor.methods({\n\t'jitsi:updateTimeout': (rid) => {\n\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'jitsi:updateTimeout' });\n\t\t}\n\n\t\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\t\tconst currentTime = new Date().getTime();\n\n\t\tconst jitsiTimeout = new Date((room && room.jitsiTimeout) || currentTime).getTime();\n\n\t\tif (jitsiTimeout <= currentTime) {\n\t\t\tRocketChat.models.Rooms.setJitsiTimeout(rid, new Date(currentTime + 35*1000));\n\t\t\tRocketChat.models.Messages.createWithTypeRoomIdMessageAndUser('jitsi_call_started', rid, '', Meteor.user(), {\n\t\t\t\tactionLinks : [\n\t\t\t\t\t{ icon: 'icon-videocam', label: 'Click To Join!', method_id: 'joinJitsiCall', params: ''}\n\t\t\t\t]\n\t\t\t});\n\t\t} else if ((jitsiTimeout - currentTime) / 1000 <= 15) {\n\t\t\tRocketChat.models.Rooms.setJitsiTimeout(rid, new Date(jitsiTimeout + 25*1000));\n\t\t}\n\t}\n});\n","RocketChat.actionLinks.register('joinJitsiCall', function(/*message, params*/) {\n\n});\n"]}