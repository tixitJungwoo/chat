{"version":3,"sources":["meteor://ðŸ’»app/packages/lily:lib/server/models/_LilyBase.js","meteor://ðŸ’»app/packages/lily:lib/server/models/_LilyBaseDb.js"],"names":["ModelsBaseDb","module","watch","require","v","RocketChat","models","_CacheControl","Meteor","EnvironmentVariable","ModelsLilyBase","nameOrModel","useCache","_db","model","collectionName","name","_useCache","db","arrayToCursor","data","fetch","count","length","forEach","fn","setUpdatedAt","arguments","find","origin","e","error","findOne","findOneById","findOneByIds","ids","options","check","String","insert","update","upsert","remove","insertOrUpsert","allow","deny","ensureIndex","dropIndex","tryEnsureIndex","tryDropIndex","trashFind","trashFindDeletedAfter","_LilyBase","EventEmitter","baseName","isOplogAvailable","MongoInternals","defaultRemoteCollectionDriver","mongo","_oplogHandle","onOplogEntry","isOplogEnabled","settings","get","key","value","ModelsLilyBaseDb","baseModel","Mongo","Collection","once","event","query","collection","processOplogRecord","bind","_defineTooFarBehind","Number","MAX_SAFE_INTEGER","record","test","Object","keys","join","$set","_updatedAt","Date","wrapModel","self","_id","$in","defineSyncStrategy","modifier","cacheAllowedModifiers","notAllowedModifiers","filter","i","startsWith","includes","placeholderFields","item","indexOf","updateHasPositionalOperator","Match","action","op","emit","id","o","oplog","$unset","diff","hasOwnProperty","undefined","result","originals","listenerCount","_","extend","strategy","findOptions","fields","records","multi","Array","isArray","map","insertedId","_returnObject","push","_deletedAt","__collection__","trash","omit","args","unshift","_ensureIndex","_dropIndex","deletedAt","$gt","exportDefault"],"mappings":"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","file":"/packages/lily_lib.js","sourcesContent":["import ModelsBaseDb from \"./_LilyBaseDb\";\n\nRocketChat.models._CacheControl = new Meteor.EnvironmentVariable();\n\nclass ModelsLilyBase {\n    constructor(nameOrModel, useCache) {\n        this._db = new ModelsBaseDb(nameOrModel, this);\n        this.model = this._db.model;\n        this.collectionName = this._db.collectionName;\n        this.name = this._db.name;\n\n        this._useCache = false;\n\n        this.db = this;\n    }\n\n    get useCache() {\n        return false;\n    }\n\n    get origin() {\n        return '_db';\n    }\n\n    arrayToCursor(data) {\n        return {\n            fetch() {\n                return data;\n            },\n            count() {\n                return data.length;\n            },\n            forEach(fn) {\n                return data.forEach(fn);\n            }\n        };\n    }\n\n    setUpdatedAt(/*record, checkQuery, query*/) {\n        return this._db.setUpdatedAt(...arguments);\n    }\n\n    find() {\n        try {\n            return this[this.origin].find(...arguments);\n        } catch (e) {\n            console.error('Exception on find', e, ...arguments);\n        }\n    }\n\n    findOne() {\n        try {\n            return this[this.origin].findOne(...arguments);\n        } catch (e) {\n            console.error('Exception on find', e, ...arguments);\n        }\n    }\n\n    findOneById() {\n        try {\n            return this[this.origin].findOneById(...arguments);\n        } catch (e) {\n            console.error('Exception on find', e, ...arguments);\n        }\n    }\n\n    findOneByIds(ids, options) {\n        check(ids, [String]);\n\n        try {\n            return this[this.origin].findOneByIds(ids, options);\n        } catch (e) {\n            console.error('Exception on find', e, ...arguments);\n        }\n    }\n\n    insert(/*record*/) {\n        return this._db.insert(...arguments);\n    }\n\n    update(/*query, update, options*/) {\n        return this._db.update(...arguments);\n    }\n\n    upsert(/*query, update*/) {\n        return this._db.upsert(...arguments);\n    }\n\n    remove(/*query*/) {\n        return this._db.remove(...arguments);\n    }\n\n    insertOrUpsert() {\n        return this._db.insertOrUpsert(...arguments);\n    }\n\n    allow() {\n        return this._db.allow(...arguments);\n    }\n\n    deny() {\n        return this._db.deny(...arguments);\n    }\n\n    ensureIndex() {\n        return this._db.ensureIndex(...arguments);\n    }\n\n    dropIndex() {\n        return this._db.dropIndex(...arguments);\n    }\n\n    tryEnsureIndex() {\n        return this._db.tryEnsureIndex(...arguments);\n    }\n\n    tryDropIndex() {\n        return this._db.tryDropIndex(...arguments);\n    }\n\n    trashFind(/*query, options*/) {\n        return this._db.trashFind(...arguments);\n    }\n\n    trashFindDeletedAfter(/*deletedAt, query, options*/) {\n        return this._db.trashFindDeletedAfter(...arguments);\n    }\n}\n\nRocketChat.models._LilyBase = ModelsLilyBase;\n","/* globals MongoInternals */\n\nconst baseName = 'lily_';\nimport {EventEmitter} from \"events\";\n\nconst isOplogAvailable = MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle && !!MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle.onOplogEntry;\nlet isOplogEnabled = isOplogAvailable;\nRocketChat.settings.get('Force_Disable_OpLog_For_Cache', (key, value) => {\n    isOplogEnabled = isOplogAvailable && value === false;\n});\n\nclass ModelsLilyBaseDb extends EventEmitter {\n    constructor(model, baseModel) {\n        super();\n\n        this.name = model;\n        this.collectionName = this.baseName + this.name;\n        this.model = new Mongo.Collection(this.collectionName);\n\n        this.baseModel = baseModel;\n\n        // this.wrapModel();\n\n        // When someone start listening for changes we start oplog if available\n        this.once('newListener', (event/*, listener*/) => {\n            if (event === 'change') {\n                if (isOplogEnabled) {\n                    const query = {\n                        collection: this.collectionName\n                    };\n\n                    MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle.onOplogEntry(query, this.processOplogRecord.bind(this));\n                    MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle._defineTooFarBehind(Number.MAX_SAFE_INTEGER);\n                }\n            }\n        });\n\n        this.tryEnsureIndex({'_updatedAt': 1});\n    }\n\n    get baseName() {\n        return baseName;\n    }\n\n    setUpdatedAt(record = {}) {\n        if (/(^|,)\\$/.test(Object.keys(record).join(','))) {\n            record.$set = record.$set || {};\n            record.$set._updatedAt = new Date;\n        } else {\n            record._updatedAt = new Date;\n        }\n\n        return record;\n    }\n\n    wrapModel() {\n        // this.originals = {\n        //     insert: this.model.insert.bind(this.model),\n        //     update: this.model.update.bind(this.model),\n        //     remove: this.model.remove.bind(this.model)\n        // };\n        const self = this;\n\n        this.model.insert = function () {\n            return self.insert(...arguments);\n        };\n\n        this.model.update = function () {\n            return self.update(...arguments);\n        };\n\n        this.model.remove = function () {\n            return self.remove(...arguments);\n        };\n    }\n\n    find() {\n        return this.model.find(...arguments);\n    }\n\n    findOne() {\n        return this.model.findOne(...arguments);\n    }\n\n    findOneById(_id, options) {\n        return this.model.findOne({_id}, options);\n    }\n\n    findOneByIds(ids, options) {\n        return this.model.findOne({_id: {$in: ids}}, options);\n    }\n\n    defineSyncStrategy(query, modifier, options) {\n        if (this.baseModel.useCache === false) {\n            return 'db';\n        }\n\n        if (options.upsert === true) {\n            return 'db';\n        }\n\n        // const dbModifiers = [\n        // \t'$currentDate',\n        // \t'$bit',\n        // \t'$pull',\n        // \t'$pushAll',\n        // \t'$push',\n        // \t'$setOnInsert'\n        // ];\n\n        const cacheAllowedModifiers = [\n            '$set',\n            '$unset',\n            '$min',\n            '$max',\n            '$inc',\n            '$mul',\n            '$rename',\n            '$pullAll',\n            '$pop',\n            '$addToSet'\n        ];\n\n        const notAllowedModifiers = Object.keys(modifier).filter(i => i.startsWith('$') && cacheAllowedModifiers.includes(i) === false);\n\n        if (notAllowedModifiers.length>0) {\n            return 'db';\n        }\n\n        const placeholderFields = Object.keys(query).filter(item => item.indexOf('$')> -1);\n        if (placeholderFields.length>0) {\n            return 'db';\n        }\n\n        return 'cache';\n    }\n\n    updateHasPositionalOperator(update) {\n        for (const key in update) {\n            if (key.includes('.$')) {\n                return true;\n            }\n\n            const value = update[key];\n\n            if (Match.test(value, Object)) {\n                if (this.updateHasPositionalOperator(value) === true) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    processOplogRecord(action) {\n        if (isOplogEnabled === false) {\n            return;\n        }\n\n        if (action.op.op === 'i') {\n            this.emit('change', {\n                action: 'insert',\n                id: action.op.o._id,\n                data: action.op.o,\n                oplog: true\n            });\n            return;\n        }\n\n        if (action.op.op === 'u') {\n            if (!action.op.o.$set && !action.op.o.$unset) {\n                this.emit('change', {\n                    action: 'update:record',\n                    id: action.id,\n                    data: action.op.o,\n                    oplog: true\n                });\n                return;\n            }\n\n            const diff = {};\n            if (action.op.o.$set) {\n                for (const key in action.op.o.$set) {\n                    if (action.op.o.$set.hasOwnProperty(key)) {\n                        diff[key] = action.op.o.$set[key];\n                    }\n                }\n            }\n\n            if (action.op.o.$unset) {\n                for (const key in action.op.o.$unset) {\n                    if (action.op.o.$unset.hasOwnProperty(key)) {\n                        diff[key] = undefined;\n                    }\n                }\n            }\n\n            this.emit('change', {\n                action: 'update:diff',\n                id: action.id,\n                data: diff,\n                oplog: true\n            });\n            return;\n        }\n\n        if (action.op.op === 'd') {\n            this.emit('change', {\n                action: 'remove',\n                id: action.id,\n                oplog: true\n            });\n            return;\n        }\n    }\n\n    insert(record) {\n        this.setUpdatedAt(record);\n\n        const result = this.originals.insert(...arguments);\n        if (!isOplogEnabled && this.listenerCount('change')>0) {\n            this.emit('change', {\n                action: 'insert',\n                id: result,\n                data: _.extend({}, record),\n                oplog: false\n            });\n        }\n\n        record._id = result;\n\n        return result;\n    }\n\n    update(query, update, options = {}) {\n        this.setUpdatedAt(update, true, query);\n\n        const strategy = this.defineSyncStrategy(query, update, options);\n        let ids = [];\n        if (!isOplogEnabled && this.listenerCount('change')>0 && strategy === 'db') {\n            const findOptions = {fields: {_id: 1}};\n            let records = options.multi ? this.find(query, findOptions).fetch() : this.findOne(query, findOptions) || [];\n            if (!Array.isArray(records)) {\n                records = [records];\n            }\n\n            ids = records.map(item => item._id);\n            if (options.upsert !== true && this.updateHasPositionalOperator(update) === false) {\n                query = {\n                    _id: {\n                        $in: ids\n                    }\n                };\n            }\n        }\n\n        const result = this.originals.update(query, update, options);\n\n        if (!isOplogEnabled && this.listenerCount('change')>0) {\n            if (strategy === 'db') {\n                if (options.upsert === true) {\n                    if (result.insertedId) {\n                        this.emit('change', {\n                            action: 'insert',\n                            id: result.insertedId,\n                            data: this.findOne({_id: result.insertedId}),\n                            oplog: false\n                        });\n                        return;\n                    }\n\n                    query = {\n                        _id: {\n                            $in: ids\n                        }\n                    };\n                }\n\n                let records = options.multi ? this.find(query).fetch() : this.findOne(query) || [];\n                if (!Array.isArray(records)) {\n                    records = [records];\n                }\n                for (const record of records) {\n                    this.emit('change', {\n                        action: 'update:record',\n                        id: record._id,\n                        data: record,\n                        oplog: false\n                    });\n                }\n            } else {\n                this.emit('change', {\n                    action: 'update:query',\n                    id: undefined,\n                    data: {\n                        query,\n                        update,\n                        options\n                    },\n                    oplog: false\n                });\n            }\n        }\n        return result;\n    }\n\n    upsert(query, update, options = {}) {\n        options.upsert = true;\n        options._returnObject = true;\n        return this.update(query, update, options);\n    }\n\n    remove(query) {\n        const records = this.model.find(query).fetch();\n\n        const ids = [];\n        for (const record of records) {\n            ids.push(record._id);\n\n            record._deletedAt = new Date;\n            record.__collection__ = this.name;\n\n            trash.upsert({_id: record._id}, _.omit(record, '_id'));\n        }\n\n        query = {_id: {$in: ids}};\n\n        const result = this.originals.remove(query);\n\n        if (!isOplogEnabled && this.listenerCount('change')>0) {\n            for (const record of records) {\n                this.emit('change', {\n                    action: 'remove',\n                    id: record._id,\n                    data: _.extend({}, record),\n                    oplog: false\n                });\n            }\n        }\n\n        return result;\n    }\n\n    insertOrUpsert(...args) {\n        if (args[0] && args[0]._id) {\n            const _id = args[0]._id;\n            delete args[0]._id;\n            args.unshift({\n                _id\n            });\n\n            this.upsert(...args);\n            return _id;\n        } else {\n            return this.insert(...args);\n        }\n    }\n\n    allow() {\n        return this.model.allow(...arguments);\n    }\n\n    deny() {\n        return this.model.deny(...arguments);\n    }\n\n    ensureIndex() {\n        return this.model._ensureIndex(...arguments);\n    }\n\n    dropIndex() {\n        return this.model._dropIndex(...arguments);\n    }\n\n    tryEnsureIndex() {\n        try {\n            return this.ensureIndex(...arguments);\n        } catch (e) {\n            console.error('Error creating index:', this.name, '->', ...arguments, e);\n        }\n    }\n\n    tryDropIndex() {\n        try {\n            return this.dropIndex(...arguments);\n        } catch (e) {\n            console.error('Error dropping index:', this.name, '->', ...arguments, e);\n        }\n    }\n\n    trashFind(query, options) {\n        query.__collection__ = this.name;\n\n        return trash.find(query, options);\n    }\n\n    trashFindDeletedAfter(deletedAt, query = {}, options) {\n        query.__collection__ = this.name;\n        query._deletedAt = {\n            $gt: deletedAt\n        };\n\n        return trash.find(query, options);\n    }\n}\n\nexport default ModelsLilyBaseDb;\n"]}