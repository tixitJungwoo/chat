{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:webrtc/adapter.js","meteor://ðŸ’»app/packages/rocketchat_webrtc/WebRTCClass.coffee","meteor://ðŸ’»app/WebRTCClass.coffee.js","meteor://ðŸ’»app/packages/rocketchat_webrtc/screenShare.coffee","meteor://ðŸ’»app/screenShare.coffee.js"],"names":["window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","webkitRTCIceCandidate","AudioContext","mozAudioContext","webkitAudioContext","navigator","getUserMedia","mozGetUserMedia","webkitGetUserMedia","WebRTCClass","WebRTCTransportClass","emptyFn","prototype","debug","log","console","apply","arguments","webrtcInstance","callbacks","RocketChat","Notifications","onRoom","room","_this","type","data","fn","i","len","ref","ref1","results","length","push","onUserStream","j","k","l","len1","len2","len3","ref2","ref3","ref4","ref5","ref6","ref7","results1","results2","results3","startCall","selfId","notifyUsersOfRoom","from","media","monitor","joinCall","notifyUser","to","sendCandidate","sendDescription","sendStatus","notifyRoom","onRemoteCall","base","onRemoteJoin","onRemoteCandidate","onRemoteDescription","onRemoteStatus","config","iceServers","transportClass","server","serverConfig","servers","userAgent","settings","get","trim","replace","split","urls","pop","username","decodeURIComponent","credential","peerConnections","remoteItems","ReactiveVar","remoteItemsById","callInProgress","audioEnabled","videoEnabled","overlayEnabled","screenShareEnabled","localUrl","active","remoteMonitoring","autoAccept","toLocaleLowerCase","indexOf","screenShareAvailable","video","audio","transport","bind","Meteor","setInterval","checkPeerConnections","onError","error","id","peerConnection","iceConnectionState","createdAt","Date","now","stopPeerConnection","updateRemoteItems","item","items","itemsById","remoteStream","getRemoteStreams","url","URL","createObjectURL","state","stateText","connected","set","resetCallInProgress","broadcastStatus","remoteConnections","remoteMedia","remoteConnection","clearTimeout","callInProgressTimeout","setTimeout","concat","getPeerConnection","eventName","eventNames","addEventListener","e","candidate","sdpMLineIndex","sdpMid","Object","keys","stop","_getUserMedia","onSuccess","onSuccessLocal","stream","audioContext","peer","source","volume","getAudioTracks","createMediaStreamSource","createGain","connect","createMediaStreamDestination","gain","value","removeTrack","addTrack","getAudioError","getAudioSuccess","getScreen","desktop","audioStream","getScreenSuccess","refresh","document","cookie","rocketchatscreenshare","swal","title","TAPi18n","__","text","html","showCancelButton","confirmButtonText","cancelButtonText","isConfirm","chrome","webstore","install","open","error1","mozMediaSource","mediaSource","ChromeScreenShare","getSourceId","mandatory","chromeMediaSource","chromeMediaSourceId","maxWidth","maxHeight","getLocalUserMedia","callback","localStream","addStream","close","stopAllPeerConnections","setAudioEnabled","enabled","forEach","disableAudio","enableAudio","setVideoEnabled","getVideoTracks","disableScreenShare","setScreenShareEnabled","enableScreenShare","err","disableVideo","enableVideo","getTracks","track","startCallAsMonitor","fromUsername","icon","subscription","FlowRouter","goToRoomById","defer","users","findOne","ChatSubscription","rid","t","name","onOffer","signalingState","offer","onLocalDescription","ts","description","sdp","setLocalDescription","createOffer","OfferToReceiveAudio","OfferToReceiveVideo","onRemoteOffer","onAnswer","setRemoteDescription","answer","createAnswer","addIceCandidate","WebRTC","_Class","instancesByRoomId","getInstanceByRoomId","roomId","userId","startup","Tracker","autorun","onUser","webrtc","screenCallback","fireGlobalEvent","postMessage","origin","location","Error","sourceId"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,iBAAP,GAA2BD,OAAOC,iBAAP,IAA4BD,OAAOE,oBAAnC,IAA2DF,OAAOG,uBAA7F;AACAH,OAAOI,qBAAP,GAA+BJ,OAAOI,qBAAP,IAAgCJ,OAAOK,wBAAvC,IAAmEL,OAAOM,2BAAzG;AACAN,OAAOO,eAAP,GAAyBP,OAAOO,eAAP,IAA0BP,OAAOQ,kBAAjC,IAAuDR,OAAOS,qBAAvF;AACAT,OAAOI,qBAAP,GAA+BJ,OAAOI,qBAAP,IAAgCJ,OAAOK,wBAAvC,IAAmEL,OAAOM,2BAAzG;AACAN,OAAOU,YAAP,GAAsBV,OAAOU,YAAP,IAAuBV,OAAOW,eAA9B,IAAiDX,OAAOY,kBAA9E;AACAC,UAAUC,YAAV,GAAyBD,UAAUC,YAAV,IAA0BD,UAAUE,eAApC,IAAuDF,UAAUG,kBAA1F,c;;;;;;;;;;;;ACLA,IAAAC,WAAA,EAAAC,oBAAA,EAAAC,OAAA;;AAAAA,UAAU,cAAV;;AAGMD,uBAAA;ACEJA,uBAAqBE,SAArB,CDDDC,KCCC,GDDM,KCCN;;AAEAH,uBAAqBE,SAArB,CDDDE,GCCC,GDDI;AACJ,QAAG,KAACD,KAAD,KAAU,IAAb;ACEI,aDDHE,QAAQD,GAAR,CAAYE,KAAZ,CAAkBD,OAAlB,EAA2BE,SAA3B,CCCG;AACD;ADJC,GCCJ;;ADGY,WAAAP,oBAAA,CAACQ,cAAD;AAAC,SAACA,cAAD,GAAAA,cAAA;AACb,SAACC,SAAD,GAAa,EAAb;AAEAC,eAAWC,aAAX,CAAyBC,MAAzB,CAAgC,KAACJ,cAAD,CAAgBK,IAAhD,EAAsD,QAAtD,EAAgE,UAAAC,KAAA;ACI5D,aDJ4D,UAACC,IAAD,EAAOC,IAAP;AAC/D,YAAAC,EAAA,EAAAC,CAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,OAAA;;AAAAR,cAACV,GAAD,CAAK,+BAAL,EAAsCW,IAAtC,EAA4CC,IAA5C;;AAEA,gBAAOD,IAAP;AAAA,eACM,QADN;AAEE,kBAAAK,MAAAN,MAAAL,SAAA,8BAAAW,IAAiCG,MAAjC,GAAiC,MAAjC,IAA0C,CAA1C;AACCF,qBAAAP,MAAAL,SAAA;AAAAa,wBAAA;;ACMQ,mBDNRJ,IAAA,GAAAC,MAAAE,KAAAE,MCMQ,EDNRL,IAAAC,GCMQ,EDNRD,GCMQ,EDNR;ACOUD,qBAAKI,KAAKH,CAAL,CAAL;AACAI,wBAAQE,IAAR,CDRVP,GAAGD,IAAH,CCQU;ADRV;;ACUQ,qBAAOM,OAAP;AACD;;ADdV;AAH+D,OCI5D;ADJ4D,WAAhE;AAHY;;AC0BZtB,uBAAqBE,SAArB,CDfDuB,YCeC,GDfa,UAACV,IAAD,EAAOC,IAAP;AACb,QAAAC,EAAA,EAAAC,CAAA,EAAAQ,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAT,GAAA,EAAAU,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAX,GAAA,EAAAC,IAAA,EAAAW,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAf,OAAA,EAAAgB,QAAA,EAAAC,QAAA,EAAAC,QAAA;;AAAA,QAAGxB,KAAKH,IAAL,KAAe,KAACL,cAAD,CAAgBK,IAAlC;AAA4C;ACkBzC;;ADjBH,SAACT,GAAD,CAAK,+BAAL,EAAsCW,IAAtC,EAA4CC,IAA5C;;AAEA,YAAOD,IAAP;AAAA,WACM,MADN;AAEE,cAAAK,MAAA,KAAAX,SAAA,4BAAAW,IAA+BG,MAA/B,GAA+B,MAA/B,IAAwC,CAAxC;AACCF,iBAAA,KAAAZ,SAAA;AAAAa,oBAAA;;ACmBK,eDnBLJ,IAAA,GAAAC,MAAAE,KAAAE,MCmBK,EDnBLL,IAAAC,GCmBK,EDnBLD,GCmBK,EDnBL;ACoBOD,iBAAKI,KAAKH,CAAL,CAAL;AACAI,oBAAQE,IAAR,CDrBPP,GAAGD,IAAH,CCqBO;ADrBP;;ACuBK,iBAAOM,OAAP;AACD;;AD1BD;;AADN,WAKM,MALN;AAME,cAAAU,OAAA,KAAAvB,SAAA,4BAAAuB,KAA+BT,MAA/B,GAA+B,MAA/B,IAAwC,CAAxC;AACCU,iBAAA,KAAAxB,SAAA;AAAA6B,qBAAA;;AC0BK,eD1BLZ,IAAA,GAAAG,OAAAI,KAAAV,MC0BK,ED1BLG,IAAAG,IC0BK,ED1BLH,GC0BK,ED1BL;AC2BOT,iBAAKgB,KAAKP,CAAL,CAAL;AACAY,qBAASd,IAAT,CD5BPP,GAAGD,IAAH,CC4BO;AD5BP;;AC8BK,iBAAOsB,QAAP;AACD;;ADjCD;;AALN,WASM,WATN;AAUE,cAAAJ,OAAA,KAAAzB,SAAA,iCAAAyB,KAAoCX,MAApC,GAAoC,MAApC,IAA6C,CAA7C;AACCY,iBAAA,KAAA1B,SAAA;AAAA8B,qBAAA;;ACiCK,eDjCLZ,IAAA,GAAAG,OAAAK,KAAAZ,MCiCK,EDjCLI,IAAAG,ICiCK,EDjCLH,GCiCK,EDjCL;ACkCOV,iBAAKkB,KAAKR,CAAL,CAAL;AACAY,qBAASf,IAAT,CDnCPP,GAAGD,IAAH,CCmCO;ADnCP;;ACqCK,iBAAOuB,QAAP;AACD;;ADxCD;;AATN,WAaM,aAbN;AAcE,cAAAH,OAAA,KAAA3B,SAAA,mCAAA2B,KAAsCb,MAAtC,GAAsC,MAAtC,IAA+C,CAA/C;AACCc,iBAAA,KAAA5B,SAAA;AAAA+B,qBAAA;;ACwCK,eDxCLZ,IAAA,GAAAG,OAAAM,KAAAd,MCwCK,EDxCLK,IAAAG,ICwCK,EDxCLH,GCwCK,EDxCL;ACyCOX,iBAAKoB,KAAKT,CAAL,CAAL;AACAY,qBAAShB,IAAT,CD1CPP,GAAGD,IAAH,CC0CO;AD1CP;;AC4CK,iBAAOwB,QAAP;AACD;;AD5DP;AAJa,GCeb;;AAqDAxC,uBAAqBE,SAArB,CD/CDuC,SC+CC,GD/CU,UAACzB,IAAD;AACV,SAACZ,GAAD,CAAK,kCAAL,EAAyC,KAACI,cAAD,CAAgBK,IAAzD,EAA+D,KAACL,cAAD,CAAgBkC,MAA/E;ACgDE,WD/CFhC,WAAWC,aAAX,CAAyBgC,iBAAzB,CAA2C,KAACnC,cAAD,CAAgBK,IAA3D,EAAiE,QAAjE,EAA2E,MAA3E,EACC;AAAA+B,YAAM,KAACpC,cAAD,CAAgBkC,MAAtB;AACA7B,YAAM,KAACL,cAAD,CAAgBK,IADtB;AAEAgC,aAAO7B,KAAK6B,KAFZ;AAGAC,eAAS9B,KAAK8B;AAHd,KADD,CC+CE;ADjDQ,GC+CV;;AAUA9C,uBAAqBE,SAArB,CDjDD6C,QCiDC,GDjDS,UAAC/B,IAAD;AACT,SAACZ,GAAD,CAAK,iCAAL,EAAwC,KAACI,cAAD,CAAgBK,IAAxD,EAA8D,KAACL,cAAD,CAAgBkC,MAA9E;;AACA,QAAG1B,KAAK8B,OAAL,KAAgB,IAAnB;ACkDI,aDjDHpC,WAAWC,aAAX,CAAyBqC,UAAzB,CAAoChC,KAAKiC,EAAzC,EAA6C,QAA7C,EAAuD,MAAvD,EACC;AAAAL,cAAM,KAACpC,cAAD,CAAgBkC,MAAtB;AACA7B,cAAM,KAACL,cAAD,CAAgBK,IADtB;AAEAgC,eAAO7B,KAAK6B,KAFZ;AAGAC,iBAAS9B,KAAK8B;AAHd,OADD,CCiDG;ADlDJ;ACyDI,aDlDHpC,WAAWC,aAAX,CAAyBgC,iBAAzB,CAA2C,KAACnC,cAAD,CAAgBK,IAA3D,EAAiE,QAAjE,EAA2E,MAA3E,EACC;AAAA+B,cAAM,KAACpC,cAAD,CAAgBkC,MAAtB;AACA7B,cAAM,KAACL,cAAD,CAAgBK,IADtB;AAEAgC,eAAO7B,KAAK6B,KAFZ;AAGAC,iBAAS9B,KAAK8B;AAHd,OADD,CCkDG;AAMD;ADjEM,GCiDT;;AAmBA9C,uBAAqBE,SAArB,CDrDDgD,aCqDC,GDrDc,UAAClC,IAAD;AACdA,SAAK4B,IAAL,GAAY,KAACpC,cAAD,CAAgBkC,MAA5B;AACA1B,SAAKH,IAAL,GAAY,KAACL,cAAD,CAAgBK,IAA5B;AACA,SAACT,GAAD,CAAK,sCAAL,EAA6CY,IAA7C;ACsDE,WDrDFN,WAAWC,aAAX,CAAyBqC,UAAzB,CAAoChC,KAAKiC,EAAzC,EAA6C,QAA7C,EAAuD,WAAvD,EAAoEjC,IAApE,CCqDE;ADzDY,GCqDd;;AAOAhB,uBAAqBE,SAArB,CDtDDiD,eCsDC,GDtDgB,UAACnC,IAAD;AAChBA,SAAK4B,IAAL,GAAY,KAACpC,cAAD,CAAgBkC,MAA5B;AACA1B,SAAKH,IAAL,GAAY,KAACL,cAAD,CAAgBK,IAA5B;AACA,SAACT,GAAD,CAAK,wCAAL,EAA+CY,IAA/C;ACuDE,WDtDFN,WAAWC,aAAX,CAAyBqC,UAAzB,CAAoChC,KAAKiC,EAAzC,EAA6C,QAA7C,EAAuD,aAAvD,EAAsEjC,IAAtE,CCsDE;AD1Dc,GCsDhB;;AAOAhB,uBAAqBE,SAArB,CDvDDkD,UCuDC,GDvDW,UAACpC,IAAD;AACX,SAACZ,GAAD,CAAK,mCAAL,EAA0CY,IAA1C,EAAgD,KAACR,cAAD,CAAgBK,IAAhE;AACAG,SAAK4B,IAAL,GAAY,KAACpC,cAAD,CAAgBkC,MAA5B;ACwDE,WDvDFhC,WAAWC,aAAX,CAAyB0C,UAAzB,CAAoC,KAAC7C,cAAD,CAAgBK,IAApD,EAA0D,QAA1D,EAAoE,QAApE,EAA8EG,IAA9E,CCuDE;AD1DS,GCuDX;;AAMAhB,uBAAqBE,SAArB,CDxDDoD,YCwDC,GDxDa,UAACrC,EAAD;AACb,QAAAsC,IAAA;;ACyDE,QAAI,CAACA,OAAO,KAAK9C,SAAb,EAAwB,cAAxB,KAA2C,IAA/C,EAAqD;AACnD8C,WD1DO,cC0DP,ID1D0B,EC0D1B;AACD;;AACD,WD3DF,KAAC9C,SAAD,CAAW,cAAX,EAA2Be,IAA3B,CAAgCP,EAAhC,CC2DE;AD7DW,GCwDb;;AAQAjB,uBAAqBE,SAArB,CD5DDsD,YC4DC,GD5Da,UAACvC,EAAD;AACb,QAAAsC,IAAA;;AC6DE,QAAI,CAACA,OAAO,KAAK9C,SAAb,EAAwB,cAAxB,KAA2C,IAA/C,EAAqD;AACnD8C,WD9DO,cC8DP,ID9D0B,EC8D1B;AACD;;AACD,WD/DF,KAAC9C,SAAD,CAAW,cAAX,EAA2Be,IAA3B,CAAgCP,EAAhC,CC+DE;ADjEW,GC4Db;;AAQAjB,uBAAqBE,SAArB,CDhEDuD,iBCgEC,GDhEkB,UAACxC,EAAD;AAClB,QAAAsC,IAAA;;ACiEE,QAAI,CAACA,OAAO,KAAK9C,SAAb,EAAwB,mBAAxB,KAAgD,IAApD,EAA0D;AACxD8C,WDlEO,mBCkEP,IDlE+B,ECkE/B;AACD;;AACD,WDnEF,KAAC9C,SAAD,CAAW,mBAAX,EAAgCe,IAAhC,CAAqCP,EAArC,CCmEE;ADrEgB,GCgElB;;AAQAjB,uBAAqBE,SAArB,CDpEDwD,mBCoEC,GDpEoB,UAACzC,EAAD;AACpB,QAAAsC,IAAA;;ACqEE,QAAI,CAACA,OAAO,KAAK9C,SAAb,EAAwB,qBAAxB,KAAkD,IAAtD,EAA4D;AAC1D8C,WDtEO,qBCsEP,IDtEiC,ECsEjC;AACD;;AACD,WDvEF,KAAC9C,SAAD,CAAW,qBAAX,EAAkCe,IAAlC,CAAuCP,EAAvC,CCuEE;ADzEkB,GCoEpB;;AAQAjB,uBAAqBE,SAArB,CDxEDyD,cCwEC,GDxEe,UAAC1C,EAAD;AACf,QAAAsC,IAAA;;ACyEE,QAAI,CAACA,OAAO,KAAK9C,SAAb,EAAwB,gBAAxB,KAA6C,IAAjD,EAAuD;AACrD8C,WD1EO,gBC0EP,ID1E4B,EC0E5B;AACD;;AACD,WD3EF,KAAC9C,SAAD,CAAW,gBAAX,EAA6Be,IAA7B,CAAkCP,EAAlC,CC2EE;AD7Ea,GCwEf;;AAQA,SAAOjB,oBAAP;AAED,CDjLK;;AAoGAD,cAAA;ACgFJA,cAAYG,SAAZ,CD/ED0D,MC+EC,GD9EA;AAAAC,gBAAY;AAAZ,GC8EA;AAIA9D,cAAYG,SAAZ,CDhFDC,KCgFC,GDhFM,KCgFN;AAEAJ,cAAYG,SAAZ,CDhFD4D,cCgFC,GDhFe9D,oBCgFf,CDtFI,CASL;;;;;AAIa,WAAAD,WAAA,CAAC2C,MAAD,EAAU7B,IAAV;AACZ,QAAAK,CAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA2C,MAAA,EAAAC,YAAA,EAAAC,OAAA,EAAAC,SAAA;AADa,SAACxB,MAAD,GAAAA,MAAA;AAAS,SAAC7B,IAAD,GAAAA,IAAA;AACtB,SAAC+C,MAAD,CAAQC,UAAR,GAAqB,EAArB;AAEAI,cAAUvD,WAAWyD,QAAX,CAAoBC,GAApB,CAAwB,gBAAxB,CAAV;;AACA,SAAAH,WAAA,OAAGA,QAASI,IAAT,EAAH,GAAG,MAAH,MAAwB,EAAxB;AACCJ,gBAAUA,QAAQK,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;AACAL,gBAAUA,QAAQM,KAAR,CAAc,GAAd,CAAV;;AACA,WAAArD,IAAA,GAAAC,MAAA8C,QAAA1C,MAAA,EAAAL,IAAAC,GAAA,EAAAD,GAAA;ACoFK6C,iBAASE,QAAQ/C,CAAR,CAAT;ADnFJ6C,iBAASA,OAAOQ,KAAP,CAAa,GAAb,CAAT;AACAP,uBACC;AAAAQ,gBAAMT,OAAOU,GAAP;AAAN,SADD;;AAGA,YAAGV,OAAOxC,MAAP,KAAiB,CAApB;AACCwC,mBAASA,OAAO,CAAP,EAAUQ,KAAV,CAAgB,GAAhB,CAAT;AACAP,uBAAaU,QAAb,GAAwBC,mBAAmBZ,OAAO,CAAP,CAAnB,CAAxB;AACAC,uBAAaY,UAAb,GAA0BD,mBAAmBZ,OAAO,CAAP,CAAnB,CAA1B;ACqFI;;ADnFL,aAACH,MAAD,CAAQC,UAAR,CAAmBrC,IAAnB,CAAwBwC,YAAxB;AAbF;ACmGG;;ADpFH,SAACa,eAAD,GAAmB,EAAnB;AAEA,SAACC,WAAD,GAAmB,IAAAC,WAAA,CAAY,EAAZ,CAAnB;AACA,SAACC,eAAD,GAAuB,IAAAD,WAAA,CAAY,EAAZ,CAAvB;AACA,SAACE,cAAD,GAAsB,IAAAF,WAAA,CAAY,KAAZ,CAAtB;AACA,SAACG,YAAD,GAAoB,IAAAH,WAAA,CAAY,IAAZ,CAApB;AACA,SAACI,YAAD,GAAoB,IAAAJ,WAAA,CAAY,IAAZ,CAApB;AACA,SAACK,cAAD,GAAsB,IAAAL,WAAA,CAAY,KAAZ,CAAtB;AACA,SAACM,kBAAD,GAA0B,IAAAN,WAAA,CAAY,KAAZ,CAA1B;AACA,SAACO,QAAD,GAAY,IAAIP,WAAJ,EAAZ;AAEA,SAACQ,MAAD,GAAU,KAAV;AACA,SAACC,gBAAD,GAAoB,KAApB;AACA,SAAC1C,OAAD,GAAW,KAAX;AACA,SAAC2C,UAAD,GAAc,KAAd;AAEA,SAAC9F,SAAD,GAAa,MAAb;AACAuE,gBAAYvE,UAAUuE,SAAV,CAAoBwB,iBAApB,EAAZ;;AACA,QAAGxB,UAAUyB,OAAV,CAAkB,UAAlB,MAAmC,CAAC,CAAvC;AACC,WAAChG,SAAD,GAAa,UAAb;AADD,WAEK,IAAGuE,UAAUyB,OAAV,CAAkB,QAAlB,MAAiC,CAAC,CAArC;AACJ,WAAChG,SAAD,GAAa,QAAb;AADI,WAEA,IAAGuE,UAAUyB,OAAV,CAAkB,SAAlB,MAAkC,CAAC,CAAtC;AACJ,WAAChG,SAAD,GAAa,SAAb;AADI,WAEA,IAAGuE,UAAUyB,OAAV,CAAkB,QAAlB,MAAiC,CAAC,CAArC;AACJ,WAAChG,SAAD,GAAa,QAAb;ACmFE;;ADjFH,SAACiG,oBAAD,IAAAxE,MAAwB,KAACzB,SAAzB,MAAuC,QAAvC,IAAwByB,QAAyB,SAAjD,IAAwBA,QAAoC,UAA5D;AAEA,SAACyB,KAAD,GACC;AAAAgD,aAAO,KAAP;AACAC,aAAO;AADP,KADD;AAIA,SAACC,SAAD,GAAiB,SAACjC,cAAD,CAAgB,IAAhB,CAAjB;AAEA,SAACiC,SAAD,CAAWzC,YAAX,CAAwB,KAACA,YAAD,CAAc0C,IAAd,CAAmB,IAAnB,CAAxB;AACA,SAACD,SAAD,CAAWvC,YAAX,CAAwB,KAACA,YAAD,CAAcwC,IAAd,CAAmB,IAAnB,CAAxB;AACA,SAACD,SAAD,CAAWtC,iBAAX,CAA6B,KAACA,iBAAD,CAAmBuC,IAAnB,CAAwB,IAAxB,CAA7B;AACA,SAACD,SAAD,CAAWrC,mBAAX,CAA+B,KAACA,mBAAD,CAAqBsC,IAArB,CAA0B,IAA1B,CAA/B;AACA,SAACD,SAAD,CAAWpC,cAAX,CAA0B,KAACA,cAAD,CAAgBqC,IAAhB,CAAqB,IAArB,CAA1B;AAEAC,WAAOC,WAAP,CAAmB,KAACC,oBAAD,CAAsBH,IAAtB,CAA2B,IAA3B,CAAnB,EAAkD,IAAlD;AA5DY;;AC8IZjG,cAAYG,SAAZ,CD9EDE,GC8EC,GD9EI;AACJ,QAAG,KAACD,KAAD,KAAU,IAAb;AC+EI,aD9EHE,QAAQD,GAAR,CAAYE,KAAZ,CAAkBD,OAAlB,EAA2BE,SAA3B,CC8EG;AACD;ADjFC,GC8EJ;;AAMAR,cAAYG,SAAZ,CDhFDkG,OCgFC,GDhFQ;ACiFN,WDhFF/F,QAAQgG,KAAR,CAAc/F,KAAd,CAAoBD,OAApB,EAA6BE,SAA7B,CCgFE;ADjFM,GCgFR;;AAIAR,cAAYG,SAAZ,CDjFDiG,oBCiFC,GDjFqB;AACrB,QAAAG,EAAA,EAAAC,cAAA,EAAAnF,GAAA,EAAAC,IAAA,EAAAC,OAAA;AAAAF,UAAA,KAAAyD,eAAA;AAAAvD,cAAA;;ACoFE,SDpFFgF,ECoFE,2CDpFFlF,GCoFE,GDpFF;ACqFImF,uBAAiBnF,IAAIkF,EAAJ,CAAjB;;ADpFH,UAAG,CAAAjF,OAAAkF,eAAeC,kBAAf,MAA0C,WAA1C,IAAAnF,SAAuD,WAAvD,IAAwEkF,eAAeE,SAAf,GAA2B,IAA3B,GAAkCC,KAAKC,GAAL,EAA7G;ACsFKrF,gBAAQE,IAAR,CDrFJ,KAACoF,kBAAD,CAAoBN,EAApB,CCqFI;ADtFL;ACwFKhF,gBAAQE,IAAR,CAAa,KAAK,CAAlB;AACD;AD1FL;;AC4FE,WAAOF,OAAP;AD7FmB,GCiFrB;;AAeAvB,cAAYG,SAAZ,CD3FD2G,iBC2FC,GD3FkB;AAClB,QAAA3F,CAAA,EAAAoF,EAAA,EAAAQ,IAAA,EAAAC,KAAA,EAAAC,SAAA,EAAA7F,GAAA,EAAAoF,cAAA,EAAAnF,GAAA,EAAAC,IAAA,EAAA4F,YAAA;AAAAF,YAAQ,EAAR;AACAC,gBAAY,EAAZ;AAEA5F,UAAA,KAAAyD,eAAA;;AAAA,SAAAyB,EAAA,2CAAAlF,GAAA;AC6FImF,uBAAiBnF,IAAIkF,EAAJ,CAAjB;AD5FHjF,aAAAkF,eAAAW,gBAAA;;AAAA,WAAAhG,IAAA,GAAAC,MAAAE,KAAAE,MAAA,EAAAL,IAAAC,GAAA,EAAAD,GAAA;AC+FK+F,uBAAe5F,KAAKH,CAAL,CAAf;AD9FJ4F,eACC;AAAAR,cAAIA,EAAJ;AACAa,eAAKC,IAAIC,eAAJ,CAAoBJ,YAApB,CADL;AAEAK,iBAAOf,eAAeC;AAFtB,SADD;;AAKA,gBAAOD,eAAeC,kBAAtB;AAAA,eACM,UADN;AAEEM,iBAAKS,SAAL,GAAiB,eAAjB;AADI;;AADN,eAIM,WAJN;AAAA,eAImB,WAJnB;AAKET,iBAAKS,SAAL,GAAiB,WAAjB;AACAT,iBAAKU,SAAL,GAAiB,IAAjB;AAFiB;;AAJnB,eAQM,cARN;AASEV,iBAAKS,SAAL,GAAiB,cAAjB;AADI;;AARN,eAWM,QAXN;AAYET,iBAAKS,SAAL,GAAiB,QAAjB;AADI;;AAXN,eAcM,QAdN;AAeET,iBAAKS,SAAL,GAAiB,QAAjB;AAfF;;AAiBAR,cAAMvF,IAAN,CAAWsF,IAAX;AACAE,kBAAUV,EAAV,IAAgBQ,IAAhB;AAxBD;AADD;;AA2BA,SAAChC,WAAD,CAAa2C,GAAb,CAAiBV,KAAjB;ACkGE,WDjGF,KAAC/B,eAAD,CAAiByC,GAAjB,CAAqBT,SAArB,CCiGE;ADjIgB,GC2FlB;;AAyCAjH,cAAYG,SAAZ,CDlGDwH,mBCkGC,GDlGoB;ACmGlB,WDlGF,KAACzC,cAAD,CAAgBwC,GAAhB,CAAoB,KAApB,CCkGE;ADnGkB,GCkGpB;;AAIA1H,cAAYG,SAAZ,CDnGDyH,eCmGC,GDnGgB;AAChB,QAAArB,EAAA,EAAAC,cAAA,EAAAnF,GAAA,EAAAwG,iBAAA;;AAAA,QAAG,KAACrC,MAAD,KAAa,IAAb,IAAqB,KAACzC,OAAD,KAAY,IAAjC,IAAyC,KAAC0C,gBAAD,KAAqB,IAAjE;AAA2E;ACsGxE;;ADpGHoC,wBAAoB,EAApB;AACAxG,UAAA,KAAAyD,eAAA;;AAAA,SAAAyB,EAAA,2CAAAlF,GAAA;ACuGImF,uBAAiBnF,IAAIkF,EAAJ,CAAjB;ADtGHsB,wBAAkBpG,IAAlB,CACC;AAAA8E,YAAIA,EAAJ;AACAzD,eAAO0D,eAAesB;AADtB,OADD;AADD;;AC6GE,WDxGF,KAAC9B,SAAD,CAAW3C,UAAX,CACC;AAAAP,aAAO,KAACA,KAAR;AACA+E,yBAAmBA;AADnB,KADD,CCwGE;ADjHc,GCmGhB,CDjOI,CA2IL;;;;;;;;;ACoHC7H,cAAYG,SAAZ,CD5GDyD,cC4GC,GD5Ge,UAAC3C,IAAD;AAGf,QAAAE,CAAA,EAAAC,GAAA,EAAA2G,gBAAA,EAAAF,iBAAA,EAAAtG,OAAA;AAAA,SAAC2D,cAAD,CAAgBwC,GAAhB,CAAoB,IAApB;AAEAxB,WAAO8B,YAAP,CAAoB,KAACC,qBAArB;AACA,SAACA,qBAAD,GAAyB/B,OAAOgC,UAAP,CAAkB,KAACP,mBAAD,CAAqB1B,IAArB,CAA0B,IAA1B,CAAlB,EAAgD,IAAhD,CAAzB;;AAEA,QAAG,KAACT,MAAD,KAAa,IAAhB;AAA0B;AC2GvB;;ADzGHqC,wBAAoB,CAAC;AAACtB,UAAItF,KAAK4B,IAAV;AAAgBC,aAAO7B,KAAK6B;AAA5B,KAAD,EAAqCqF,MAArC,CAA4ClH,KAAK4G,iBAAjD,CAApB;AAEAtG,cAAA;;AC+GE,SD/GFJ,IAAA,GAAAC,MAAAyG,kBAAArG,MC+GE,ED/GFL,IAAAC,GC+GE,ED/GFD,GC+GE,ED/GF;ACgHI4G,yBAAmBF,kBAAkB1G,CAAlB,CAAnB;;AD/GH,UAAG4G,iBAAiBxB,EAAjB,KAAyB,KAAC5D,MAA1B,IAAyC,KAAAmC,eAAA,CAAAiD,iBAAAxB,EAAA,SAA5C;AACC,aAAClG,GAAD,CAAK,mBAAL,EAA0B0H,iBAAiBxB,EAA3C;ACiHIhF,gBAAQE,IAAR,CDhHJ,KAACgC,YAAD,CACC;AAAAZ,gBAAMkF,iBAAiBxB,EAAvB;AACAzD,iBAAOiF,iBAAiBjF;AADxB,SADD,CCgHI;ADlHL;ACuHKvB,gBAAQE,IAAR,CAAa,KAAK,CAAlB;AACD;ADzHL;;AC2HE,WAAOF,OAAP;ADvIa,GC4Gf,CD/PI,CAsKL;;;;AC4HCvB,cAAYG,SAAZ,CDzHDiI,iBCyHC,GDzHkB,UAAC7B,EAAD;AAClB,QAAA8B,SAAA,EAAAC,UAAA,EAAAnH,CAAA,EAAAC,GAAA,EAAAoF,cAAA;;AAAA,QAA+B,KAAA1B,eAAA,CAAAyB,EAAA,SAA/B;AAAA,aAAO,KAACzB,eAAD,CAAiByB,EAAjB,CAAP;AC4HG;;AD1HHC,qBAAqB,IAAAxH,iBAAA,CAAkB,KAAC6E,MAAnB,CAArB;AAEA2C,mBAAeE,SAAf,GAA2BC,KAAKC,GAAL,EAA3B;AACAJ,mBAAesB,WAAf,GAA6B,EAA7B;AAEA,SAAChD,eAAD,CAAiByB,EAAjB,IAAuBC,cAAvB;AAEA8B,iBAAa,CACZ,cADY,EAEZ,WAFY,EAGZ,cAHY,EAIZ,0BAJY,EAKZ,aALY,EAMZ,gBANY,EAOZ,mBAPY,EAQZ,oBARY,EASZ,mBATY,EAUZ,cAVY,EAWZ,sBAXY,CAAb;;AAcA,SAAAnH,IAAA,GAAAC,MAAAkH,WAAA9G,MAAA,EAAAL,IAAAC,GAAA,EAAAD,GAAA;AC4GIkH,kBAAYC,WAAWnH,CAAX,CAAZ;AD3GHqF,qBAAe+B,gBAAf,CAAgCF,SAAhC,EAA2C,UAAAtH,KAAA;AC6GtC,eD7GsC,UAACyH,CAAD;AC8GpC,iBD7GNzH,MAACV,GAAD,CAAKkG,EAAL,EAASiC,EAAExH,IAAX,EAAiBwH,CAAjB,CC6GM;AD9GoC,SC6GtC;AD7GsC,aAA3C;AADD;;AAIAhC,mBAAe+B,gBAAf,CAAgC,cAAhC,EAAgD,UAAAxH,KAAA;ACgH5C,aDhH4C,UAACyH,CAAD;AAC/C,YAAOA,EAAAC,SAAA,QAAP;AACC;ACiHK;;AACD,eDhHL1H,MAACiF,SAAD,CAAW7C,aAAX,CACC;AAAAD,cAAIqD,EAAJ;AACAkC,qBACC;AAAAA,uBAAWD,EAAEC,SAAF,CAAYA,SAAvB;AACAC,2BAAeF,EAAEC,SAAF,CAAYC,aAD3B;AAEAC,oBAAQH,EAAEC,SAAF,CAAYE;AAFpB;AAFD,SADD,CCgHK;ADpH0C,OCgH5C;ADhH4C,WAAhD;AAWAnC,mBAAe+B,gBAAf,CAAgC,WAAhC,EAA6C,UAAAxH,KAAA;ACoHzC,aDpHyC,UAACyH,CAAD;ACqHvC,eDpHLzH,MAAC+F,iBAAD,ECoHK;ADrHuC,OCoHzC;ADpHyC,WAA7C;AAGAN,mBAAe+B,gBAAf,CAAgC,cAAhC,EAAgD,UAAAxH,KAAA;ACsH5C,aDtH4C,UAACyH,CAAD;ACuH1C,eDtHLzH,MAAC+F,iBAAD,ECsHK;ADvH0C,OCsH5C;ADtH4C,WAAhD;AAGAN,mBAAe+B,gBAAf,CAAgC,0BAAhC,EAA4D,UAAAxH,KAAA;ACwHxD,aDxHwD,UAACyH,CAAD;AAC3D,YAAAnH,GAAA;;AAAA,YAAG,EAAAA,MAAAmF,eAAeC,kBAAf,MAAsC,cAAtC,IAAApF,QAAsD,QAAtD,KAAoEmF,mBAAkBzF,MAAC+D,eAAD,CAAiByB,EAAjB,CAAzF;AACCxF,gBAAC8F,kBAAD,CAAoBN,EAApB;;AACAL,iBAAOgC,UAAP,CAAkB;AACjB,gBAAGU,OAAOC,IAAP,CAAY9H,MAAC+D,eAAb,EAA8BtD,MAA9B,KAAwC,CAA3C;AC0HS,qBDzHRT,MAAC+H,IAAD,ECyHQ;AACD;AD5HT,aAGE,IAHF;AC8HK;;AACD,eD1HL/H,MAAC+F,iBAAD,EC0HK;ADlIsD,OCwHxD;ADxHwD,WAA5D;AAUA,WAAON,cAAP;AAvDkB,GCyHlB;;AA4DAxG,cAAYG,SAAZ,CD5HD4I,aC4HC,GD5Hc,UAACjG,KAAD,EAAQkG,SAAR,EAAmB3C,OAAnB;AACd,QAAA4C,cAAA;;AAAAA,qBAAiB,UAACC,MAAD;AAChB,UAAAC,YAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA;;AAAA,UAAG,OAAA7J,YAAA,oBAAAA,iBAAA,QAAkByJ,OAAOK,cAAP,GAAwB/H,MAAxB,GAAiC,CAAtD;AACC2H,uBAAe,IAAI1J,YAAJ,EAAf;AACA4J,iBAASF,aAAaK,uBAAb,CAAqCN,MAArC,CAAT;AAEAI,iBAASH,aAAaM,UAAb,EAAT;AACAJ,eAAOK,OAAP,CAAeJ,MAAf;AACAF,eAAOD,aAAaQ,4BAAb,EAAP;AACAL,eAAOI,OAAP,CAAeN,IAAf;AACAE,eAAOM,IAAP,CAAYC,KAAZ,GAAoB,GAApB;AAEAX,eAAOY,WAAP,CAAmBZ,OAAOK,cAAP,GAAwB,CAAxB,CAAnB;AACAL,eAAOa,QAAP,CAAgBX,KAAKF,MAAL,CAAYK,cAAZ,GAA6B,CAA7B,CAAhB;AACAL,eAAOI,MAAP,GAAgBA,MAAhB;AAEA,aAAKH,YAAL,GAAoBA,YAApB;AC4HG;;AACD,aD3HHH,UAAUE,MAAV,CC2HG;AD5Ia,KAAjB;;AC8IE,WD3HFtJ,UAAUC,YAAV,CAAuBiD,KAAvB,EAA8BmG,cAA9B,EAA8C5C,OAA9C,CC2HE;AD/IY,GC4Hd;;AAsBArG,cAAYG,SAAZ,CD3HDN,YC2HC,GD3Ha,UAACiD,KAAD,EAAQkG,SAAR,EAAmB3C,OAAnB;AACb,QAAA2D,aAAA,EAAAC,eAAA,EAAAC,SAAA;;AC4HE,QAAI7D,WAAW,IAAf,EAAqB;AD7HSA,gBAAQ,KAACA,OAAT;AC+H7B;;AD9HH,QAAGvD,MAAMqH,OAAN,KAAmB,IAAtB;AACC,WAACpB,aAAD,CAAejG,KAAf,EAAsBkG,SAAtB,EAAiC3C,OAAjC;;AACA;ACgIE;;AD9HH,QAAG,KAACR,oBAAD,KAA2B,IAA9B;AACCvF,cAAQD,GAAR,CAAY,+BAAZ;AACA;ACgIE;;AD9HH6J,gBAAY,UAAAnJ,KAAA;ACgIR,aDhIQ,UAACqJ,WAAD;AACX,YAAAC,gBAAA,EAAAC,OAAA;;AAAA,YAAGC,SAASC,MAAT,CAAgB5E,OAAhB,CAAwB,8BAAxB,MAA2D,CAAC,CAA5D,IAAsE7G,OAAA0L,qBAAA,QAAtE,IAAwG1J,MAACnB,SAAD,KAAgB,UAA3H;AACC0K,oBAAU;ACkIF,mBDjIPI,KACC;AAAA1J,oBAAM,SAAN;AACA2J,qBAAOC,QAAQC,EAAR,CAAW,0DAAX;AADP,aADD,CCiIO;ADlIE,WAAV;;AAKAH,eACC;AAAA1J,kBAAM,SAAN;AACA2J,mBAAOC,QAAQC,EAAR,CAAW,cAAX,CADP;AAEAC,kBAAMF,QAAQC,EAAR,CAAW,uDAAX,CAFN;AAGAE,kBAAM,IAHN;AAIAC,8BAAkB,IAJlB;AAKAC,+BAAmBL,QAAQC,EAAR,CAAW,mBAAX,CALnB;AAMAK,8BAAkBN,QAAQC,EAAR,CAAW,QAAX;AANlB,WADD,EAQE,UAACM,SAAD;AACD,gBAAA3C,CAAA,EAAApB,GAAA;;AAAA,gBAAG+D,SAAH;AACC,kBAAGpK,MAACnB,SAAD,KAAc,QAAjB;AACCwH,sBAAM,oGAAN;;AACA;ACoIW,yBDnIVgE,OAAOC,QAAP,CAAgBC,OAAhB,CAAwBlE,GAAxB,EAA6BkD,OAA7B,EAAsC;AACrCvL,2BAAOwM,IAAP,CAAYnE,GAAZ;ACoIW,2BDnIXkD,SCmIW;ADrIZ,oBCmIU;ADpIX,yBAAAkB,MAAA;AAIMhD,sBAAAgD,MAAA;AACLzM,yBAAOwM,IAAP,CAAYnE,GAAZ;ACsIU,yBDrIVkD,SCqIU;AD7IZ;AAAA,qBASK,IAAGvJ,MAACnB,SAAD,KAAc,SAAjB;AACJb,uBAAOwM,IAAP,CAAY,yEAAZ;ACuIS,uBDtITjB,SCsIS;ADlJX;ACoJQ;AD7JT;AAuBA,iBAAOjE,QAAQ,KAAR,CAAP;ACyIK;;ADvINgE,2BAAmB,UAACnB,MAAD;AAClB,cAAGkB,eAAA,IAAH;AACClB,mBAAOa,QAAP,CAAgBK,YAAYb,cAAZ,GAA6B,CAA7B,CAAhB;ACyIM;;AACD,iBDzINP,UAAUE,MAAV,CCyIM;AD5IY,SAAnB;;AAKA,YAAGnI,MAACnB,SAAD,KAAc,SAAjB;AACCkD,kBACC;AAAAiD,mBAAOjD,MAAMiD,KAAb;AACAD,mBACC;AAAA2F,8BAAgB,QAAhB;AACAC,2BAAa;AADb;AAFD,WADD;ACgJM,iBD3IN3K,MAACgI,aAAD,CAAejG,KAAf,EAAsBuH,gBAAtB,EAAwChE,OAAxC,CC2IM;ADjJP;ACmJO,iBD3INsF,kBAAkBC,WAAlB,CAA8B7K,MAACnB,SAA/B,EAA0C,UAAC2G,EAAD;AACzCzD,oBACC;AAAAiD,qBAAO,KAAP;AACAD,qBACC;AAAA+F,2BACC;AAAAC,qCAAmB,SAAnB;AACAC,uCAAqBxF,EADrB;AAEAyF,4BAAU,IAFV;AAGAC,6BAAW;AAHX;AADD;AAFD,aADD;ACsJO,mBD7IPlL,MAACgI,aAAD,CAAejG,KAAf,EAAsBuH,gBAAtB,EAAwChE,OAAxC,CC6IO;ADvJR,YC2IM;AAcD;ADtMK,OCgIR;ADhIQ,WAAZ;;AAyDA,QAAG,KAACzG,SAAD,KAAc,SAAd,IAA+BkD,MAAAiD,KAAA,QAA/B,IAA+CjD,MAAMiD,KAAN,KAAe,KAAjE;ACiJI,aDhJHmE,WCgJG;ADjJJ;AAGCD,wBAAkB,UAAAlJ,KAAA;ACiJb,eDjJa,UAACqJ,WAAD;ACkJX,iBDjJNF,UAAUE,WAAV,CCiJM;ADlJW,SCiJb;ADjJa,aAAlB;;AAGAJ,sBAAgB,UAAAjJ,KAAA;ACmJX,eDnJW;ACoJT,iBDnJNmJ,WCmJM;ADpJS,SCmJX;ADnJW,aAAhB;;ACuJG,aDpJH,KAACnB,aAAD,CAAe;AAAChD,eAAOjD,MAAMiD;AAAd,OAAf,EAAqCkE,eAArC,EAAsDD,aAAtD,CCoJG;AAGD;ADlOU,GC2Hb,CDpXI,CAuUL;;;;AC4JChK,cAAYG,SAAZ,CDzJD+L,iBCyJC,GDzJkB,UAACC,QAAD;AAClB,QAAA9F,OAAA,EAAA2C,SAAA;AAAA,SAAC3I,GAAD,CAAK,mBAAL,EAA0BG,SAA1B;;AAEA,QAAG,KAAA4L,WAAA,QAAH;AACC,aAAOD,SAAS,IAAT,EAAe,KAACC,WAAhB,CAAP;AC0JE;;ADxJHpD,gBAAY,UAAAjI,KAAA;AC0JR,aD1JQ,UAACmI,MAAD;AACX,YAAA3C,EAAA,EAAAC,cAAA,EAAAnF,GAAA;AAAAN,cAACqL,WAAD,GAAelD,MAAf;;AACAnI,cAACwE,QAAD,CAAUmC,GAAV,CAAcL,IAAIC,eAAJ,CAAoB4B,MAApB,CAAd;;AAEAnI,cAACqE,YAAD,CAAcsC,GAAd,CAAkB3G,MAAC+B,KAAD,CAAOgD,KAAP,KAAgB,IAAlC;;AACA/E,cAACoE,YAAD,CAAcuC,GAAd,CAAkB3G,MAAC+B,KAAD,CAAOiD,KAAP,KAAgB,IAAlC;;AAEA1E,cAAAN,MAAA+D,eAAA;;AAAA,aAAAyB,EAAA,2CAAAlF,GAAA;AC2JOmF,2BAAiBnF,IAAIkF,EAAJ,CAAjB;AD1JNC,yBAAe6F,SAAf,CAAyBnD,MAAzB;AADD;;AC8JK,eD3JLiD,SAAS,IAAT,EAAepL,MAACqL,WAAhB,CC2JK;ADrKM,OC0JR;AD1JQ,WAAZ;;AAYA/F,cAAU,UAAAtF,KAAA;AC6JN,aD7JM,UAACuF,KAAD;AACT6F,iBAAS,KAAT;AC8JK,eD7JLpL,MAACsF,OAAD,CAASC,KAAT,CC6JK;AD/JI,OC6JN;AD7JM,WAAV;;ACkKE,WD9JF,KAACzG,YAAD,CAAc,KAACiD,KAAf,EAAsBkG,SAAtB,EAAiC3C,OAAjC,CC8JE;ADpLgB,GCyJlB,CDneI,CAmWL;;;;ACmKCrG,cAAYG,SAAZ,CDhKD0G,kBCgKC,GDhKmB,UAACN,EAAD;AACnB,QAAAC,cAAA;AAAAA,qBAAiB,KAAC1B,eAAD,CAAiByB,EAAjB,CAAjB;;AACA,QAAOC,kBAAA,IAAP;AAA4B;ACmKzB;;ADjKH,WAAO,KAAC1B,eAAD,CAAiByB,EAAjB,CAAP;AACAC,mBAAe8F,KAAf;ACmKE,WDjKF,KAACxF,iBAAD,ECiKE;ADxKiB,GCgKnB;;AAWA9G,cAAYG,SAAZ,CDlKDoM,sBCkKC,GDlKuB;AACvB,QAAAhG,EAAA,EAAAC,cAAA,EAAAnF,GAAA,EAAAC,IAAA;AAAAD,UAAA,KAAAyD,eAAA;;AAAA,SAAAyB,EAAA,2CAAAlF,GAAA;ACqKImF,uBAAiBnF,IAAIkF,EAAJ,CAAjB;ADpKH,WAACM,kBAAD,CAAoBN,EAApB;AADD;;ACwKE,WAAO,CAACjF,OAAOvC,OAAOoK,YAAf,KAAgC,IAAhC,GAAuC7H,KDtK3BgL,KCsK2B,EAAvC,GDtKT,MCsKE;ADzKqB,GCkKvB;;AAUAtM,cAAYG,SAAZ,CDvKDqM,eCuKC,GDvKgB,UAACC,OAAD;ACwKd,QAAIA,WAAW,IAAf,EAAqB;ADxKNA,gBAAQ,IAAR;AC0Kd;;ADzKH,QAAG,KAAAL,WAAA,QAAH;AACC,UAAGK,YAAW,IAAX,IAAoB,KAAC3J,KAAD,CAAOiD,KAAP,KAAkB,IAAzC;AACC,eAAO,KAACqG,WAAR;AACA,aAACtJ,KAAD,CAAOiD,KAAP,GAAe,IAAf;AC2KI,eD1KJ,KAACmG,iBAAD,CAAmB,UAAAnL,KAAA;AC2Kb,iBD3Ka;AAClBA,kBAACwL,sBAAD;;AC4KO,mBD3KPxL,MAACiC,QAAD,EC2KO;AD7KW,WC2Kb;AD3Ka,eAAnB,CC0KI;AD7KL;AAOC,aAACoJ,WAAD,CAAa7C,cAAb,GAA8BmD,OAA9B,CAAsC,UAAC3G,KAAD;AC8KhC,iBD9K2CA,MAAM0G,OAAN,GAAgBA,OC8K3D;AD9KN;ACgLI,eD/KJ,KAACtH,YAAD,CAAcuC,GAAd,CAAkB+E,OAAlB,CC+KI;ADxLN;AC0LG;AD3La,GCuKhB;;AAuBAzM,cAAYG,SAAZ,CDlLDwM,YCkLC,GDlLa;ACmLX,WDlLF,KAACH,eAAD,CAAiB,KAAjB,CCkLE;ADnLW,GCkLb;;AAIAxM,cAAYG,SAAZ,CDnLDyM,WCmLC,GDnLY;ACoLV,WDnLF,KAACJ,eAAD,CAAiB,IAAjB,CCmLE;ADpLU,GCmLZ;;AAIAxM,cAAYG,SAAZ,CDpLD0M,eCoLC,GDpLgB,UAACJ,OAAD;ACqLd,QAAIA,WAAW,IAAf,EAAqB;ADrLNA,gBAAQ,IAAR;ACuLd;;ADtLH,QAAG,KAAAL,WAAA,QAAH;AACC,UAAGK,YAAW,IAAX,IAAoB,KAAC3J,KAAD,CAAOgD,KAAP,KAAkB,IAAzC;AACC,eAAO,KAACsG,WAAR;AACA,aAACtJ,KAAD,CAAOgD,KAAP,GAAe,IAAf;ACwLI,eDvLJ,KAACoG,iBAAD,CAAmB,UAAAnL,KAAA;ACwLb,iBDxLa;AAClBA,kBAACwL,sBAAD;;ACyLO,mBDxLPxL,MAACiC,QAAD,ECwLO;AD1LW,WCwLb;ADxLa,eAAnB,CCuLI;AD1LL;AAOC,aAACoJ,WAAD,CAAaU,cAAb,GAA8BJ,OAA9B,CAAsC,UAAC5G,KAAD;AC2LhC,iBD3L2CA,MAAM2G,OAAN,GAAgBA,OC2L3D;AD3LN;AC6LI,eD5LJ,KAACrH,YAAD,CAAcsC,GAAd,CAAkB+E,OAAlB,CC4LI;ADrMN;ACuMG;ADxMa,GCoLhB;;AAuBAzM,cAAYG,SAAZ,CD/LD4M,kBC+LC,GD/LmB;ACgMjB,WD/LF,KAACC,qBAAD,CAAuB,KAAvB,CC+LE;ADhMiB,GC+LnB;;AAIAhN,cAAYG,SAAZ,CDhMD8M,iBCgMC,GDhMkB;ACiMhB,WDhMF,KAACD,qBAAD,CAAuB,IAAvB,CCgME;ADjMgB,GCgMlB;;AAIAhN,cAAYG,SAAZ,CDjMD6M,qBCiMC,GDjMsB,UAACP,OAAD;ACkMpB,QAAIA,WAAW,IAAf,EAAqB;ADlMAA,gBAAQ,IAAR;ACoMpB;;ADnMH,QAAG,KAAAL,WAAA,QAAH;AACC,WAACtJ,KAAD,CAAOqH,OAAP,GAAiBsC,OAAjB;AACA,aAAO,KAACL,WAAR;ACqMG,aDpMH,KAACF,iBAAD,CAAmB,UAAAnL,KAAA;ACqMd,eDrMc,UAACmM,GAAD;AAClB,cAAGA,OAAA,IAAH;AACC;ACsMM;;ADrMPnM,gBAACuE,kBAAD,CAAoBoC,GAApB,CAAwB+E,OAAxB;;AACA1L,gBAACwL,sBAAD;;ACuMM,iBDtMNxL,MAACiC,QAAD,ECsMM;AD3MY,SCqMd;ADrMc,aAAnB,CCoMG;AAUD;ADlNmB,GCiMtB;;AAoBAhD,cAAYG,SAAZ,CD1MDgN,YC0MC,GD1Ma;AC2MX,WD1MF,KAACN,eAAD,CAAiB,KAAjB,CC0ME;AD3MW,GC0Mb;;AAIA7M,cAAYG,SAAZ,CD3MDiN,WC2MC,GD3MY;AC4MV,WD3MF,KAACP,eAAD,CAAiB,IAAjB,CC2ME;AD5MU,GC2MZ;;AAIA7M,cAAYG,SAAZ,CD5MD2I,IC4MC,GD5MK;AACL,SAACtD,MAAD,GAAU,KAAV;AACA,SAACzC,OAAD,GAAW,KAAX;AACA,SAAC0C,gBAAD,GAAoB,KAApB;;AACA,QAAG,KAAA2G,WAAA,YAAkB,OAAO,KAACA,WAAR,KAAyB,WAA9C;AACC,WAACA,WAAD,CAAaiB,SAAb,GAAyBX,OAAzB,CAAiC,UAACY,KAAD;AC6M5B,eD5MJA,MAAMxE,IAAN,EC4MI;AD7ML;AC+ME;;AD7MH,SAACvD,QAAD,CAAUmC,GAAV,CAAc,MAAd;AACA,WAAO,KAAC0E,WAAR;AC+ME,WD7MF,KAACG,sBAAD,EC6ME;ADvNG,GC4ML,CDrnBI,CAsbL;;;;;;ACoNCvM,cAAYG,SAAZ,CD/MDuC,SC+MC,GD/MU,UAACI,KAAD;ACgNR,QAAIA,SAAS,IAAb,EAAmB;ADhNVA,cAAM,EAAN;ACkNR;;ADjNH,SAACzC,GAAD,CAAK,WAAL,EAAkBG,SAAlB;AACA,SAACsC,KAAD,GAASA,KAAT;ACmNE,WDlNF,KAACoJ,iBAAD,CAAmB,UAAAnL,KAAA;ACmNf,aDnNe;AAClBA,cAACyE,MAAD,GAAU,IAAV;ACoNK,eDnNLzE,MAACiF,SAAD,CAAWtD,SAAX,CACC;AAAAI,iBAAO/B,MAAC+B;AAAR,SADD,CCmNK;ADrNa,OCmNf;ADnNe,WAAnB,CCkNE;ADrNQ,GC+MV;;AAgBA9C,cAAYG,SAAZ,CDvNDoN,kBCuNC,GDvNmB,UAACzK,KAAD;ACwNjB,QAAIA,SAAS,IAAb,EAAmB;ADxNDA,cAAM,EAAN;AC0NjB;;ADzNH,SAACzC,GAAD,CAAK,oBAAL,EAA2BG,SAA3B;AACA,SAACsC,KAAD,GAASA,KAAT;AACA,SAAC0C,MAAD,GAAU,IAAV;AACA,SAACzC,OAAD,GAAW,IAAX;AC2NE,WD1NF,KAACiD,SAAD,CAAWtD,SAAX,CACC;AAAAI,aAAO,KAACA,KAAR;AACAC,eAAS;AADT,KADD,CC0NE;AD/NiB,GCuNnB,CD1pBI,CA6cL;;;;;;;;;ACqOC/C,cAAYG,SAAZ,CD7NDoD,YC6NC,GD7Na,UAACtC,IAAD;AACb,QAAAuM,YAAA,EAAAC,IAAA,EAAApM,GAAA,EAAAC,IAAA,EAAAW,IAAA,EAAAyL,YAAA,EAAA/C,KAAA;;AAAA,QAAG,KAACjF,UAAD,KAAe,IAAlB;AACCiI,iBAAWC,YAAX,CAAwB3M,KAAKH,IAA7B;AACAoF,aAAO2H,KAAP,CAAa,UAAA9M,KAAA;AC+NR,eD/NQ;ACgON,iBD/NNA,MAACiC,QAAD,CACC;AAAAE,gBAAIjC,KAAK4B,IAAT;AACAE,qBAAS9B,KAAK8B,OADd;AAEAD,mBAAO7B,KAAK6B;AAFZ,WADD,CC+NM;ADhOM,SC+NR;AD/NQ,aAAb;AAKA;ACmOE;;ADjOH0K,mBAAA,CAAAnM,MAAA6E,OAAA4H,KAAA,CAAAC,OAAA,CAAA9M,KAAA4B,IAAA,aAAAxB,IAAgDsD,QAAhD,GAAgD,MAAhD;AACA+I,mBAAeM,iBAAiBD,OAAjB,CAAyB;AAACE,WAAKhN,KAAKH;AAAX,KAAzB,CAAf;;AAEA,QAAGG,KAAK8B,OAAL,KAAgB,IAAnB;AACC0K,aAAO,KAAP;AACA9C,cAAQ,uBAAqB6C,YAA7B;AAFD,WAGK,KAAAE,gBAAA,OAAGA,aAAcQ,CAAjB,GAAiB,MAAjB,MAAsB,GAAtB;AACJ,WAAA5M,OAAAL,KAAA6B,KAAA,YAAAxB,KAAewE,KAAf,GAAe,MAAf;AACC2H,eAAO,UAAP;AACA9C,gBAAQ,4BAA0B6C,YAAlC;AAFD;AAICC,eAAO,OAAP;AACA9C,gBAAQ,4BAA0B6C,YAAlC;AANG;AAAA;AAQJ,WAAAvL,OAAAhB,KAAA6B,KAAA,YAAAb,KAAe6D,KAAf,GAAe,MAAf;AACC2H,eAAO,UAAP;AACA9C,gBAAQ,2BAAyB+C,aAAaS,IAA9C;AAFD;AAICV,eAAO,OAAP;AACA9C,gBAAQ,2BAAyB+C,aAAaS,IAA9C;AAbG;ACmPF;;AACD,WDrOFzD,KACC;AAAAC,aAAO,oBAAkB8C,IAAlB,GAAuB,iCAAvB,GAAwD9C,KAA/D;AACAG,YAAM,wBADN;AAEAC,YAAM,IAFN;AAGAC,wBAAkB,IAHlB;AAIAC,yBAAmB,KAJnB;AAKAC,wBAAkB;AALlB,KADD,EAOE,UAAAnK,KAAA;ACsOE,aDtOF,UAACoK,SAAD;AACD,YAAGA,SAAH;AACCwC,qBAAWC,YAAX,CAAwB3M,KAAKH,IAA7B;ACuOM,iBDtONoF,OAAO2H,KAAP,CAAa;ACuOL,mBDtOP9M,MAACiC,QAAD,CACC;AAAAE,kBAAIjC,KAAK4B,IAAT;AACAE,uBAAS9B,KAAK8B,OADd;AAEAD,qBAAO7B,KAAK6B;AAFZ,aADD,CCsOO;ADvOR,YCsOM;ADxOP;ACgPO,iBDxON/B,MAAC+H,IAAD,ECwOM;AACD;ADlPL,OCsOE;ADtOF,WAPF,CCqOE;ADpQW,GC6Nb,CDlrBI,CAugBL;;;;;;;;;;ACsPC9I,cAAYG,SAAZ,CD7OD6C,QC6OC,GD7OS,UAAC/B,IAAD;AACT,QAAAI,GAAA,EAAAC,IAAA;;AC8OE,QAAIL,QAAQ,IAAZ,EAAkB;AD/OVA,aAAK,EAAL;ACiPP;;ADhPH,QAAG,EAAAI,MAAAJ,KAAA6B,KAAA,YAAAzB,IAAA0E,KAAA,kBAAH;AACC,WAACjD,KAAD,CAAOiD,KAAP,GAAe9E,KAAK6B,KAAL,CAAWiD,KAA1B;ACkPE;;ADhPH,QAAG,EAAAzE,OAAAL,KAAA6B,KAAA,YAAAxB,KAAAwE,KAAA,kBAAH;AACC,WAAChD,KAAD,CAAOgD,KAAP,GAAe7E,KAAK6B,KAAL,CAAWgD,KAA1B;ACkPE;;ADhPH7E,SAAK6B,KAAL,GAAa,KAACA,KAAd;AAEA,SAACzC,GAAD,CAAK,UAAL,EAAiBG,SAAjB;ACiPE,WDhPF,KAAC0L,iBAAD,CAAmB,UAAAnL,KAAA;ACiPf,aDjPe;AAClBA,cAAC0E,gBAAD,GAAoBxE,KAAK8B,OAAzB;AACAhC,cAACyE,MAAD,GAAU,IAAV;ACkPK,eDjPLzE,MAACiF,SAAD,CAAWhD,QAAX,CAAoB/B,IAApB,CCiPK;ADpPa,OCiPf;ADjPe,WAAnB,CCgPE;AD1PO,GC6OT,CD7vBI,CAgiBL;;;;;;;;;;AC8PCjB,cAAYG,SAAZ,CDrPDsD,YCqPC,GDrPa,UAACxC,IAAD;AACb,QAAAmN,OAAA,EAAA5H,cAAA;;AAAA,QAAG,KAAChB,MAAD,KAAa,IAAhB;AAA0B;ACwPvB;;ADtPH,SAACnF,GAAD,CAAK,cAAL,EAAqBG,SAArB;AAEAgG,qBAAiB,KAAC4B,iBAAD,CAAmBnH,KAAK4B,IAAxB,CAAjB;;AASA,QAAG2D,eAAe6H,cAAf,KAAmC,UAAtC;AACC,WAACxH,kBAAD,CAAoB5F,KAAK4B,IAAzB;AACA2D,uBAAiB,KAAC4B,iBAAD,CAAmBnH,KAAK4B,IAAxB,CAAjB;AC+OE;;AD7OH,QAAG2D,eAAeC,kBAAf,KAAuC,KAA1C;AACC;AC+OE;;AD7OHD,mBAAesB,WAAf,GAA6B7G,KAAK6B,KAAlC;;AAEA,QAAyC,KAACsJ,WAA1C;AAAA5F,qBAAe6F,SAAf,CAAyB,KAACD,WAA1B;AC+OG;;AD7OHgC,cAAU,UAAArN,KAAA;AC+ON,aD/OM,UAACuN,KAAD;AACT,YAAAC,kBAAA;;AAAAA,6BAAqB;ACiPd,iBDhPNxN,MAACiF,SAAD,CAAW5C,eAAX,CACC;AAAAF,gBAAIjC,KAAK4B,IAAT;AACA7B,kBAAM,OADN;AAEAwN,gBAAIhI,eAAeE,SAFnB;AAGA5D,mBAAO/B,MAAC+B,KAHR;AAIA2L,yBACC;AAAAC,mBAAKJ,MAAMI,GAAX;AACA1N,oBAAMsN,MAAMtN;AADZ;AALD,WADD,CCgPM;ADjPc,SAArB;;AC4PK,eDlPLwF,eAAemI,mBAAf,CAAuC,IAAAxP,qBAAA,CAAsBmP,KAAtB,CAAvC,EAAqEC,kBAArE,EAAyFxN,MAACsF,OAA1F,CCkPK;AD7PI,OC+ON;AD/OM,WAAV;;AAaA,QAAGpF,KAAK8B,OAAL,KAAgB,IAAnB;ACoPI,aDnPHyD,eAAeoI,WAAf,CAA2BR,OAA3B,EAAoC,KAAC/H,OAArC,EACC;AAAAwF,mBACC;AAAAgD,+BAAqB5N,KAAK6B,KAAL,CAAWiD,KAAhC;AACA+I,+BAAqB7N,KAAK6B,KAAL,CAAWgD;AADhC;AADD,OADD,CCmPG;ADpPJ;AC2PI,aDrPHU,eAAeoI,WAAf,CAA2BR,OAA3B,EAAoC,KAAC/H,OAArC,CCqPG;AACD;ADlSU,GCqPb,CD9xBI,CAwlBL;;;;;;;AC8PCrG,cAAYG,SAAZ,CDxPD4O,aCwPC,GDxPc,UAAC9N,IAAD;AACd,QAAA+N,QAAA,EAAAxI,cAAA,EAAAnF,GAAA;;AAAA,QAAG,KAACmE,MAAD,KAAa,IAAhB;AAA0B;AC2PvB;;ADzPH,SAACnF,GAAD,CAAK,eAAL,EAAsBG,SAAtB;AACAgG,qBAAiB,KAAC4B,iBAAD,CAAmBnH,KAAK4B,IAAxB,CAAjB;;AAEA,QAAG,EAAAxB,MAAAmF,eAAe6H,cAAf,MAAkC,kBAAlC,IAAAhN,QAAsD,QAAtD,KAAoEmF,eAAeE,SAAf,GAA2BzF,KAAKuN,EAAvG;AACC,WAAC3H,kBAAD,CAAoB5F,KAAK4B,IAAzB;AACA2D,uBAAiB,KAAC4B,iBAAD,CAAmBnH,KAAK4B,IAAxB,CAAjB;AC0PE;;ADxPH,QAAG2D,eAAeC,kBAAf,KAAuC,KAA1C;AACC;AC0PE;;ADxPHD,mBAAeyI,oBAAf,CAAwC,IAAA9P,qBAAA,CAAsB8B,KAAKwN,WAA3B,CAAxC;;AAEA;AAAI,UAAyC,KAACrC,WAA1C;AAAA5F,uBAAe6F,SAAf,CAAyB,KAACD,WAA1B;AAAJ;AAAA,aAAAZ,MAAA;;AAEAwD,eAAW,UAAAjO,KAAA;AC4PP,aD5PO,UAACmO,MAAD;AACV,YAAAX,kBAAA;;AAAAA,6BAAqB;AC8Pd,iBD7PNxN,MAACiF,SAAD,CAAW5C,eAAX,CACC;AAAAF,gBAAIjC,KAAK4B,IAAT;AACA7B,kBAAM,QADN;AAEAwN,gBAAIhI,eAAeE,SAFnB;AAGA+H,yBACC;AAAAC,mBAAKQ,OAAOR,GAAZ;AACA1N,oBAAMkO,OAAOlO;AADb;AAJD,WADD,CC6PM;AD9Pc,SAArB;;ACwQK,eD/PLwF,eAAemI,mBAAf,CAAuC,IAAAxP,qBAAA,CAAsB+P,MAAtB,CAAvC,EAAsEX,kBAAtE,EAA0FxN,MAACsF,OAA3F,CC+PK;ADzQK,OC4PP;AD5PO,WAAX;;AC4QE,WDhQFG,eAAe2I,YAAf,CAA4BH,QAA5B,EAAsC,KAAC3I,OAAvC,CCgQE;AD7RY,GCwPd,CDt1BI,CA8nBL;;;;;;;ACwQCrG,cAAYG,SAAZ,CDlQDuD,iBCkQC,GDlQkB,UAACzC,IAAD;AAClB,QAAAuF,cAAA,EAAAnF,GAAA;;AAAA,QAAG,KAACmE,MAAD,KAAa,IAAhB;AAA0B;ACqQvB;;ADpQH,QAAGvE,KAAKiC,EAAL,KAAa,KAACP,MAAjB;AAA6B;ACuQ1B;;ADrQH,SAACtC,GAAD,CAAK,mBAAL,EAA0BG,SAA1B;AACAgG,qBAAiB,KAAC4B,iBAAD,CAAmBnH,KAAK4B,IAAxB,CAAjB;;AAEA,SAAAxB,MAAGmF,eAAeC,kBAAlB,MAA6C,QAA7C,IAAGpF,QAAoD,QAAvD,IAAGA,QAA8D,cAAjE,IAAGA,QAA8E,WAAjF;ACsQI,aDrQHmF,eAAe4I,eAAf,CAAmC,IAAA9P,eAAA,CAAgB2B,KAAKwH,SAArB,CAAnC,CCqQG;AACD;AD9Qe,GCkQlB,CDt4BI,CA+oBL;;;;;;;;;;;;;ACoRCzI,cAAYG,SAAZ,CDxQDwD,mBCwQC,GDxQoB,UAAC1C,IAAD;AACpB,QAAAuF,cAAA;;AAAA,QAAG,KAAChB,MAAD,KAAa,IAAhB;AAA0B;AC2QvB;;AD1QH,QAAGvE,KAAKiC,EAAL,KAAa,KAACP,MAAjB;AAA6B;AC6Q1B;;AD3QH,SAACtC,GAAD,CAAK,qBAAL,EAA4BG,SAA5B;AACAgG,qBAAiB,KAAC4B,iBAAD,CAAmBnH,KAAK4B,IAAxB,CAAjB;;AAEA,QAAG5B,KAAKD,IAAL,KAAa,OAAhB;AACCwF,qBAAesB,WAAf,GAA6B7G,KAAK6B,KAAlC;AC4QG,aD3QH,KAACiM,aAAD,CACC;AAAAlM,cAAM5B,KAAK4B,IAAX;AACA2L,YAAIvN,KAAKuN,EADT;AAEAC,qBAAaxN,KAAKwN;AAFlB,OADD,CC2QG;AD7QJ;ACmRI,aD5QHjI,eAAeyI,oBAAf,CAAwC,IAAA9P,qBAAA,CAAsB8B,KAAKwN,WAA3B,CAAxC,CC4QG;AACD;AD3RiB,GCwQpB;;AAsBA,SAAOzO,WAAP;AAED,CD37BK;;AA4qBNqP,SAAS;AACK,WAAAC,MAAA;AACZ,SAACC,iBAAD,GAAqB,EAArB;AADY;;ACqRZD,SAAOnP,SAAP,CDlRDqP,mBCkRC,GDlRoB,UAACC,MAAD;AACpB,QAAAhD,OAAA,EAAAiB,YAAA;AAAAA,mBAAeM,iBAAiBD,OAAjB,CAAyB;AAACE,WAAKwB;AAAN,KAAzB,CAAf;;AACA,QAAG,CAAI/B,YAAP;AACC;ACsRE;;ADpRHjB,cAAU,KAAV;;AACA,YAAOiB,aAAaQ,CAApB;AAAA,WACM,GADN;AAEEzB,kBAAU9L,WAAWyD,QAAX,CAAoBC,GAApB,CAAwB,sBAAxB,CAAV;AADI;;AADN,WAGM,GAHN;AAIEoI,kBAAU9L,WAAWyD,QAAX,CAAoBC,GAApB,CAAwB,uBAAxB,CAAV;AADI;;AAHN,WAKM,GALN;AAMEoI,kBAAU9L,WAAWyD,QAAX,CAAoBC,GAApB,CAAwB,uBAAxB,CAAV;AANF;;AAQA,QAAGoI,YAAW,KAAd;AACC;ACwRE;;ADtRH,QAAO,KAAA8C,iBAAA,CAAAE,MAAA,SAAP;AACC,WAACF,iBAAD,CAAmBE,MAAnB,IAAiC,IAAAzP,WAAA,CAAYkG,OAAOwJ,MAAP,EAAZ,EAA6BD,MAA7B,CAAjC;ACwRE;;ADtRH,WAAO,KAACF,iBAAD,CAAmBE,MAAnB,CAAP;AApBoB,GCkRpB;;AA4BA,SAAOH,MAAP;AAED,CDpTQ,KAAT;AA2BApJ,OAAOyJ,OAAP,CAAe;AC4Rb,SD3RDC,QAAQC,OAAR,CAAgB;AACf,QAAG3J,OAAOwJ,MAAP,EAAH;AC4RI,aD3RH/O,WAAWC,aAAX,CAAyBkP,MAAzB,CAAgC,QAAhC,EAA0C,UAAA/O,KAAA;AC4RrC,eD5RqC,UAACC,IAAD,EAAOC,IAAP;AACzC,cAAA8O,MAAA;;AAAA,cAAO9O,KAAAH,IAAA,QAAP;AAAuB;AC+RhB;;AD7RPiP,mBAASV,OAAOG,mBAAP,CAA2BvO,KAAKH,IAAhC,CAAT;AC+RM,iBD7RNiP,OAAO/J,SAAP,CAAiBtE,YAAjB,CAA8BV,IAA9B,EAAoCC,IAApC,CC6RM;ADlSmC,SC4RrC;AD5RqC,aAA1C,CC2RG;AAUD;ADvSJ,IC2RC;AD5RF,4H;;;;;;;;;;;;AE9yBA,KAAC0K,iBAAD,GACC;AAAAqE,kBAAgB,MAAhB;AAEApE,eAAa,UAAChM,SAAD,EAAYuM,QAAZ;AACZ,QAAOA,YAAA,IAAP;AAAsB,YAAM,oCAAN;ACCnB;;ADCHR,sBAAkBqE,cAAlB,GAAmC7D,QAAnC;;AAEA,QAAGvM,cAAa,UAAhB;ACAI,aDCHqQ,gBAAgB,cAAhB,EAAgC,GAAhC,CCDG;ADAJ;ACEI,aDCHlR,OAAOmR,WAAP,CAAmB,cAAnB,EAAmC,GAAnC,CCDG;AACD;ADVJ;AAAA,CADD;AAaAnR,OAAOwJ,gBAAP,CAAwB,SAAxB,EAAmC,UAACC,CAAD;AAClC,MAAGA,EAAE2H,MAAF,KAAcpR,OAAOqR,QAAP,CAAgBD,MAAjC;AACC;ACGC;;ADAF,MAAG3H,EAAEvH,IAAF,KAAU,uBAAb;AACC,QAAG0K,kBAAAqE,cAAA,QAAH;AACC,aAAOrE,kBAAkBqE,cAAlB,CAAiC,uBAAjC,CAAP;AADD;AAGC,YAAU,IAAAK,KAAA,CAAM,uBAAN,CAAV;AAJF;ACOE;;ADAF,MAAG7H,EAAAvH,IAAA,CAAAqP,QAAA,QAAH;ACEG,WAAO,OAAO3E,kBAAkBqE,cAAzB,KAA4C,UAA5C,GDDTrE,kBAAkBqE,cAAlB,CAAkCxH,EAAEvH,IAAF,CAAOqP,QAAzC,CCCS,GDDgC,MCCvC;AACD;ADfH,2H","file":"/packages/rocketchat_webrtc.js","sourcesContent":["window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\nwindow.RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription;\nwindow.RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate || window.webkitRTCIceCandidate;\nwindow.RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription;\nwindow.AudioContext = window.AudioContext || window.mozAudioContext || window.webkitAudioContext;\nnavigator.getUserMedia = navigator.getUserMedia || navigator.mozGetUserMedia || navigator.webkitGetUserMedia;\n","emptyFn = ->\n\t# empty\n\nclass WebRTCTransportClass\n\tdebug: false\n\n\tlog: ->\n\t\tif @debug is true\n\t\t\tconsole.log.apply(console, arguments)\n\n\tconstructor: (@webrtcInstance) ->\n\t\t@callbacks = {}\n\n\t\tRocketChat.Notifications.onRoom @webrtcInstance.room, 'webrtc', (type, data) =>\n\t\t\t@log 'WebRTCTransportClass - onRoom', type, data\n\n\t\t\tswitch type\n\t\t\t\twhen 'status'\n\t\t\t\t\tif @callbacks['onRemoteStatus']?.length > 0\n\t\t\t\t\t\tfn(data) for fn in @callbacks['onRemoteStatus']\n\n\tonUserStream: (type, data) ->\n\t\tif data.room isnt @webrtcInstance.room then return\n\t\t@log 'WebRTCTransportClass - onUser', type, data\n\n\t\tswitch type\n\t\t\twhen 'call'\n\t\t\t\tif @callbacks['onRemoteCall']?.length > 0\n\t\t\t\t\tfn(data) for fn in @callbacks['onRemoteCall']\n\n\t\t\twhen 'join'\n\t\t\t\tif @callbacks['onRemoteJoin']?.length > 0\n\t\t\t\t\tfn(data) for fn in @callbacks['onRemoteJoin']\n\n\t\t\twhen 'candidate'\n\t\t\t\tif @callbacks['onRemoteCandidate']?.length > 0\n\t\t\t\t\tfn(data) for fn in @callbacks['onRemoteCandidate']\n\n\t\t\twhen 'description'\n\t\t\t\tif @callbacks['onRemoteDescription']?.length > 0\n\t\t\t\t\tfn(data) for fn in @callbacks['onRemoteDescription']\n\n\tstartCall: (data) ->\n\t\t@log 'WebRTCTransportClass - startCall', @webrtcInstance.room, @webrtcInstance.selfId\n\t\tRocketChat.Notifications.notifyUsersOfRoom @webrtcInstance.room, 'webrtc', 'call',\n\t\t\tfrom: @webrtcInstance.selfId\n\t\t\troom: @webrtcInstance.room\n\t\t\tmedia: data.media\n\t\t\tmonitor: data.monitor\n\n\tjoinCall: (data) ->\n\t\t@log 'WebRTCTransportClass - joinCall', @webrtcInstance.room, @webrtcInstance.selfId\n\t\tif data.monitor is true\n\t\t\tRocketChat.Notifications.notifyUser data.to, 'webrtc', 'join',\n\t\t\t\tfrom: @webrtcInstance.selfId\n\t\t\t\troom: @webrtcInstance.room\n\t\t\t\tmedia: data.media\n\t\t\t\tmonitor: data.monitor\n\t\telse\n\t\t\tRocketChat.Notifications.notifyUsersOfRoom @webrtcInstance.room, 'webrtc', 'join',\n\t\t\t\tfrom: @webrtcInstance.selfId\n\t\t\t\troom: @webrtcInstance.room\n\t\t\t\tmedia: data.media\n\t\t\t\tmonitor: data.monitor\n\n\tsendCandidate: (data) ->\n\t\tdata.from = @webrtcInstance.selfId\n\t\tdata.room = @webrtcInstance.room\n\t\t@log 'WebRTCTransportClass - sendCandidate', data\n\t\tRocketChat.Notifications.notifyUser data.to, 'webrtc', 'candidate', data\n\n\tsendDescription: (data) ->\n\t\tdata.from = @webrtcInstance.selfId\n\t\tdata.room = @webrtcInstance.room\n\t\t@log 'WebRTCTransportClass - sendDescription', data\n\t\tRocketChat.Notifications.notifyUser data.to, 'webrtc', 'description', data\n\n\tsendStatus: (data) ->\n\t\t@log 'WebRTCTransportClass - sendStatus', data, @webrtcInstance.room\n\t\tdata.from = @webrtcInstance.selfId\n\t\tRocketChat.Notifications.notifyRoom @webrtcInstance.room, 'webrtc', 'status', data\n\n\tonRemoteCall: (fn) ->\n\t\t@callbacks['onRemoteCall'] ?= []\n\t\t@callbacks['onRemoteCall'].push fn\n\n\tonRemoteJoin: (fn) ->\n\t\t@callbacks['onRemoteJoin'] ?= []\n\t\t@callbacks['onRemoteJoin'].push fn\n\n\tonRemoteCandidate: (fn) ->\n\t\t@callbacks['onRemoteCandidate'] ?= []\n\t\t@callbacks['onRemoteCandidate'].push fn\n\n\tonRemoteDescription: (fn) ->\n\t\t@callbacks['onRemoteDescription'] ?= []\n\t\t@callbacks['onRemoteDescription'].push fn\n\n\tonRemoteStatus: (fn) ->\n\t\t@callbacks['onRemoteStatus'] ?= []\n\t\t@callbacks['onRemoteStatus'].push fn\n\n\nclass WebRTCClass\n\tconfig:\n\t\ticeServers: []\n\n\tdebug: false\n\n\ttransportClass: WebRTCTransportClass\n\n\n\t###\n\t\t@param seldId {String}\n\t\t@param room {String}\n\t###\n\tconstructor: (@selfId, @room) ->\n\t\t@config.iceServers = []\n\n\t\tservers = RocketChat.settings.get(\"WebRTC_Servers\")\n\t\tif servers?.trim() isnt ''\n\t\t\tservers = servers.replace /\\s/g, ''\n\t\t\tservers = servers.split ','\n\t\t\tfor server in servers\n\t\t\t\tserver = server.split '@'\n\t\t\t\tserverConfig =\n\t\t\t\t\turls: server.pop()\n\n\t\t\t\tif server.length is 1\n\t\t\t\t\tserver = server[0].split ':'\n\t\t\t\t\tserverConfig.username = decodeURIComponent(server[0])\n\t\t\t\t\tserverConfig.credential = decodeURIComponent(server[1])\n\n\t\t\t\t@config.iceServers.push serverConfig\n\n\t\t@peerConnections = {}\n\n\t\t@remoteItems = new ReactiveVar []\n\t\t@remoteItemsById = new ReactiveVar {}\n\t\t@callInProgress = new ReactiveVar false\n\t\t@audioEnabled = new ReactiveVar true\n\t\t@videoEnabled = new ReactiveVar true\n\t\t@overlayEnabled = new ReactiveVar false\n\t\t@screenShareEnabled = new ReactiveVar false\n\t\t@localUrl = new ReactiveVar\n\n\t\t@active = false\n\t\t@remoteMonitoring = false\n\t\t@monitor = false\n\t\t@autoAccept = false\n\n\t\t@navigator = undefined\n\t\tuserAgent = navigator.userAgent.toLocaleLowerCase();\n\t\tif userAgent.indexOf('electron') isnt -1\n\t\t\t@navigator = 'electron'\n\t\telse if userAgent.indexOf('chrome') isnt -1\n\t\t\t@navigator = 'chrome'\n\t\telse if userAgent.indexOf('firefox') isnt -1\n\t\t\t@navigator = 'firefox'\n\t\telse if userAgent.indexOf('safari') isnt -1\n\t\t\t@navigator = 'safari'\n\n\t\t@screenShareAvailable = @navigator in ['chrome', 'firefox', 'electron']\n\n\t\t@media =\n\t\t\tvideo: false\n\t\t\taudio: true\n\n\t\t@transport = new @transportClass @\n\n\t\t@transport.onRemoteCall @onRemoteCall.bind @\n\t\t@transport.onRemoteJoin @onRemoteJoin.bind @\n\t\t@transport.onRemoteCandidate @onRemoteCandidate.bind @\n\t\t@transport.onRemoteDescription @onRemoteDescription.bind @\n\t\t@transport.onRemoteStatus @onRemoteStatus.bind @\n\n\t\tMeteor.setInterval @checkPeerConnections.bind(@), 1000\n\n\t\t# Meteor.setInterval @broadcastStatus.bind(@), 1000\n\n\tlog: ->\n\t\tif @debug is true\n\t\t\tconsole.log.apply(console, arguments)\n\n\tonError: ->\n\t\tconsole.error.apply(console, arguments)\n\n\tcheckPeerConnections: ->\n\t\tfor id, peerConnection of @peerConnections\n\t\t\tif peerConnection.iceConnectionState not in ['connected', 'completed'] and peerConnection.createdAt + 5000 < Date.now()\n\t\t\t\t@stopPeerConnection id\n\n\tupdateRemoteItems: ->\n\t\titems = []\n\t\titemsById = {}\n\n\t\tfor id, peerConnection of @peerConnections\n\t\t\tfor remoteStream in peerConnection.getRemoteStreams()\n\t\t\t\titem =\n\t\t\t\t\tid: id\n\t\t\t\t\turl: URL.createObjectURL(remoteStream)\n\t\t\t\t\tstate: peerConnection.iceConnectionState\n\n\t\t\t\tswitch peerConnection.iceConnectionState\n\t\t\t\t\twhen 'checking'\n\t\t\t\t\t\titem.stateText = 'Connecting...'\n\n\t\t\t\t\twhen 'connected', 'completed'\n\t\t\t\t\t\titem.stateText = 'Connected'\n\t\t\t\t\t\titem.connected = true\n\n\t\t\t\t\twhen 'disconnected'\n\t\t\t\t\t\titem.stateText = 'Disconnected'\n\n\t\t\t\t\twhen 'failed'\n\t\t\t\t\t\titem.stateText = 'Failed'\n\n\t\t\t\t\twhen 'closed'\n\t\t\t\t\t\titem.stateText = 'Closed'\n\n\t\t\t\titems.push item\n\t\t\t\titemsById[id] = item\n\n\t\t@remoteItems.set items\n\t\t@remoteItemsById.set itemsById\n\n\tresetCallInProgress: ->\n\t\t@callInProgress.set false\n\n\tbroadcastStatus: ->\n\t\tif @active isnt true or @monitor is true or @remoteMonitoring is true then return\n\n\t\tremoteConnections = []\n\t\tfor id, peerConnection of @peerConnections\n\t\t\tremoteConnections.push\n\t\t\t\tid: id\n\t\t\t\tmedia: peerConnection.remoteMedia\n\n\t\t@transport.sendStatus\n\t\t\tmedia: @media\n\t\t\tremoteConnections: remoteConnections\n\n\t###\n\t\t@param data {Object}\n\t\t\tfrom {String}\n\t\t\tmedia {Object}\n\t\t\tremoteConnections {Array[Object]}\n\t\t\t\tid {String}\n\t\t\t\tmedia {Object}\n\t###\n\tonRemoteStatus: (data) ->\n\t\t# @log 'onRemoteStatus', arguments\n\n\t\t@callInProgress.set true\n\n\t\tMeteor.clearTimeout @callInProgressTimeout\n\t\t@callInProgressTimeout = Meteor.setTimeout @resetCallInProgress.bind(@), 2000\n\n\t\tif @active isnt true then return\n\n\t\tremoteConnections = [{id: data.from, media: data.media}].concat data.remoteConnections\n\n\t\tfor remoteConnection in remoteConnections\n\t\t\tif remoteConnection.id isnt @selfId and not @peerConnections[remoteConnection.id]?\n\t\t\t\t@log 'reconnecting with', remoteConnection.id\n\t\t\t\t@onRemoteJoin\n\t\t\t\t\tfrom: remoteConnection.id\n\t\t\t\t\tmedia: remoteConnection.media\n\n\t###\n\t\t@param id {String}\n\t###\n\tgetPeerConnection: (id) ->\n\t\treturn @peerConnections[id] if @peerConnections[id]?\n\n\t\tpeerConnection = new RTCPeerConnection @config\n\n\t\tpeerConnection.createdAt = Date.now()\n\t\tpeerConnection.remoteMedia = {}\n\n\t\t@peerConnections[id] = peerConnection\n\n\t\teventNames = [\n\t\t\t'icecandidate'\n\t\t\t'addstream'\n\t\t\t'removestream'\n\t\t\t'iceconnectionstatechange'\n\t\t\t'datachannel'\n\t\t\t'identityresult'\n\t\t\t'idpassertionerror'\n\t\t\t'idpvalidationerror'\n\t\t\t'negotiationneeded'\n\t\t\t'peeridentity'\n\t\t\t'signalingstatechange'\n\t\t]\n\n\t\tfor eventName in eventNames\n\t\t\tpeerConnection.addEventListener eventName, (e) =>\n\t\t\t\t@log id, e.type, e\n\n\t\tpeerConnection.addEventListener 'icecandidate', (e) =>\n\t\t\tif not e.candidate?\n\t\t\t\treturn\n\n\t\t\t@transport.sendCandidate\n\t\t\t\tto: id\n\t\t\t\tcandidate:\n\t\t\t\t\tcandidate: e.candidate.candidate\n\t\t\t\t\tsdpMLineIndex: e.candidate.sdpMLineIndex\n\t\t\t\t\tsdpMid: e.candidate.sdpMid\n\n\t\tpeerConnection.addEventListener 'addstream', (e) =>\n\t\t\t@updateRemoteItems()\n\n\t\tpeerConnection.addEventListener 'removestream', (e) =>\n\t\t\t@updateRemoteItems()\n\n\t\tpeerConnection.addEventListener 'iceconnectionstatechange', (e) =>\n\t\t\tif peerConnection.iceConnectionState in ['disconnected', 'closed'] and peerConnection is @peerConnections[id]\n\t\t\t\t@stopPeerConnection id\n\t\t\t\tMeteor.setTimeout =>\n\t\t\t\t\tif Object.keys(@peerConnections).length is 0\n\t\t\t\t\t\t@stop()\n\t\t\t\t, 3000\n\n\t\t\t@updateRemoteItems()\n\n\t\treturn peerConnection\n\n\t_getUserMedia: (media, onSuccess, onError) ->\n\t\tonSuccessLocal = (stream) ->\n\t\t\tif AudioContext? and stream.getAudioTracks().length > 0\n\t\t\t\taudioContext = new AudioContext\n\t\t\t\tsource = audioContext.createMediaStreamSource(stream)\n\n\t\t\t\tvolume = audioContext.createGain()\n\t\t\t\tsource.connect(volume)\n\t\t\t\tpeer = audioContext.createMediaStreamDestination()\n\t\t\t\tvolume.connect(peer)\n\t\t\t\tvolume.gain.value = 0.6\n\n\t\t\t\tstream.removeTrack(stream.getAudioTracks()[0])\n\t\t\t\tstream.addTrack(peer.stream.getAudioTracks()[0])\n\t\t\t\tstream.volume = volume\n\n\t\t\t\tthis.audioContext = audioContext\n\n\t\t\tonSuccess(stream)\n\n\t\tnavigator.getUserMedia media, onSuccessLocal, onError\n\n\n\tgetUserMedia: (media, onSuccess, onError=@onError) ->\n\t\tif media.desktop isnt true\n\t\t\t@_getUserMedia media, onSuccess, onError\n\t\t\treturn\n\n\t\tif @screenShareAvailable isnt true\n\t\t\tconsole.log 'Screen share is not avaliable'\n\t\t\treturn\n\n\t\tgetScreen = (audioStream) =>\n\t\t\tif document.cookie.indexOf(\"rocketchatscreenshare=chrome\") is -1 and not window.rocketchatscreenshare? and @navigator isnt 'electron'\n\t\t\t\trefresh = ->\n\t\t\t\t\tswal\n\t\t\t\t\t\ttype: \"warning\"\n\t\t\t\t\t\ttitle: TAPi18n.__ \"Refresh_your_page_after_install_to_enable_screen_sharing\"\n\n\t\t\t\tswal\n\t\t\t\t\ttype: \"warning\"\n\t\t\t\t\ttitle: TAPi18n.__ \"Screen_Share\"\n\t\t\t\t\ttext: TAPi18n.__ \"You_need_install_an_extension_to_allow_screen_sharing\"\n\t\t\t\t\thtml: true\n\t\t\t\t\tshowCancelButton: true\n\t\t\t\t\tconfirmButtonText: TAPi18n.__ \"Install_Extension\"\n\t\t\t\t\tcancelButtonText: TAPi18n.__ \"Cancel\"\n\t\t\t\t, (isConfirm) =>\n\t\t\t\t\tif isConfirm\n\t\t\t\t\t\tif @navigator is 'chrome'\n\t\t\t\t\t\t\turl = 'https://chrome.google.com/webstore/detail/rocketchat-screen-share/nocfbnnmjnndkbipkabodnheejiegccf'\n\t\t\t\t\t\t\ttry\n\t\t\t\t\t\t\t\tchrome.webstore.install url, refresh, ->\n\t\t\t\t\t\t\t\t\twindow.open(url)\n\t\t\t\t\t\t\t\t\trefresh()\n\t\t\t\t\t\t\tcatch e\n\t\t\t\t\t\t\t\twindow.open(url)\n\t\t\t\t\t\t\t\trefresh()\n\t\t\t\t\t\telse if @navigator is 'firefox'\n\t\t\t\t\t\t\twindow.open('https://addons.mozilla.org/en-GB/firefox/addon/rocketchat-screen-share/')\n\t\t\t\t\t\t\trefresh()\n\n\t\t\t\treturn onError(false)\n\n\t\t\tgetScreenSuccess = (stream) =>\n\t\t\t\tif audioStream?\n\t\t\t\t\tstream.addTrack(audioStream.getAudioTracks()[0])\n\t\t\t\tonSuccess(stream)\n\n\t\t\tif @navigator is 'firefox'\n\t\t\t\tmedia =\n\t\t\t\t\taudio: media.audio\n\t\t\t\t\tvideo:\n\t\t\t\t\t\tmozMediaSource: 'window'\n\t\t\t\t\t\tmediaSource: 'window'\n\t\t\t\t@_getUserMedia media, getScreenSuccess, onError\n\t\t\telse\n\t\t\t\tChromeScreenShare.getSourceId @navigator, (id) =>\n\t\t\t\t\tmedia =\n\t\t\t\t\t\taudio: false\n\t\t\t\t\t\tvideo:\n\t\t\t\t\t\t\tmandatory:\n\t\t\t\t\t\t\t\tchromeMediaSource: 'desktop'\n\t\t\t\t\t\t\t\tchromeMediaSourceId: id\n\t\t\t\t\t\t\t\tmaxWidth: 1280\n\t\t\t\t\t\t\t\tmaxHeight: 720\n\n\t\t\t\t\t@_getUserMedia media, getScreenSuccess, onError\n\n\t\tif @navigator is 'firefox' or not media.audio? or media.audio is false\n\t\t\tgetScreen()\n\t\telse\n\t\t\tgetAudioSuccess = (audioStream) =>\n\t\t\t\tgetScreen(audioStream)\n\n\t\t\tgetAudioError = =>\n\t\t\t\tgetScreen()\n\n\t\t\t@_getUserMedia {audio: media.audio}, getAudioSuccess, getAudioError\n\n\n\t###\n\t\t@param callback {Function}\n\t###\n\tgetLocalUserMedia: (callback) ->\n\t\t@log 'getLocalUserMedia', arguments\n\n\t\tif @localStream?\n\t\t\treturn callback null, @localStream\n\n\t\tonSuccess = (stream) =>\n\t\t\t@localStream = stream\n\t\t\t@localUrl.set URL.createObjectURL(stream)\n\n\t\t\t@videoEnabled.set @media.video is true\n\t\t\t@audioEnabled.set @media.audio is true\n\n\t\t\tfor id, peerConnection of @peerConnections\n\t\t\t\tpeerConnection.addStream stream\n\n\t\t\tcallback null, @localStream\n\n\t\tonError = (error) =>\n\t\t\tcallback false\n\t\t\t@onError error\n\n\t\t@getUserMedia @media, onSuccess, onError\n\n\n\t###\n\t\t@param id {String}\n\t###\n\tstopPeerConnection: (id) ->\n\t\tpeerConnection = @peerConnections[id]\n\t\tif not peerConnection? then return\n\n\t\tdelete @peerConnections[id]\n\t\tpeerConnection.close()\n\n\t\t@updateRemoteItems()\n\n\tstopAllPeerConnections: ->\n\t\tfor id, peerConnection of @peerConnections\n\t\t\t@stopPeerConnection id\n\t\twindow.audioContext?.close()\n\n\tsetAudioEnabled: (enabled=true) ->\n\t\tif @localStream?\n\t\t\tif enabled is true and @media.audio isnt true\n\t\t\t\tdelete @localStream\n\t\t\t\t@media.audio = true\n\t\t\t\t@getLocalUserMedia =>\n\t\t\t\t\t@stopAllPeerConnections()\n\t\t\t\t\t@joinCall()\n\t\t\telse\n\t\t\t\t@localStream.getAudioTracks().forEach (audio) -> audio.enabled = enabled\n\t\t\t\t@audioEnabled.set enabled\n\n\tdisableAudio: ->\n\t\t@setAudioEnabled false\n\n\tenableAudio: ->\n\t\t@setAudioEnabled true\n\n\tsetVideoEnabled: (enabled=true) ->\n\t\tif @localStream?\n\t\t\tif enabled is true and @media.video isnt true\n\t\t\t\tdelete @localStream\n\t\t\t\t@media.video = true\n\t\t\t\t@getLocalUserMedia =>\n\t\t\t\t\t@stopAllPeerConnections()\n\t\t\t\t\t@joinCall()\n\t\t\telse\n\t\t\t\t@localStream.getVideoTracks().forEach (video) -> video.enabled = enabled\n\t\t\t\t@videoEnabled.set enabled\n\n\tdisableScreenShare: ->\n\t\t@setScreenShareEnabled false\n\n\tenableScreenShare: ->\n\t\t@setScreenShareEnabled true\n\n\tsetScreenShareEnabled: (enabled=true) ->\n\t\tif @localStream?\n\t\t\t@media.desktop = enabled\n\t\t\tdelete @localStream\n\t\t\t@getLocalUserMedia (err) =>\n\t\t\t\tif err?\n\t\t\t\t\treturn\n\t\t\t\t@screenShareEnabled.set enabled\n\t\t\t\t@stopAllPeerConnections()\n\t\t\t\t@joinCall()\n\n\tdisableVideo: ->\n\t\t@setVideoEnabled false\n\n\tenableVideo: ->\n\t\t@setVideoEnabled true\n\n\tstop: ->\n\t\t@active = false\n\t\t@monitor = false\n\t\t@remoteMonitoring = false\n\t\tif @localStream? and typeof @localStream isnt 'undefined'\n\t\t\t@localStream.getTracks().forEach (track) ->\n\t\t\t\ttrack.stop()\n\t\t@localUrl.set undefined\n\t\tdelete @localStream\n\n\t\t@stopAllPeerConnections()\n\n\n\t###\n\t\t@param media {Object}\n\t\t\taudio {Boolean}\n\t\t\tvideo {Boolean}\n\t###\n\tstartCall: (media={}) ->\n\t\t@log 'startCall', arguments\n\t\t@media = media\n\t\t@getLocalUserMedia =>\n\t\t\t@active = true\n\t\t\t@transport.startCall\n\t\t\t\tmedia: @media\n\n\tstartCallAsMonitor: (media={}) ->\n\t\t@log 'startCallAsMonitor', arguments\n\t\t@media = media\n\t\t@active = true\n\t\t@monitor = true\n\t\t@transport.startCall\n\t\t\tmedia: @media\n\t\t\tmonitor: true\n\n\n\t###\n\t\t@param data {Object}\n\t\t\tfrom {String}\n\t\t\tmonitor {Boolean}\n\t\t\tmedia {Object}\n\t\t\t\taudio {Boolean}\n\t\t\t\tvideo {Boolean}\n\t###\n\tonRemoteCall: (data) ->\n\t\tif @autoAccept is true\n\t\t\tFlowRouter.goToRoomById data.room\n\t\t\tMeteor.defer =>\n\t\t\t\t@joinCall\n\t\t\t\t\tto: data.from\n\t\t\t\t\tmonitor: data.monitor\n\t\t\t\t\tmedia: data.media\n\t\t\treturn\n\n\t\tfromUsername = Meteor.users.findOne(data.from)?.username\n\t\tsubscription = ChatSubscription.findOne({rid: data.room})\n\n\t\tif data.monitor is true\n\t\t\ticon = 'eye'\n\t\t\ttitle = \"Monitor call from #{fromUsername}\"\n\t\telse if subscription?.t is 'd'\n\t\t\tif data.media?.video\n\t\t\t\ticon = 'videocam'\n\t\t\t\ttitle = \"Direct video call from #{fromUsername}\"\n\t\t\telse\n\t\t\t\ticon = 'phone'\n\t\t\t\ttitle = \"Direct audio call from #{fromUsername}\"\n\t\telse\n\t\t\tif data.media?.video\n\t\t\t\ticon = 'videocam'\n\t\t\t\ttitle = \"Group video call from #{subscription.name}\"\n\t\t\telse\n\t\t\t\ticon = 'phone'\n\t\t\t\ttitle = \"Group audio call from #{subscription.name}\"\n\n\t\tswal\n\t\t\ttitle: \"<i class='icon-#{icon} alert-icon success-color'></i>#{title}\"\n\t\t\ttext: \"Do you want to accept?\"\n\t\t\thtml: true\n\t\t\tshowCancelButton: true\n\t\t\tconfirmButtonText: \"Yes\"\n\t\t\tcancelButtonText: \"No\"\n\t\t, (isConfirm) =>\n\t\t\tif isConfirm\n\t\t\t\tFlowRouter.goToRoomById data.room\n\t\t\t\tMeteor.defer =>\n\t\t\t\t\t@joinCall\n\t\t\t\t\t\tto: data.from\n\t\t\t\t\t\tmonitor: data.monitor\n\t\t\t\t\t\tmedia: data.media\n\t\t\telse\n\t\t\t\t@stop()\n\n\n\t###\n\t\t@param data {Object}\n\t\t\tto {String}\n\t\t\tmonitor {Boolean}\n\t\t\tmedia {Object}\n\t\t\t\taudio {Boolean}\n\t\t\t\tvideo {Boolean}\n\t\t\t\tdesktop {Boolean}\n\t###\n\tjoinCall: (data={}) ->\n\t\tif data.media?.audio?\n\t\t\t@media.audio = data.media.audio\n\n\t\tif data.media?.video?\n\t\t\t@media.video = data.media.video\n\n\t\tdata.media = @media\n\n\t\t@log 'joinCall', arguments\n\t\t@getLocalUserMedia =>\n\t\t\t@remoteMonitoring = data.monitor\n\t\t\t@active = true\n\t\t\t@transport.joinCall(data)\n\n\n\t###\n\t\t@param data {Object}\n\t\t\tfrom {String}\n\t\t\tmonitor {Boolean}\n\t\t\tmedia {Object}\n\t\t\t\taudio {Boolean}\n\t\t\t\tvideo {Boolean}\n\t\t\t\tdesktop {Boolean}\n\t###\n\tonRemoteJoin: (data) ->\n\t\tif @active isnt true then return\n\n\t\t@log 'onRemoteJoin', arguments\n\n\t\tpeerConnection = @getPeerConnection data.from\n\n\t\t# needsRefresh = false\n\t\t# if peerConnection.iceConnectionState isnt 'new'\n\t\t# \tneedsAudio = data.media.audio is true and peerConnection.remoteMedia.audio isnt true\n\t\t# \tneedsVideo = data.media.video is true and peerConnection.remoteMedia.video isnt true\n\t\t# \tneedsRefresh = needsAudio or needsVideo or data.media.desktop isnt peerConnection.remoteMedia.desktop\n\n\t\t# if peerConnection.signalingState is \"have-local-offer\" or needsRefresh\n\t\tif peerConnection.signalingState isnt \"checking\"\n\t\t\t@stopPeerConnection data.from\n\t\t\tpeerConnection = @getPeerConnection data.from\n\n\t\tif peerConnection.iceConnectionState isnt 'new'\n\t\t\treturn\n\n\t\tpeerConnection.remoteMedia = data.media\n\n\t\tpeerConnection.addStream @localStream if @localStream\n\n\t\tonOffer = (offer) =>\n\t\t\tonLocalDescription = =>\n\t\t\t\t@transport.sendDescription\n\t\t\t\t\tto: data.from\n\t\t\t\t\ttype: 'offer'\n\t\t\t\t\tts: peerConnection.createdAt\n\t\t\t\t\tmedia: @media\n\t\t\t\t\tdescription:\n\t\t\t\t\t\tsdp: offer.sdp\n\t\t\t\t\t\ttype: offer.type\n\n\t\t\tpeerConnection.setLocalDescription(new RTCSessionDescription(offer), onLocalDescription, @onError)\n\n\t\tif data.monitor is true\n\t\t\tpeerConnection.createOffer onOffer, @onError,\n\t\t\t\tmandatory:\n\t\t\t\t\tOfferToReceiveAudio: data.media.audio\n\t\t\t\t\tOfferToReceiveVideo: data.media.video\n\t\telse\n\t\t\tpeerConnection.createOffer(onOffer, @onError)\n\n\n\t###\n\t\t@param data {Object}\n\t\t\tfrom {String}\n\t\t\tts {Integer}\n\t\t\tdescription {String}\n\t###\n\tonRemoteOffer: (data) ->\n\t\tif @active isnt true then return\n\n\t\t@log 'onRemoteOffer', arguments\n\t\tpeerConnection = @getPeerConnection data.from\n\n\t\tif peerConnection.signalingState in [\"have-local-offer\", \"stable\"] and peerConnection.createdAt < data.ts\n\t\t\t@stopPeerConnection data.from\n\t\t\tpeerConnection = @getPeerConnection data.from\n\n\t\tif peerConnection.iceConnectionState isnt 'new'\n\t\t\treturn\n\n\t\tpeerConnection.setRemoteDescription new RTCSessionDescription(data.description)\n\n\t\ttry peerConnection.addStream @localStream if @localStream\n\n\t\tonAnswer = (answer) =>\n\t\t\tonLocalDescription = =>\n\t\t\t\t@transport.sendDescription\n\t\t\t\t\tto: data.from\n\t\t\t\t\ttype: 'answer'\n\t\t\t\t\tts: peerConnection.createdAt\n\t\t\t\t\tdescription:\n\t\t\t\t\t\tsdp: answer.sdp\n\t\t\t\t\t\ttype: answer.type\n\n\t\t\tpeerConnection.setLocalDescription(new RTCSessionDescription(answer), onLocalDescription, @onError)\n\n\t\tpeerConnection.createAnswer(onAnswer, @onError)\n\n\n\t###\n\t\t@param data {Object}\n\t\t\tto {String}\n\t\t\tfrom {String}\n\t\t\tcandidate {RTCIceCandidate JSON encoded}\n\t###\n\tonRemoteCandidate: (data) ->\n\t\tif @active isnt true then return\n\t\tif data.to isnt @selfId then return\n\n\t\t@log 'onRemoteCandidate', arguments\n\t\tpeerConnection = @getPeerConnection data.from\n\n\t\tif peerConnection.iceConnectionState not in [\"closed\", \"failed\", \"disconnected\", \"completed\"]\n\t\t\tpeerConnection.addIceCandidate new RTCIceCandidate(data.candidate)\n\n\n\t###\n\t\t@param data {Object}\n\t\t\tto {String}\n\t\t\tfrom {String}\n\t\t\ttype {String} [offer, answer]\n\t\t\tdescription {RTCSessionDescription JSON encoded}\n\t\t\tts {Integer}\n\t\t\tmedia {Object}\n\t\t\t\taudio {Boolean}\n\t\t\t\tvideo {Boolean}\n\t\t\t\tdesktop {Boolean}\n\t###\n\tonRemoteDescription: (data) ->\n\t\tif @active isnt true then return\n\t\tif data.to isnt @selfId then return\n\n\t\t@log 'onRemoteDescription', arguments\n\t\tpeerConnection = @getPeerConnection data.from\n\n\t\tif data.type is 'offer'\n\t\t\tpeerConnection.remoteMedia = data.media\n\t\t\t@onRemoteOffer\n\t\t\t\tfrom: data.from\n\t\t\t\tts: data.ts\n\t\t\t\tdescription: data.description\n\t\telse\n\t\t\tpeerConnection.setRemoteDescription new RTCSessionDescription(data.description)\n\n\nWebRTC = new class\n\tconstructor: ->\n\t\t@instancesByRoomId = {}\n\n\tgetInstanceByRoomId: (roomId) ->\n\t\tsubscription = ChatSubscription.findOne({rid: roomId})\n\t\tif not subscription\n\t\t\treturn\n\n\t\tenabled = false\n\t\tswitch subscription.t\n\t\t\twhen 'd'\n\t\t\t\tenabled = RocketChat.settings.get('WebRTC_Enable_Direct')\n\t\t\twhen 'p'\n\t\t\t\tenabled = RocketChat.settings.get('WebRTC_Enable_Private')\n\t\t\twhen 'c'\n\t\t\t\tenabled = RocketChat.settings.get('WebRTC_Enable_Channel')\n\n\t\tif enabled is false\n\t\t\treturn\n\n\t\tif not @instancesByRoomId[roomId]?\n\t\t\t@instancesByRoomId[roomId] = new WebRTCClass Meteor.userId(), roomId\n\n\t\treturn @instancesByRoomId[roomId]\n\n\nMeteor.startup ->\n\tTracker.autorun ->\n\t\tif Meteor.userId()\n\t\t\tRocketChat.Notifications.onUser 'webrtc', (type, data) =>\n\t\t\t\tif not data.room? then return\n\n\t\t\t\twebrtc = WebRTC.getInstanceByRoomId(data.room)\n\n\t\t\t\twebrtc.transport.onUserStream type, data\n","var WebRTCClass, WebRTCTransportClass, emptyFn;        \n\nemptyFn = function() {};\n\nWebRTCTransportClass = (function() {\n  WebRTCTransportClass.prototype.debug = false;\n\n  WebRTCTransportClass.prototype.log = function() {\n    if (this.debug === true) {\n      return console.log.apply(console, arguments);\n    }\n  };\n\n  function WebRTCTransportClass(webrtcInstance) {\n    this.webrtcInstance = webrtcInstance;\n    this.callbacks = {};\n    RocketChat.Notifications.onRoom(this.webrtcInstance.room, 'webrtc', (function(_this) {\n      return function(type, data) {\n        var fn, i, len, ref, ref1, results;\n        _this.log('WebRTCTransportClass - onRoom', type, data);\n        switch (type) {\n          case 'status':\n            if (((ref = _this.callbacks['onRemoteStatus']) != null ? ref.length : void 0) > 0) {\n              ref1 = _this.callbacks['onRemoteStatus'];\n              results = [];\n              for (i = 0, len = ref1.length; i < len; i++) {\n                fn = ref1[i];\n                results.push(fn(data));\n              }\n              return results;\n            }\n        }\n      };\n    })(this));\n  }\n\n  WebRTCTransportClass.prototype.onUserStream = function(type, data) {\n    var fn, i, j, k, l, len, len1, len2, len3, ref, ref1, ref2, ref3, ref4, ref5, ref6, ref7, results, results1, results2, results3;\n    if (data.room !== this.webrtcInstance.room) {\n      return;\n    }\n    this.log('WebRTCTransportClass - onUser', type, data);\n    switch (type) {\n      case 'call':\n        if (((ref = this.callbacks['onRemoteCall']) != null ? ref.length : void 0) > 0) {\n          ref1 = this.callbacks['onRemoteCall'];\n          results = [];\n          for (i = 0, len = ref1.length; i < len; i++) {\n            fn = ref1[i];\n            results.push(fn(data));\n          }\n          return results;\n        }\n        break;\n      case 'join':\n        if (((ref2 = this.callbacks['onRemoteJoin']) != null ? ref2.length : void 0) > 0) {\n          ref3 = this.callbacks['onRemoteJoin'];\n          results1 = [];\n          for (j = 0, len1 = ref3.length; j < len1; j++) {\n            fn = ref3[j];\n            results1.push(fn(data));\n          }\n          return results1;\n        }\n        break;\n      case 'candidate':\n        if (((ref4 = this.callbacks['onRemoteCandidate']) != null ? ref4.length : void 0) > 0) {\n          ref5 = this.callbacks['onRemoteCandidate'];\n          results2 = [];\n          for (k = 0, len2 = ref5.length; k < len2; k++) {\n            fn = ref5[k];\n            results2.push(fn(data));\n          }\n          return results2;\n        }\n        break;\n      case 'description':\n        if (((ref6 = this.callbacks['onRemoteDescription']) != null ? ref6.length : void 0) > 0) {\n          ref7 = this.callbacks['onRemoteDescription'];\n          results3 = [];\n          for (l = 0, len3 = ref7.length; l < len3; l++) {\n            fn = ref7[l];\n            results3.push(fn(data));\n          }\n          return results3;\n        }\n    }\n  };\n\n  WebRTCTransportClass.prototype.startCall = function(data) {\n    this.log('WebRTCTransportClass - startCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n    return RocketChat.Notifications.notifyUsersOfRoom(this.webrtcInstance.room, 'webrtc', 'call', {\n      from: this.webrtcInstance.selfId,\n      room: this.webrtcInstance.room,\n      media: data.media,\n      monitor: data.monitor\n    });\n  };\n\n  WebRTCTransportClass.prototype.joinCall = function(data) {\n    this.log('WebRTCTransportClass - joinCall', this.webrtcInstance.room, this.webrtcInstance.selfId);\n    if (data.monitor === true) {\n      return RocketChat.Notifications.notifyUser(data.to, 'webrtc', 'join', {\n        from: this.webrtcInstance.selfId,\n        room: this.webrtcInstance.room,\n        media: data.media,\n        monitor: data.monitor\n      });\n    } else {\n      return RocketChat.Notifications.notifyUsersOfRoom(this.webrtcInstance.room, 'webrtc', 'join', {\n        from: this.webrtcInstance.selfId,\n        room: this.webrtcInstance.room,\n        media: data.media,\n        monitor: data.monitor\n      });\n    }\n  };\n\n  WebRTCTransportClass.prototype.sendCandidate = function(data) {\n    data.from = this.webrtcInstance.selfId;\n    data.room = this.webrtcInstance.room;\n    this.log('WebRTCTransportClass - sendCandidate', data);\n    return RocketChat.Notifications.notifyUser(data.to, 'webrtc', 'candidate', data);\n  };\n\n  WebRTCTransportClass.prototype.sendDescription = function(data) {\n    data.from = this.webrtcInstance.selfId;\n    data.room = this.webrtcInstance.room;\n    this.log('WebRTCTransportClass - sendDescription', data);\n    return RocketChat.Notifications.notifyUser(data.to, 'webrtc', 'description', data);\n  };\n\n  WebRTCTransportClass.prototype.sendStatus = function(data) {\n    this.log('WebRTCTransportClass - sendStatus', data, this.webrtcInstance.room);\n    data.from = this.webrtcInstance.selfId;\n    return RocketChat.Notifications.notifyRoom(this.webrtcInstance.room, 'webrtc', 'status', data);\n  };\n\n  WebRTCTransportClass.prototype.onRemoteCall = function(fn) {\n    var base;\n    if ((base = this.callbacks)['onRemoteCall'] == null) {\n      base['onRemoteCall'] = [];\n    }\n    return this.callbacks['onRemoteCall'].push(fn);\n  };\n\n  WebRTCTransportClass.prototype.onRemoteJoin = function(fn) {\n    var base;\n    if ((base = this.callbacks)['onRemoteJoin'] == null) {\n      base['onRemoteJoin'] = [];\n    }\n    return this.callbacks['onRemoteJoin'].push(fn);\n  };\n\n  WebRTCTransportClass.prototype.onRemoteCandidate = function(fn) {\n    var base;\n    if ((base = this.callbacks)['onRemoteCandidate'] == null) {\n      base['onRemoteCandidate'] = [];\n    }\n    return this.callbacks['onRemoteCandidate'].push(fn);\n  };\n\n  WebRTCTransportClass.prototype.onRemoteDescription = function(fn) {\n    var base;\n    if ((base = this.callbacks)['onRemoteDescription'] == null) {\n      base['onRemoteDescription'] = [];\n    }\n    return this.callbacks['onRemoteDescription'].push(fn);\n  };\n\n  WebRTCTransportClass.prototype.onRemoteStatus = function(fn) {\n    var base;\n    if ((base = this.callbacks)['onRemoteStatus'] == null) {\n      base['onRemoteStatus'] = [];\n    }\n    return this.callbacks['onRemoteStatus'].push(fn);\n  };\n\n  return WebRTCTransportClass;\n\n})();\n\nWebRTCClass = (function() {\n  WebRTCClass.prototype.config = {\n    iceServers: []\n  };\n\n  WebRTCClass.prototype.debug = false;\n\n  WebRTCClass.prototype.transportClass = WebRTCTransportClass;\n\n\n  /*\n  \t\t@param seldId {String}\n  \t\t@param room {String}\n   */\n\n  function WebRTCClass(selfId, room) {\n    var i, len, ref, server, serverConfig, servers, userAgent;\n    this.selfId = selfId;\n    this.room = room;\n    this.config.iceServers = [];\n    servers = RocketChat.settings.get(\"WebRTC_Servers\");\n    if ((servers != null ? servers.trim() : void 0) !== '') {\n      servers = servers.replace(/\\s/g, '');\n      servers = servers.split(',');\n      for (i = 0, len = servers.length; i < len; i++) {\n        server = servers[i];\n        server = server.split('@');\n        serverConfig = {\n          urls: server.pop()\n        };\n        if (server.length === 1) {\n          server = server[0].split(':');\n          serverConfig.username = decodeURIComponent(server[0]);\n          serverConfig.credential = decodeURIComponent(server[1]);\n        }\n        this.config.iceServers.push(serverConfig);\n      }\n    }\n    this.peerConnections = {};\n    this.remoteItems = new ReactiveVar([]);\n    this.remoteItemsById = new ReactiveVar({});\n    this.callInProgress = new ReactiveVar(false);\n    this.audioEnabled = new ReactiveVar(true);\n    this.videoEnabled = new ReactiveVar(true);\n    this.overlayEnabled = new ReactiveVar(false);\n    this.screenShareEnabled = new ReactiveVar(false);\n    this.localUrl = new ReactiveVar;\n    this.active = false;\n    this.remoteMonitoring = false;\n    this.monitor = false;\n    this.autoAccept = false;\n    this.navigator = void 0;\n    userAgent = navigator.userAgent.toLocaleLowerCase();\n    if (userAgent.indexOf('electron') !== -1) {\n      this.navigator = 'electron';\n    } else if (userAgent.indexOf('chrome') !== -1) {\n      this.navigator = 'chrome';\n    } else if (userAgent.indexOf('firefox') !== -1) {\n      this.navigator = 'firefox';\n    } else if (userAgent.indexOf('safari') !== -1) {\n      this.navigator = 'safari';\n    }\n    this.screenShareAvailable = (ref = this.navigator) === 'chrome' || ref === 'firefox' || ref === 'electron';\n    this.media = {\n      video: false,\n      audio: true\n    };\n    this.transport = new this.transportClass(this);\n    this.transport.onRemoteCall(this.onRemoteCall.bind(this));\n    this.transport.onRemoteJoin(this.onRemoteJoin.bind(this));\n    this.transport.onRemoteCandidate(this.onRemoteCandidate.bind(this));\n    this.transport.onRemoteDescription(this.onRemoteDescription.bind(this));\n    this.transport.onRemoteStatus(this.onRemoteStatus.bind(this));\n    Meteor.setInterval(this.checkPeerConnections.bind(this), 1000);\n  }\n\n  WebRTCClass.prototype.log = function() {\n    if (this.debug === true) {\n      return console.log.apply(console, arguments);\n    }\n  };\n\n  WebRTCClass.prototype.onError = function() {\n    return console.error.apply(console, arguments);\n  };\n\n  WebRTCClass.prototype.checkPeerConnections = function() {\n    var id, peerConnection, ref, ref1, results;\n    ref = this.peerConnections;\n    results = [];\n    for (id in ref) {\n      peerConnection = ref[id];\n      if (((ref1 = peerConnection.iceConnectionState) !== 'connected' && ref1 !== 'completed') && peerConnection.createdAt + 5000 < Date.now()) {\n        results.push(this.stopPeerConnection(id));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n  WebRTCClass.prototype.updateRemoteItems = function() {\n    var i, id, item, items, itemsById, len, peerConnection, ref, ref1, remoteStream;\n    items = [];\n    itemsById = {};\n    ref = this.peerConnections;\n    for (id in ref) {\n      peerConnection = ref[id];\n      ref1 = peerConnection.getRemoteStreams();\n      for (i = 0, len = ref1.length; i < len; i++) {\n        remoteStream = ref1[i];\n        item = {\n          id: id,\n          url: URL.createObjectURL(remoteStream),\n          state: peerConnection.iceConnectionState\n        };\n        switch (peerConnection.iceConnectionState) {\n          case 'checking':\n            item.stateText = 'Connecting...';\n            break;\n          case 'connected':\n          case 'completed':\n            item.stateText = 'Connected';\n            item.connected = true;\n            break;\n          case 'disconnected':\n            item.stateText = 'Disconnected';\n            break;\n          case 'failed':\n            item.stateText = 'Failed';\n            break;\n          case 'closed':\n            item.stateText = 'Closed';\n        }\n        items.push(item);\n        itemsById[id] = item;\n      }\n    }\n    this.remoteItems.set(items);\n    return this.remoteItemsById.set(itemsById);\n  };\n\n  WebRTCClass.prototype.resetCallInProgress = function() {\n    return this.callInProgress.set(false);\n  };\n\n  WebRTCClass.prototype.broadcastStatus = function() {\n    var id, peerConnection, ref, remoteConnections;\n    if (this.active !== true || this.monitor === true || this.remoteMonitoring === true) {\n      return;\n    }\n    remoteConnections = [];\n    ref = this.peerConnections;\n    for (id in ref) {\n      peerConnection = ref[id];\n      remoteConnections.push({\n        id: id,\n        media: peerConnection.remoteMedia\n      });\n    }\n    return this.transport.sendStatus({\n      media: this.media,\n      remoteConnections: remoteConnections\n    });\n  };\n\n\n  /*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tmedia {Object}\n  \t\t\tremoteConnections {Array[Object]}\n  \t\t\t\tid {String}\n  \t\t\t\tmedia {Object}\n   */\n\n  WebRTCClass.prototype.onRemoteStatus = function(data) {\n    var i, len, remoteConnection, remoteConnections, results;\n    this.callInProgress.set(true);\n    Meteor.clearTimeout(this.callInProgressTimeout);\n    this.callInProgressTimeout = Meteor.setTimeout(this.resetCallInProgress.bind(this), 2000);\n    if (this.active !== true) {\n      return;\n    }\n    remoteConnections = [\n      {\n        id: data.from,\n        media: data.media\n      }\n    ].concat(data.remoteConnections);\n    results = [];\n    for (i = 0, len = remoteConnections.length; i < len; i++) {\n      remoteConnection = remoteConnections[i];\n      if (remoteConnection.id !== this.selfId && (this.peerConnections[remoteConnection.id] == null)) {\n        this.log('reconnecting with', remoteConnection.id);\n        results.push(this.onRemoteJoin({\n          from: remoteConnection.id,\n          media: remoteConnection.media\n        }));\n      } else {\n        results.push(void 0);\n      }\n    }\n    return results;\n  };\n\n\n  /*\n  \t\t@param id {String}\n   */\n\n  WebRTCClass.prototype.getPeerConnection = function(id) {\n    var eventName, eventNames, i, len, peerConnection;\n    if (this.peerConnections[id] != null) {\n      return this.peerConnections[id];\n    }\n    peerConnection = new RTCPeerConnection(this.config);\n    peerConnection.createdAt = Date.now();\n    peerConnection.remoteMedia = {};\n    this.peerConnections[id] = peerConnection;\n    eventNames = ['icecandidate', 'addstream', 'removestream', 'iceconnectionstatechange', 'datachannel', 'identityresult', 'idpassertionerror', 'idpvalidationerror', 'negotiationneeded', 'peeridentity', 'signalingstatechange'];\n    for (i = 0, len = eventNames.length; i < len; i++) {\n      eventName = eventNames[i];\n      peerConnection.addEventListener(eventName, (function(_this) {\n        return function(e) {\n          return _this.log(id, e.type, e);\n        };\n      })(this));\n    }\n    peerConnection.addEventListener('icecandidate', (function(_this) {\n      return function(e) {\n        if (e.candidate == null) {\n          return;\n        }\n        return _this.transport.sendCandidate({\n          to: id,\n          candidate: {\n            candidate: e.candidate.candidate,\n            sdpMLineIndex: e.candidate.sdpMLineIndex,\n            sdpMid: e.candidate.sdpMid\n          }\n        });\n      };\n    })(this));\n    peerConnection.addEventListener('addstream', (function(_this) {\n      return function(e) {\n        return _this.updateRemoteItems();\n      };\n    })(this));\n    peerConnection.addEventListener('removestream', (function(_this) {\n      return function(e) {\n        return _this.updateRemoteItems();\n      };\n    })(this));\n    peerConnection.addEventListener('iceconnectionstatechange', (function(_this) {\n      return function(e) {\n        var ref;\n        if (((ref = peerConnection.iceConnectionState) === 'disconnected' || ref === 'closed') && peerConnection === _this.peerConnections[id]) {\n          _this.stopPeerConnection(id);\n          Meteor.setTimeout(function() {\n            if (Object.keys(_this.peerConnections).length === 0) {\n              return _this.stop();\n            }\n          }, 3000);\n        }\n        return _this.updateRemoteItems();\n      };\n    })(this));\n    return peerConnection;\n  };\n\n  WebRTCClass.prototype._getUserMedia = function(media, onSuccess, onError) {\n    var onSuccessLocal;\n    onSuccessLocal = function(stream) {\n      var audioContext, peer, source, volume;\n      if ((typeof AudioContext !== \"undefined\" && AudioContext !== null) && stream.getAudioTracks().length > 0) {\n        audioContext = new AudioContext;\n        source = audioContext.createMediaStreamSource(stream);\n        volume = audioContext.createGain();\n        source.connect(volume);\n        peer = audioContext.createMediaStreamDestination();\n        volume.connect(peer);\n        volume.gain.value = 0.6;\n        stream.removeTrack(stream.getAudioTracks()[0]);\n        stream.addTrack(peer.stream.getAudioTracks()[0]);\n        stream.volume = volume;\n        this.audioContext = audioContext;\n      }\n      return onSuccess(stream);\n    };\n    return navigator.getUserMedia(media, onSuccessLocal, onError);\n  };\n\n  WebRTCClass.prototype.getUserMedia = function(media, onSuccess, onError) {\n    var getAudioError, getAudioSuccess, getScreen;\n    if (onError == null) {\n      onError = this.onError;\n    }\n    if (media.desktop !== true) {\n      this._getUserMedia(media, onSuccess, onError);\n      return;\n    }\n    if (this.screenShareAvailable !== true) {\n      console.log('Screen share is not avaliable');\n      return;\n    }\n    getScreen = (function(_this) {\n      return function(audioStream) {\n        var getScreenSuccess, refresh;\n        if (document.cookie.indexOf(\"rocketchatscreenshare=chrome\") === -1 && (window.rocketchatscreenshare == null) && _this.navigator !== 'electron') {\n          refresh = function() {\n            return swal({\n              type: \"warning\",\n              title: TAPi18n.__(\"Refresh_your_page_after_install_to_enable_screen_sharing\")\n            });\n          };\n          swal({\n            type: \"warning\",\n            title: TAPi18n.__(\"Screen_Share\"),\n            text: TAPi18n.__(\"You_need_install_an_extension_to_allow_screen_sharing\"),\n            html: true,\n            showCancelButton: true,\n            confirmButtonText: TAPi18n.__(\"Install_Extension\"),\n            cancelButtonText: TAPi18n.__(\"Cancel\")\n          }, function(isConfirm) {\n            var e, url;\n            if (isConfirm) {\n              if (_this.navigator === 'chrome') {\n                url = 'https://chrome.google.com/webstore/detail/rocketchat-screen-share/nocfbnnmjnndkbipkabodnheejiegccf';\n                try {\n                  return chrome.webstore.install(url, refresh, function() {\n                    window.open(url);\n                    return refresh();\n                  });\n                } catch (error1) {\n                  e = error1;\n                  window.open(url);\n                  return refresh();\n                }\n              } else if (_this.navigator === 'firefox') {\n                window.open('https://addons.mozilla.org/en-GB/firefox/addon/rocketchat-screen-share/');\n                return refresh();\n              }\n            }\n          });\n          return onError(false);\n        }\n        getScreenSuccess = function(stream) {\n          if (audioStream != null) {\n            stream.addTrack(audioStream.getAudioTracks()[0]);\n          }\n          return onSuccess(stream);\n        };\n        if (_this.navigator === 'firefox') {\n          media = {\n            audio: media.audio,\n            video: {\n              mozMediaSource: 'window',\n              mediaSource: 'window'\n            }\n          };\n          return _this._getUserMedia(media, getScreenSuccess, onError);\n        } else {\n          return ChromeScreenShare.getSourceId(_this.navigator, function(id) {\n            media = {\n              audio: false,\n              video: {\n                mandatory: {\n                  chromeMediaSource: 'desktop',\n                  chromeMediaSourceId: id,\n                  maxWidth: 1280,\n                  maxHeight: 720\n                }\n              }\n            };\n            return _this._getUserMedia(media, getScreenSuccess, onError);\n          });\n        }\n      };\n    })(this);\n    if (this.navigator === 'firefox' || (media.audio == null) || media.audio === false) {\n      return getScreen();\n    } else {\n      getAudioSuccess = (function(_this) {\n        return function(audioStream) {\n          return getScreen(audioStream);\n        };\n      })(this);\n      getAudioError = (function(_this) {\n        return function() {\n          return getScreen();\n        };\n      })(this);\n      return this._getUserMedia({\n        audio: media.audio\n      }, getAudioSuccess, getAudioError);\n    }\n  };\n\n\n  /*\n  \t\t@param callback {Function}\n   */\n\n  WebRTCClass.prototype.getLocalUserMedia = function(callback) {\n    var onError, onSuccess;\n    this.log('getLocalUserMedia', arguments);\n    if (this.localStream != null) {\n      return callback(null, this.localStream);\n    }\n    onSuccess = (function(_this) {\n      return function(stream) {\n        var id, peerConnection, ref;\n        _this.localStream = stream;\n        _this.localUrl.set(URL.createObjectURL(stream));\n        _this.videoEnabled.set(_this.media.video === true);\n        _this.audioEnabled.set(_this.media.audio === true);\n        ref = _this.peerConnections;\n        for (id in ref) {\n          peerConnection = ref[id];\n          peerConnection.addStream(stream);\n        }\n        return callback(null, _this.localStream);\n      };\n    })(this);\n    onError = (function(_this) {\n      return function(error) {\n        callback(false);\n        return _this.onError(error);\n      };\n    })(this);\n    return this.getUserMedia(this.media, onSuccess, onError);\n  };\n\n\n  /*\n  \t\t@param id {String}\n   */\n\n  WebRTCClass.prototype.stopPeerConnection = function(id) {\n    var peerConnection;\n    peerConnection = this.peerConnections[id];\n    if (peerConnection == null) {\n      return;\n    }\n    delete this.peerConnections[id];\n    peerConnection.close();\n    return this.updateRemoteItems();\n  };\n\n  WebRTCClass.prototype.stopAllPeerConnections = function() {\n    var id, peerConnection, ref, ref1;\n    ref = this.peerConnections;\n    for (id in ref) {\n      peerConnection = ref[id];\n      this.stopPeerConnection(id);\n    }\n    return (ref1 = window.audioContext) != null ? ref1.close() : void 0;\n  };\n\n  WebRTCClass.prototype.setAudioEnabled = function(enabled) {\n    if (enabled == null) {\n      enabled = true;\n    }\n    if (this.localStream != null) {\n      if (enabled === true && this.media.audio !== true) {\n        delete this.localStream;\n        this.media.audio = true;\n        return this.getLocalUserMedia((function(_this) {\n          return function() {\n            _this.stopAllPeerConnections();\n            return _this.joinCall();\n          };\n        })(this));\n      } else {\n        this.localStream.getAudioTracks().forEach(function(audio) {\n          return audio.enabled = enabled;\n        });\n        return this.audioEnabled.set(enabled);\n      }\n    }\n  };\n\n  WebRTCClass.prototype.disableAudio = function() {\n    return this.setAudioEnabled(false);\n  };\n\n  WebRTCClass.prototype.enableAudio = function() {\n    return this.setAudioEnabled(true);\n  };\n\n  WebRTCClass.prototype.setVideoEnabled = function(enabled) {\n    if (enabled == null) {\n      enabled = true;\n    }\n    if (this.localStream != null) {\n      if (enabled === true && this.media.video !== true) {\n        delete this.localStream;\n        this.media.video = true;\n        return this.getLocalUserMedia((function(_this) {\n          return function() {\n            _this.stopAllPeerConnections();\n            return _this.joinCall();\n          };\n        })(this));\n      } else {\n        this.localStream.getVideoTracks().forEach(function(video) {\n          return video.enabled = enabled;\n        });\n        return this.videoEnabled.set(enabled);\n      }\n    }\n  };\n\n  WebRTCClass.prototype.disableScreenShare = function() {\n    return this.setScreenShareEnabled(false);\n  };\n\n  WebRTCClass.prototype.enableScreenShare = function() {\n    return this.setScreenShareEnabled(true);\n  };\n\n  WebRTCClass.prototype.setScreenShareEnabled = function(enabled) {\n    if (enabled == null) {\n      enabled = true;\n    }\n    if (this.localStream != null) {\n      this.media.desktop = enabled;\n      delete this.localStream;\n      return this.getLocalUserMedia((function(_this) {\n        return function(err) {\n          if (err != null) {\n            return;\n          }\n          _this.screenShareEnabled.set(enabled);\n          _this.stopAllPeerConnections();\n          return _this.joinCall();\n        };\n      })(this));\n    }\n  };\n\n  WebRTCClass.prototype.disableVideo = function() {\n    return this.setVideoEnabled(false);\n  };\n\n  WebRTCClass.prototype.enableVideo = function() {\n    return this.setVideoEnabled(true);\n  };\n\n  WebRTCClass.prototype.stop = function() {\n    this.active = false;\n    this.monitor = false;\n    this.remoteMonitoring = false;\n    if ((this.localStream != null) && typeof this.localStream !== 'undefined') {\n      this.localStream.getTracks().forEach(function(track) {\n        return track.stop();\n      });\n    }\n    this.localUrl.set(void 0);\n    delete this.localStream;\n    return this.stopAllPeerConnections();\n  };\n\n\n  /*\n  \t\t@param media {Object}\n  \t\t\taudio {Boolean}\n  \t\t\tvideo {Boolean}\n   */\n\n  WebRTCClass.prototype.startCall = function(media) {\n    if (media == null) {\n      media = {};\n    }\n    this.log('startCall', arguments);\n    this.media = media;\n    return this.getLocalUserMedia((function(_this) {\n      return function() {\n        _this.active = true;\n        return _this.transport.startCall({\n          media: _this.media\n        });\n      };\n    })(this));\n  };\n\n  WebRTCClass.prototype.startCallAsMonitor = function(media) {\n    if (media == null) {\n      media = {};\n    }\n    this.log('startCallAsMonitor', arguments);\n    this.media = media;\n    this.active = true;\n    this.monitor = true;\n    return this.transport.startCall({\n      media: this.media,\n      monitor: true\n    });\n  };\n\n\n  /*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tmonitor {Boolean}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n   */\n\n  WebRTCClass.prototype.onRemoteCall = function(data) {\n    var fromUsername, icon, ref, ref1, ref2, subscription, title;\n    if (this.autoAccept === true) {\n      FlowRouter.goToRoomById(data.room);\n      Meteor.defer((function(_this) {\n        return function() {\n          return _this.joinCall({\n            to: data.from,\n            monitor: data.monitor,\n            media: data.media\n          });\n        };\n      })(this));\n      return;\n    }\n    fromUsername = (ref = Meteor.users.findOne(data.from)) != null ? ref.username : void 0;\n    subscription = ChatSubscription.findOne({\n      rid: data.room\n    });\n    if (data.monitor === true) {\n      icon = 'eye';\n      title = \"Monitor call from \" + fromUsername;\n    } else if ((subscription != null ? subscription.t : void 0) === 'd') {\n      if ((ref1 = data.media) != null ? ref1.video : void 0) {\n        icon = 'videocam';\n        title = \"Direct video call from \" + fromUsername;\n      } else {\n        icon = 'phone';\n        title = \"Direct audio call from \" + fromUsername;\n      }\n    } else {\n      if ((ref2 = data.media) != null ? ref2.video : void 0) {\n        icon = 'videocam';\n        title = \"Group video call from \" + subscription.name;\n      } else {\n        icon = 'phone';\n        title = \"Group audio call from \" + subscription.name;\n      }\n    }\n    return swal({\n      title: \"<i class='icon-\" + icon + \" alert-icon success-color'></i>\" + title,\n      text: \"Do you want to accept?\",\n      html: true,\n      showCancelButton: true,\n      confirmButtonText: \"Yes\",\n      cancelButtonText: \"No\"\n    }, (function(_this) {\n      return function(isConfirm) {\n        if (isConfirm) {\n          FlowRouter.goToRoomById(data.room);\n          return Meteor.defer(function() {\n            return _this.joinCall({\n              to: data.from,\n              monitor: data.monitor,\n              media: data.media\n            });\n          });\n        } else {\n          return _this.stop();\n        }\n      };\n    })(this));\n  };\n\n\n  /*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tmonitor {Boolean}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n  \t\t\t\tdesktop {Boolean}\n   */\n\n  WebRTCClass.prototype.joinCall = function(data) {\n    var ref, ref1;\n    if (data == null) {\n      data = {};\n    }\n    if (((ref = data.media) != null ? ref.audio : void 0) != null) {\n      this.media.audio = data.media.audio;\n    }\n    if (((ref1 = data.media) != null ? ref1.video : void 0) != null) {\n      this.media.video = data.media.video;\n    }\n    data.media = this.media;\n    this.log('joinCall', arguments);\n    return this.getLocalUserMedia((function(_this) {\n      return function() {\n        _this.remoteMonitoring = data.monitor;\n        _this.active = true;\n        return _this.transport.joinCall(data);\n      };\n    })(this));\n  };\n\n\n  /*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tmonitor {Boolean}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n  \t\t\t\tdesktop {Boolean}\n   */\n\n  WebRTCClass.prototype.onRemoteJoin = function(data) {\n    var onOffer, peerConnection;\n    if (this.active !== true) {\n      return;\n    }\n    this.log('onRemoteJoin', arguments);\n    peerConnection = this.getPeerConnection(data.from);\n    if (peerConnection.signalingState !== \"checking\") {\n      this.stopPeerConnection(data.from);\n      peerConnection = this.getPeerConnection(data.from);\n    }\n    if (peerConnection.iceConnectionState !== 'new') {\n      return;\n    }\n    peerConnection.remoteMedia = data.media;\n    if (this.localStream) {\n      peerConnection.addStream(this.localStream);\n    }\n    onOffer = (function(_this) {\n      return function(offer) {\n        var onLocalDescription;\n        onLocalDescription = function() {\n          return _this.transport.sendDescription({\n            to: data.from,\n            type: 'offer',\n            ts: peerConnection.createdAt,\n            media: _this.media,\n            description: {\n              sdp: offer.sdp,\n              type: offer.type\n            }\n          });\n        };\n        return peerConnection.setLocalDescription(new RTCSessionDescription(offer), onLocalDescription, _this.onError);\n      };\n    })(this);\n    if (data.monitor === true) {\n      return peerConnection.createOffer(onOffer, this.onError, {\n        mandatory: {\n          OfferToReceiveAudio: data.media.audio,\n          OfferToReceiveVideo: data.media.video\n        }\n      });\n    } else {\n      return peerConnection.createOffer(onOffer, this.onError);\n    }\n  };\n\n\n  /*\n  \t\t@param data {Object}\n  \t\t\tfrom {String}\n  \t\t\tts {Integer}\n  \t\t\tdescription {String}\n   */\n\n  WebRTCClass.prototype.onRemoteOffer = function(data) {\n    var onAnswer, peerConnection, ref;\n    if (this.active !== true) {\n      return;\n    }\n    this.log('onRemoteOffer', arguments);\n    peerConnection = this.getPeerConnection(data.from);\n    if (((ref = peerConnection.signalingState) === \"have-local-offer\" || ref === \"stable\") && peerConnection.createdAt < data.ts) {\n      this.stopPeerConnection(data.from);\n      peerConnection = this.getPeerConnection(data.from);\n    }\n    if (peerConnection.iceConnectionState !== 'new') {\n      return;\n    }\n    peerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n    try {\n      if (this.localStream) {\n        peerConnection.addStream(this.localStream);\n      }\n    } catch (error1) {}\n    onAnswer = (function(_this) {\n      return function(answer) {\n        var onLocalDescription;\n        onLocalDescription = function() {\n          return _this.transport.sendDescription({\n            to: data.from,\n            type: 'answer',\n            ts: peerConnection.createdAt,\n            description: {\n              sdp: answer.sdp,\n              type: answer.type\n            }\n          });\n        };\n        return peerConnection.setLocalDescription(new RTCSessionDescription(answer), onLocalDescription, _this.onError);\n      };\n    })(this);\n    return peerConnection.createAnswer(onAnswer, this.onError);\n  };\n\n\n  /*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tfrom {String}\n  \t\t\tcandidate {RTCIceCandidate JSON encoded}\n   */\n\n  WebRTCClass.prototype.onRemoteCandidate = function(data) {\n    var peerConnection, ref;\n    if (this.active !== true) {\n      return;\n    }\n    if (data.to !== this.selfId) {\n      return;\n    }\n    this.log('onRemoteCandidate', arguments);\n    peerConnection = this.getPeerConnection(data.from);\n    if ((ref = peerConnection.iceConnectionState) !== \"closed\" && ref !== \"failed\" && ref !== \"disconnected\" && ref !== \"completed\") {\n      return peerConnection.addIceCandidate(new RTCIceCandidate(data.candidate));\n    }\n  };\n\n\n  /*\n  \t\t@param data {Object}\n  \t\t\tto {String}\n  \t\t\tfrom {String}\n  \t\t\ttype {String} [offer, answer]\n  \t\t\tdescription {RTCSessionDescription JSON encoded}\n  \t\t\tts {Integer}\n  \t\t\tmedia {Object}\n  \t\t\t\taudio {Boolean}\n  \t\t\t\tvideo {Boolean}\n  \t\t\t\tdesktop {Boolean}\n   */\n\n  WebRTCClass.prototype.onRemoteDescription = function(data) {\n    var peerConnection;\n    if (this.active !== true) {\n      return;\n    }\n    if (data.to !== this.selfId) {\n      return;\n    }\n    this.log('onRemoteDescription', arguments);\n    peerConnection = this.getPeerConnection(data.from);\n    if (data.type === 'offer') {\n      peerConnection.remoteMedia = data.media;\n      return this.onRemoteOffer({\n        from: data.from,\n        ts: data.ts,\n        description: data.description\n      });\n    } else {\n      return peerConnection.setRemoteDescription(new RTCSessionDescription(data.description));\n    }\n  };\n\n  return WebRTCClass;\n\n})();\n\nWebRTC = new ((function() {\n  function _Class() {\n    this.instancesByRoomId = {};\n  }\n\n  _Class.prototype.getInstanceByRoomId = function(roomId) {\n    var enabled, subscription;\n    subscription = ChatSubscription.findOne({\n      rid: roomId\n    });\n    if (!subscription) {\n      return;\n    }\n    enabled = false;\n    switch (subscription.t) {\n      case 'd':\n        enabled = RocketChat.settings.get('WebRTC_Enable_Direct');\n        break;\n      case 'p':\n        enabled = RocketChat.settings.get('WebRTC_Enable_Private');\n        break;\n      case 'c':\n        enabled = RocketChat.settings.get('WebRTC_Enable_Channel');\n    }\n    if (enabled === false) {\n      return;\n    }\n    if (this.instancesByRoomId[roomId] == null) {\n      this.instancesByRoomId[roomId] = new WebRTCClass(Meteor.userId(), roomId);\n    }\n    return this.instancesByRoomId[roomId];\n  };\n\n  return _Class;\n\n})());\n\nMeteor.startup(function() {\n  return Tracker.autorun(function() {\n    if (Meteor.userId()) {\n      return RocketChat.Notifications.onUser('webrtc', (function(_this) {\n        return function(type, data) {\n          var webrtc;\n          if (data.room == null) {\n            return;\n          }\n          webrtc = WebRTC.getInstanceByRoomId(data.room);\n          return webrtc.transport.onUserStream(type, data);\n        };\n      })(this));\n    }\n  });\n});\n","@ChromeScreenShare =\n\tscreenCallback: undefined\n\n\tgetSourceId: (navigator, callback) ->\n\t\tif not callback? then throw '\"callback\" parameter is mandatory.'\n\n\t\tChromeScreenShare.screenCallback = callback\n\n\t\tif navigator is 'electron'\n\t\t\tfireGlobalEvent('get-sourceId', '*')\n\t\telse\n\t\t\twindow.postMessage('get-sourceId', '*')\n\nwindow.addEventListener 'message', (e) ->\n\tif e.origin isnt window.location.origin\n\t\treturn\n\n\t# \"cancel\" button was clicked\n\tif e.data is 'PermissionDeniedError'\n\t\tif ChromeScreenShare.screenCallback?\n\t\t\treturn ChromeScreenShare.screenCallback('PermissionDeniedError')\n\t\telse\n\t\t\tthrow new Error('PermissionDeniedError')\n\n\t# extension shared temp sourceId\n\tif e.data.sourceId?\n\t\tChromeScreenShare.screenCallback?(e.data.sourceId)\n","this.ChromeScreenShare = {\n  screenCallback: void 0,\n  getSourceId: function(navigator, callback) {\n    if (callback == null) {\n      throw '\"callback\" parameter is mandatory.';\n    }\n    ChromeScreenShare.screenCallback = callback;\n    if (navigator === 'electron') {\n      return fireGlobalEvent('get-sourceId', '*');\n    } else {\n      return window.postMessage('get-sourceId', '*');\n    }\n  }\n};\n\nwindow.addEventListener('message', function(e) {\n  if (e.origin !== window.location.origin) {\n    return;\n  }\n  if (e.data === 'PermissionDeniedError') {\n    if (ChromeScreenShare.screenCallback != null) {\n      return ChromeScreenShare.screenCallback('PermissionDeniedError');\n    } else {\n      throw new Error('PermissionDeniedError');\n    }\n  }\n  if (e.data.sourceId != null) {\n    return typeof ChromeScreenShare.screenCallback === \"function\" ? ChromeScreenShare.screenCallback(e.data.sourceId) : void 0;\n  }\n});\n"]}