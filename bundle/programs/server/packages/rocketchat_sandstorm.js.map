{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:sandstorm/server/lib.js","meteor://ðŸ’»app/packages/rocketchat:sandstorm/server/events.js","meteor://ðŸ’»app/packages/rocketchat:sandstorm/server/powerbox.js"],"names":["RocketChat","Sandstorm","process","env","SANDSTORM","Future","Npm","require","Capnp","SandstormHttpBridge","capnpConnection","httpBridge","getHttpBridge","connect","restore","promiseToFuture","promise","result","then","return","bind","throw","waitPromise","wait","UploadFS","Store","prototype","getURL","path","getRelativeURL","notify","ACTIVITY_TYPES","message","userIds","caption","type","sessionId","sandstormSessionId","activity","notification","defaultText","users","_","map","userId","user","Meteor","findOne","_id","fields","identity","getSavedIdentity","services","sandstorm","id","mentioned","getSessionContext","context","offerUiView","Powerbox","Grain","token","serializedDescriptor","session","api","getSandstormApi","cap","Buffer","offer","undefined","tags","value","methods","sandstormClaimRequest","descriptor","parsePacked","PowerboxDescriptor","grainTitle","parse","UiView","PowerboxTag","title","connection","claimRequest","castAs","newToken","save","toString","viewInfo","getViewInfo","appTitle","asset","grainIcon","getUrl","appIconUrl","protocol","hostPath","sandstormOffer"],"mappings":"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","file":"/packages/rocketchat_sandstorm.js","sourcesContent":["/* globals getHttpBridge, waitPromise, UploadFS */\n/* exported getHttpBridge, waitPromise */\n\nRocketChat.Sandstorm = {};\n\nif (process.env.SANDSTORM === '1') {\n\tconst Future = Npm.require('fibers/future');\n\tconst Capnp = Npm.require('capnp');\n\tconst SandstormHttpBridge = Npm.require('sandstorm/sandstorm-http-bridge.capnp').SandstormHttpBridge;\n\n\tlet capnpConnection = null;\n\tlet httpBridge = null;\n\n\tgetHttpBridge = function() {\n\t\tif (!httpBridge) {\n\t\t\tcapnpConnection = Capnp.connect('unix:/tmp/sandstorm-api');\n\t\t\thttpBridge = capnpConnection.restore(null, SandstormHttpBridge);\n\t\t}\n\t\treturn httpBridge;\n\t};\n\n\tconst promiseToFuture = function(promise) {\n\t\tconst result = new Future();\n\t\tpromise.then(result.return.bind(result), result.throw.bind(result));\n\t\treturn result;\n\t};\n\n\twaitPromise = function(promise) {\n\t\treturn promiseToFuture(promise).wait();\n\t};\n\n\t// This usual implementation of this method returns an absolute URL that is invalid\n\t// under Sandstorm.\n\tUploadFS.Store.prototype.getURL = function(path) {\n\t\treturn this.getRelativeURL(path);\n\t};\n}\n","/* globals getHttpBridge, waitPromise */\n\nRocketChat.Sandstorm.notify = function() {};\n\nif (process.env.SANDSTORM === '1') {\n\tconst ACTIVITY_TYPES = {\n\t\t'message': 0,\n\t\t'privateMessage': 1\n\t};\n\n\tRocketChat.Sandstorm.notify = function(message, userIds, caption, type) {\n\t\tconst sessionId = message.sandstormSessionId;\n\t\tif (!sessionId) {\n\t\t\treturn;\n\t\t}\n\t\tconst httpBridge = getHttpBridge();\n\t\tconst activity = {};\n\n\t\tif (type) {\n\t\t\tactivity.type = ACTIVITY_TYPES[type];\n\t\t}\n\n\t\tif (caption) {\n\t\t\tactivity.notification = {caption: {defaultText: caption}};\n\t\t}\n\n\t\tif (userIds) {\n\t\t\tactivity.users = _.map(userIds, function(userId) {\n\t\t\t\tconst user = Meteor.users.findOne({_id: userId}, {fields: {'services.sandstorm.id': 1}});\n\t\t\t\treturn {\n\t\t\t\t\tidentity: waitPromise(httpBridge.getSavedIdentity(user.services.sandstorm.id)).identity,\n\t\t\t\t\tmentioned: true\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn waitPromise(httpBridge.getSessionContext(sessionId).context.activity(activity));\n\t};\n}\n","/* globals getHttpBridge, waitPromise */\n\nRocketChat.Sandstorm.offerUiView = function() {};\n\nif (process.env.SANDSTORM === '1') {\n\tconst Capnp = Npm.require('capnp');\n\tconst Powerbox = Npm.require('sandstorm/powerbox.capnp');\n\tconst Grain = Npm.require('sandstorm/grain.capnp');\n\n\tRocketChat.Sandstorm.offerUiView = function(token, serializedDescriptor, sessionId) {\n\t\tconst httpBridge = getHttpBridge();\n\t\tconst session = httpBridge.getSessionContext(sessionId).context;\n\t\tconst api = httpBridge.getSandstormApi(sessionId).api;\n\t\tconst cap = waitPromise(api.restore(new Buffer(token, 'base64'))).cap;\n\t\treturn waitPromise(session.offer(cap, undefined, {tags: [{\n\t\t\tid: '15831515641881813735',\n\t\t\tvalue: new Buffer(serializedDescriptor, 'base64')\n\t\t}]}));\n\t};\n\n\tMeteor.methods({\n\t\tsandstormClaimRequest(token, serializedDescriptor) {\n\t\t\tconst descriptor = Capnp.parsePacked(Powerbox.PowerboxDescriptor, new Buffer(serializedDescriptor, 'base64'));\n\t\t\tconst grainTitle = Capnp.parse(Grain.UiView.PowerboxTag, descriptor.tags[0].value).title;\n\t\t\tconst sessionId = this.connection.sandstormSessionId();\n\t\t\tconst httpBridge = getHttpBridge();\n\t\t\tconst session = httpBridge.getSessionContext(sessionId).context;\n\t\t\tconst cap = waitPromise(session.claimRequest(token)).cap.castAs(Grain.UiView);\n\t\t\tconst api = httpBridge.getSandstormApi(sessionId).api;\n\t\t\tconst newToken = waitPromise(api.save(cap)).token.toString('base64');\n\t\t\tconst viewInfo = waitPromise(cap.getViewInfo());\n\t\t\tconst appTitle = viewInfo.appTitle;\n\t\t\tconst asset = waitPromise(viewInfo.grainIcon.getUrl());\n\t\t\tconst appIconUrl = `${ asset.protocol }://${ asset.hostPath }`;\n\t\t\treturn {\n\t\t\t\ttoken: newToken,\n\t\t\t\tappTitle,\n\t\t\t\tappIconUrl,\n\t\t\t\tgrainTitle,\n\t\t\t\tdescriptor: descriptor.tags[0].value.toString('base64')\n\t\t\t};\n\t\t},\n\t\tsandstormOffer(token, serializedDescriptor) {\n\t\t\tRocketChat.Sandstorm.offerUiView(token, serializedDescriptor,\n\t\t\t\tthis.connection.sandstormSessionId());\n\t\t}\n\t});\n}\n"]}