{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveReactWhenReadOnly.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomType.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomTopic.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomAnnouncement.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomName.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomReadOnly.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomDescription.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/functions/saveRoomSystemMessages.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/methods/saveRoomSettings.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/models/Messages.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/models/Rooms.js","meteor://ðŸ’»app/packages/rocketchat:channel-settings/server/startup.js"],"names":["RocketChat","saveReactWhenReadOnly","rid","allowReact","Match","test","String","Meteor","Error","models","Rooms","setAllowReactingWhenReadOnlyById","saveRoomType","roomType","user","sendMessage","type","room","findOneById","_id","t","result","setTypeById","Subscriptions","updateTypeByRoomId","message","TAPi18n","__","lng","language","settings","get","Messages","createRoomSettingsChangedWithTypeRoomIdMessageAndUser","saveRoomTopic","roomTopic","s","escapeHTML","update","setTopicById","saveRoomAnnouncement","roomAnnouncement","updated","setAnnouncementById","saveRoomName","name","nameValidation","RegExp","error","room_name","findOneByName","channel_name","setNameById","updateNameAndAlertByRoomId","createRoomRenamedWithRoomIdRoomNameAndUser","saveRoomReadOnly","readOnly","setReadOnlyById","saveRoomDescription","roomDescription","escapedRoomDescription","setDescriptionById","saveRoomSystemMessages","systemMessages","setSystemMessagesById","methods","saveRoomSettings","setting","value","userId","method","some","authz","hasPermission","action","topic","announcement","description","ro","reactWhenReadOnly","sysMes","setJoinCodeById","saveDefaultById","roomId","extraData","createWithTypeRoomIdMessageAndUser","roomName","query","$set","findByRoomId","forEach","subscription","_user","muted","push","username","$unset","allowReacting","startup","Permissions","upsert","$setOnInsert","roles"],"mappings":"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","file":"/packages/rocketchat_channel-settings.js","sourcesContent":["RocketChat.saveReactWhenReadOnly = function(rid, allowReact) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', { function: 'RocketChat.saveReactWhenReadOnly' });\n\t}\n\n\treturn RocketChat.models.Rooms.setAllowReactingWhenReadOnlyById(rid, allowReact);\n};\n","\nRocketChat.saveRoomType = function(rid, roomType, user, sendMessage = true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomType'\n\t\t});\n\t}\n\tif (roomType !== 'c' && roomType !== 'p') {\n\t\tthrow new Meteor.Error('error-invalid-room-type', 'error-invalid-room-type', {\n\t\t\t'function': 'RocketChat.saveRoomType',\n\t\t\ttype: roomType\n\t\t});\n\t}\n\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\tif (room == null) {\n\t\tthrow new Meteor.Error('error-invalid-room', 'error-invalid-room', {\n\t\t\t'function': 'RocketChat.saveRoomType',\n\t\t\t_id: rid\n\t\t});\n\t}\n\tif (room.t === 'd') {\n\t\tthrow new Meteor.Error('error-direct-room', 'Can\\'t change type of direct rooms', {\n\t\t\t'function': 'RocketChat.saveRoomType'\n\t\t});\n\t}\n\tconst result = RocketChat.models.Rooms.setTypeById(rid, roomType) && RocketChat.models.Subscriptions.updateTypeByRoomId(rid, roomType);\n\tif (result && sendMessage) {\n\t\tlet message;\n\t\tif (roomType === 'c') {\n\t\t\tmessage = TAPi18n.__('Channel', {\n\t\t\t\tlng: user && user.language || RocketChat.settings.get('language') || 'en'\n\t\t\t});\n\t\t} else {\n\t\t\tmessage = TAPi18n.__('Private_Group', {\n\t\t\t\tlng: user && user.language || RocketChat.settings.get('language') || 'en'\n\t\t\t});\n\t\t}\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_privacy', rid, message, user);\n\t}\n\treturn result;\n};\n","RocketChat.saveRoomTopic = function(rid, roomTopic, user, sendMessage = true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomTopic'\n\t\t});\n\t}\n\troomTopic = s.escapeHTML(roomTopic);\n\tconst update = RocketChat.models.Rooms.setTopicById(rid, roomTopic);\n\tif (update && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_topic', rid, roomTopic, user);\n\t}\n\treturn update;\n};\n","RocketChat.saveRoomAnnouncement = function(rid, roomAnnouncement, user, sendMessage=true) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', { function: 'RocketChat.saveRoomAnnouncement' });\n\t}\n\n\troomAnnouncement = s.escapeHTML(roomAnnouncement);\n\tconst updated = RocketChat.models.Rooms.setAnnouncementById(rid, roomAnnouncement);\n\tif (updated && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_announcement', rid, roomAnnouncement, user);\n\t}\n\n\treturn updated;\n};\n","\nRocketChat.saveRoomName = function(rid, name, user, sendMessage = true) {\n\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\tif (room.t !== 'c' && room.t !== 'p') {\n\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', {\n\t\t\t'function': 'RocketChat.saveRoomName'\n\t\t});\n\t}\n\tlet nameValidation;\n\ttry {\n\t\tnameValidation = new RegExp(`^${ RocketChat.settings.get('UTF8_Names_Validation') }$`);\n\t} catch (error) {\n\t\tnameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');\n\t}\n\tif (!nameValidation.test(name)) {\n\t\tthrow new Meteor.Error('error-invalid-room-name', `${ name } is not a valid room name. Use only letters, numbers, hyphens and underscores`, {\n\t\t\t'function': 'RocketChat.saveRoomName',\n\t\t\troom_name: name\n\t\t});\n\t}\n\tif (name === room.name) {\n\t\treturn;\n\t}\n\tif (RocketChat.models.Rooms.findOneByName(name)) {\n\t\tthrow new Meteor.Error('error-duplicate-channel-name', `A channel with name '${ name }' exists`, {\n\t\t\t'function': 'RocketChat.saveRoomName',\n\t\t\tchannel_name: name\n\t\t});\n\t}\n\tconst update = RocketChat.models.Rooms.setNameById(rid, name) && RocketChat.models.Subscriptions.updateNameAndAlertByRoomId(rid, name);\n\tif (update && sendMessage) {\n\t\tRocketChat.models.Messages.createRoomRenamedWithRoomIdRoomNameAndUser(rid, name, user);\n\t}\n\treturn name;\n};\n","RocketChat.saveRoomReadOnly = function(rid, readOnly) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomReadOnly'\n\t\t});\n\t}\n\treturn RocketChat.models.Rooms.setReadOnlyById(rid, readOnly);\n};\n","RocketChat.saveRoomDescription = function(rid, roomDescription, user) {\n\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomDescription'\n\t\t});\n\t}\n\tconst escapedRoomDescription = s.escapeHTML(roomDescription);\n\tconst update = RocketChat.models.Rooms.setDescriptionById(rid, escapedRoomDescription);\n\tRocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser('room_changed_description', rid, escapedRoomDescription, user);\n\treturn update;\n};\n","RocketChat.saveRoomSystemMessages = function(rid, systemMessages) {\n\tif (!Match.test(rid, String)) {\n\t\tthrow new Meteor.Error('invalid-room', 'Invalid room', {\n\t\t\t'function': 'RocketChat.saveRoomSystemMessages'\n\t\t});\n\t}\n\treturn RocketChat.models.Rooms.setSystemMessagesById(rid, systemMessages);\n};\n","Meteor.methods({\n\tsaveRoomSettings(rid, setting, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', {\n\t\t\t\t'function': 'RocketChat.saveRoomName'\n\t\t\t});\n\t\t}\n\t\tif (!Match.test(rid, String)) {\n\t\t\tthrow new Meteor.Error('error-invalid-room', 'Invalid room', {\n\t\t\t\tmethod: 'saveRoomSettings'\n\t\t\t});\n\t\t}\n\t\tif (!['roomName', 'roomTopic', 'roomAnnouncement', 'roomDescription', 'roomType', 'readOnly', 'reactWhenReadOnly', 'systemMessages', 'default', 'joinCode'].some((s) => s === setting)) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings provided', {\n\t\t\t\tmethod: 'saveRoomSettings'\n\t\t\t});\n\t\t}\n\t\tif (!RocketChat.authz.hasPermission(Meteor.userId(), 'edit-room', rid)) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Editing room is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Editing_room'\n\t\t\t});\n\t\t}\n\t\tif (setting === 'default' && !RocketChat.authz.hasPermission(this.userId, 'view-room-administration')) {\n\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Viewing room administration is not allowed', {\n\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\taction: 'Viewing_room_administration'\n\t\t\t});\n\t\t}\n\t\tconst room = RocketChat.models.Rooms.findOneById(rid);\n\t\tif (room != null) {\n\t\t\tif (setting === 'roomType' && value !== room.t && value === 'c' && !RocketChat.authz.hasPermission(this.userId, 'create-c')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a private group to a public channel is not allowed', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Type'\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (setting === 'roomType' && value !== room.t && value === 'p' && !RocketChat.authz.hasPermission(this.userId, 'create-p')) {\n\t\t\t\tthrow new Meteor.Error('error-action-not-allowed', 'Changing a public channel to a private room is not allowed', {\n\t\t\t\t\tmethod: 'saveRoomSettings',\n\t\t\t\t\taction: 'Change_Room_Type'\n\t\t\t\t});\n\t\t\t}\n\t\t\tswitch (setting) {\n\t\t\t\tcase 'roomName':\n\t\t\t\t\tname = RocketChat.saveRoomName(rid, value, Meteor.user());\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomTopic':\n\t\t\t\t\tif (value !== room.topic) {\n\t\t\t\t\t\tRocketChat.saveRoomTopic(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomAnnouncement':\n\t\t\t\t\tif (value !== room.announcement) {\n\t\t\t\t\t\tRocketChat.saveRoomAnnouncement(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomDescription':\n\t\t\t\t\tif (value !== room.description) {\n\t\t\t\t\t\tRocketChat.saveRoomDescription(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'roomType':\n\t\t\t\t\tif (value !== room.t) {\n\t\t\t\t\t\tRocketChat.saveRoomType(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'readOnly':\n\t\t\t\t\tif (value !== room.ro) {\n\t\t\t\t\t\tRocketChat.saveRoomReadOnly(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'reactWhenReadOnly':\n\t\t\t\t\tif (value !== room.reactWhenReadOnly) {\n\t\t\t\t\t\tRocketChat.saveReactWhenReadOnly(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'systemMessages':\n\t\t\t\t\tif (value !== room.sysMes) {\n\t\t\t\t\t\tRocketChat.saveRoomSystemMessages(rid, value, Meteor.user());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'joinCode':\n\t\t\t\t\tRocketChat.models.Rooms.setJoinCodeById(rid, String(value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'default':\n\t\t\t\t\tRocketChat.models.Rooms.saveDefaultById(rid, value);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tresult: true,\n\t\t\trid: room._id\n\t\t};\n\t}\n});\n","RocketChat.models.Messages.createRoomSettingsChangedWithTypeRoomIdMessageAndUser = function(type, roomId, message, user, extraData) {\n\treturn this.createWithTypeRoomIdMessageAndUser(type, roomId, message, user, extraData);\n};\n\nRocketChat.models.Messages.createRoomRenamedWithRoomIdRoomNameAndUser = function(roomId, roomName, user, extraData) {\n\treturn this.createWithTypeRoomIdMessageAndUser('r', roomId, roomName, user, extraData);\n};\n","RocketChat.models.Rooms.setDescriptionById = function(_id, description) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tdescription\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setReadOnlyById = function(_id, readOnly) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tro: readOnly\n\t\t}\n\t};\n\tif (readOnly) {\n\t\tRocketChat.models.Subscriptions.findByRoomId(_id).forEach(function(subscription) {\n\t\t\tif (subscription._user == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst user = subscription._user;\n\t\t\tif (RocketChat.authz.hasPermission(user._id, 'post-readonly') === false) {\n\t\t\t\tif (!update.$set.muted) {\n\t\t\t\t\tupdate.$set.muted = [];\n\t\t\t\t}\n\t\t\t\treturn update.$set.muted.push(user.username);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tupdate.$unset = {\n\t\t\tmuted: ''\n\t\t};\n\t}\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setAllowReactingWhenReadOnlyById = function(_id, allowReacting) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\treactWhenReadOnly: allowReacting\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Rooms.setSystemMessagesById = function(_id, systemMessages) {\n\tconst query = {\n\t\t_id\n\t};\n\tconst update = {\n\t\t$set: {\n\t\t\tsysMes: systemMessages\n\t\t}\n\t};\n\treturn this.update(query, update);\n};\n","Meteor.startup(function() {\n\tRocketChat.models.Permissions.upsert('post-readonly', {$setOnInsert: { roles: ['admin', 'owner', 'moderator'] } });\n\tRocketChat.models.Permissions.upsert('set-readonly', {$setOnInsert: { roles: ['admin', 'owner'] } });\n\tRocketChat.models.Permissions.upsert('set-react-when-readonly', {$setOnInsert: { roles: ['admin', 'owner'] }});\n});\n"]}