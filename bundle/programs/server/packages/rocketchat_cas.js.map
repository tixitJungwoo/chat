{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:cas/cas_rocketchat.js","meteor://ðŸ’»app/packages/rocketchat:cas/cas_server.js"],"names":["logger","Logger","Meteor","startup","RocketChat","settings","addGroup","add","type","group","values","key","i18nLabel","section","timer","updateServices","clearTimeout","setTimeout","data","enabled","get","base_url","login_url","buttonLabelText","buttonLabelColor","buttonColor","width","height","autoclose","info","ServiceConfiguration","configurations","upsert","service","$set","remove","value","fiber","Npm","require","url","CAS","_casCredentialTokens","RoutePolicy","declare","closePopup","res","writeHead","content","end","casTicket","req","token","callback","error","parsedUrl","parse","ticketId","query","ticket","baseUrl","cas_version","parseFloat","appUrl","absoluteUrl","replace","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","debug","cas","version","validate","err","status","username","details","message","user_info","attributes","_","extend","middleware","next","barePath","substring","indexOf","splitPath","split","credentialToken","WebApp","connectHandlers","use","run","_hasCredential","has","_retrieveCredential","result","Accounts","registerLoginHandler","options","undefined","Error","LoginCancelledError","numericError","syncUserDataFieldMap","trim","sync_enabled","ext_attrs","int_attrs","email","name","rooms","each","ext_name","attr_map","JSON","source","int_name","isString","user","users","findOne","_id","_setRealName","update","emails","address","verified","newUser","active","globalRoles","services","external_id","attrs","userId","insertUserDoc","room_name","room","models","Rooms","findOneByNameAndType","createWithIdTypeAndName","Random","id","addUsernameByName","Subscriptions","createWithRoomAndUser","ts","Date","open","alert","unread"],"mappings":"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","file":"/packages/rocketchat_cas.js","sourcesContent":["/* globals logger:true */\n\nlogger = new Logger('CAS', {});\n\nMeteor.startup(function() {\n\tRocketChat.settings.addGroup('CAS', function() {\n\t\tthis.add('CAS_enabled', false, { type: 'boolean', group: 'CAS', public: true });\n\t\tthis.add('CAS_base_url', '', { type: 'string', group: 'CAS', public: true });\n\t\tthis.add('CAS_login_url', '', { type: 'string', group: 'CAS', public: true });\n\t\tthis.add('CAS_version', '1.0', { type: 'select', values: [{ key: '1.0', i18nLabel: '1.0'}, { key: '2.0', i18nLabel: '2.0'}], group: 'CAS' });\n\n\t\tthis.section('Attribute_handling', function() {\n\t\t\t// Enable/disable sync\n\t\t\tthis.add('CAS_Sync_User_Data_Enabled', true, { type: 'boolean' });\n\t\t\t// Attribute mapping table\n\t\t\tthis.add('CAS_Sync_User_Data_FieldMap', '{}', { type: 'string' });\n\t\t});\n\n\t\tthis.section('CAS_Login_Layout', function() {\n\t\t\tthis.add('CAS_popup_width', '810', { type: 'string', group: 'CAS', public: true });\n\t\t\tthis.add('CAS_popup_height', '610', { type: 'string', group: 'CAS', public: true });\n\t\t\tthis.add('CAS_button_label_text', 'CAS', { type: 'string', group: 'CAS'});\n\t\t\tthis.add('CAS_button_label_color', '#FFFFFF', { type: 'color', group: 'CAS'});\n\t\t\tthis.add('CAS_button_color', '#13679A', { type: 'color', group: 'CAS'});\n\t\t\tthis.add('CAS_autoclose', true, { type: 'boolean', group: 'CAS'});\n\t\t});\n\t});\n});\n\nlet timer;\n\nfunction updateServices(/*record*/) {\n\tif (typeof timer !== 'undefined') {\n\t\tMeteor.clearTimeout(timer);\n\t}\n\n\ttimer = Meteor.setTimeout(function() {\n\t\tconst data = {\n\t\t\t// These will pe passed to 'node-cas' as options\n\t\t\tenabled:          RocketChat.settings.get('CAS_enabled'),\n\t\t\tbase_url:         RocketChat.settings.get('CAS_base_url'),\n\t\t\tlogin_url:        RocketChat.settings.get('CAS_login_url'),\n\t\t\t// Rocketchat Visuals\n\t\t\tbuttonLabelText:  RocketChat.settings.get('CAS_button_label_text'),\n\t\t\tbuttonLabelColor: RocketChat.settings.get('CAS_button_label_color'),\n\t\t\tbuttonColor:      RocketChat.settings.get('CAS_button_color'),\n\t\t\twidth:            RocketChat.settings.get('CAS_popup_width'),\n\t\t\theight:           RocketChat.settings.get('CAS_popup_height'),\n\t\t\tautoclose:        RocketChat.settings.get('CAS_autoclose')\n\t\t};\n\n\t\t// Either register or deregister the CAS login service based upon its configuration\n\t\tif (data.enabled) {\n\t\t\tlogger.info('Enabling CAS login service');\n\t\t\tServiceConfiguration.configurations.upsert({service: 'cas'}, { $set: data });\n\t\t} else {\n\t\t\tlogger.info('Disabling CAS login service');\n\t\t\tServiceConfiguration.configurations.remove({service: 'cas'});\n\t\t}\n\t}, 2000);\n}\n\nRocketChat.settings.get(/^CAS_.+/, (key, value) => {\n\tupdateServices(value);\n});\n","/* globals RoutePolicy, logger */\n/* jshint newcap: false */\n\nconst fiber = Npm.require('fibers');\nconst url = Npm.require('url');\nconst CAS = Npm.require('cas');\n\nconst _casCredentialTokens = {};\n\nRoutePolicy.declare('/_cas/', 'network');\n\nconst closePopup = function(res) {\n\tres.writeHead(200, {'Content-Type': 'text/html'});\n\tconst content = '<html><head><script>window.close()</script></head></html>';\n\tres.end(content, 'utf-8');\n};\n\nconst casTicket = function(req, token, callback) {\n\n\t// get configuration\n\tif (!RocketChat.settings.get('CAS_enabled')) {\n\t\tlogger.error('Got ticket validation request, but CAS is not enabled');\n\t\tcallback();\n\t}\n\n\t// get ticket and validate.\n\tconst parsedUrl = url.parse(req.url, true);\n\tconst ticketId = parsedUrl.query.ticket;\n\tconst baseUrl = RocketChat.settings.get('CAS_base_url');\n\tconst cas_version = parseFloat(RocketChat.settings.get('CAS_version'));\n\tconst appUrl = Meteor.absoluteUrl().replace(/\\/$/, '') + __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n\tlogger.debug(`Using CAS_base_url: ${ baseUrl }`);\n\n\tconst cas = new CAS({\n\t\tbase_url: baseUrl,\n\t\tversion: cas_version,\n\t\tservice: `${ appUrl }/_cas/${ token }`\n\t});\n\n\tcas.validate(ticketId, function(err, status, username, details) {\n\t\tif (err) {\n\t\t\tlogger.error(`error when trying to validate: ${ err.message }`);\n\t\t} else if (status) {\n\t\t\tlogger.info(`Validated user: ${ username }`);\n\t\t\tconst user_info = { username };\n\n\t\t\t// CAS 2.0 attributes handling\n\t\t\tif (details && details.attributes) {\n\t\t\t\t_.extend(user_info, { attributes: details.attributes });\n\t\t\t}\n\t\t\t_casCredentialTokens[token] = user_info;\n\t\t} else {\n\t\t\tlogger.error(`Unable to validate ticket: ${ ticketId }`);\n\t\t}\n\t\t//logger.debug(\"Receveied response: \" + JSON.stringify(details, null , 4));\n\n\t\tcallback();\n\t});\n\n\treturn;\n};\n\nconst middleware = function(req, res, next) {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tconst barePath = req.url.substring(0, req.url.indexOf('?'));\n\t\tconst splitPath = barePath.split('/');\n\n\t\t// Any non-cas request will continue down the default\n\t\t// middlewares.\n\t\tif (splitPath[1] !== '_cas') {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\t// get auth token\n\t\tconst credentialToken = splitPath[2];\n\t\tif (!credentialToken) {\n\t\t\tclosePopup(res);\n\t\t\treturn;\n\t\t}\n\n\t\t// validate ticket\n\t\tcasTicket(req, credentialToken, function() {\n\t\t\tclosePopup(res);\n\t\t});\n\n\t} catch (err) {\n\t\tlogger.error(`Unexpected error : ${ err.message }`);\n\t\tclosePopup(res);\n\t}\n};\n\n// Listen to incoming OAuth http requests\nWebApp.connectHandlers.use(function(req, res, next) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function() {\n\t\tmiddleware(req, res, next);\n\t}).run();\n});\n\nconst _hasCredential = function(credentialToken) {\n\treturn _.has(_casCredentialTokens, credentialToken);\n};\n\n/*\n * Retrieve token and delete it to avoid replaying it.\n */\nconst _retrieveCredential = function(credentialToken) {\n\tconst result = _casCredentialTokens[credentialToken];\n\tdelete _casCredentialTokens[credentialToken];\n\treturn result;\n};\n\n/*\n * Register a server-side login handle.\n * It is call after Accounts.callLoginMethod() is call from client.\n *\n */\nAccounts.registerLoginHandler(function(options) {\n\n\tif (!options.cas) {\n\t\treturn undefined;\n\t}\n\n\tif (!_hasCredential(options.cas.credentialToken)) {\n\t\tthrow new Meteor.Error(Accounts.LoginCancelledError.numericError,\n\t\t'no matching login attempt found');\n\t}\n\n\tconst result = _retrieveCredential(options.cas.credentialToken);\n\tconst syncUserDataFieldMap = RocketChat.settings.get('CAS_Sync_User_Data_FieldMap').trim();\n\tconst cas_version = parseFloat(RocketChat.settings.get('CAS_version'));\n\tconst sync_enabled = RocketChat.settings.get('CAS_Sync_User_Data_Enabled');\n\n\t// We have these\n\tconst ext_attrs = {\n\t\tusername: result.username\n\t};\n\n\t// We need these\n\tconst int_attrs = {\n\t\temail: undefined,\n\t\tname: undefined,\n\t\tusername: undefined,\n\t\trooms: undefined\n\t};\n\n\t// Import response attributes\n\tif (cas_version >= 2.0) {\n\t\t// Clean & import external attributes\n\t\t_.each(result.attributes, function(value, ext_name) {\n\t\t\tif (value) {\n\t\t\t\text_attrs[ext_name] = value[0];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Source internal attributes\n\tif (syncUserDataFieldMap) {\n\n\t\t// Our mapping table: key(int_attr) -> value(ext_attr)\n\t\t// Spoken: Source this internal attribute from these external attributes\n\t\tconst attr_map = JSON.parse(syncUserDataFieldMap);\n\n\t\t_.each(attr_map, function(source, int_name) {\n\t\t\t// Source is our String to interpolate\n\t\t\tif (_.isString(source)) {\n\t\t\t\t_.each(ext_attrs, function(value, ext_name) {\n\t\t\t\t\tsource = source.replace(`%${ ext_name }%`, ext_attrs[ext_name]);\n\t\t\t\t});\n\n\t\t\t\tint_attrs[int_name] = source;\n\t\t\t\tlogger.debug(`Sourced internal attribute: ${ int_name } = ${ source }`);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Search existing user by its external service id\n\tlogger.debug(`Looking up user by id: ${ result.username }`);\n\tlet user = Meteor.users.findOne({ 'services.cas.external_id': result.username });\n\n\tif (user) {\n\t\tlogger.debug(`Using existing user for '${ result.username }' with id: ${ user._id }`);\n\t\tif (sync_enabled) {\n\t\t\tlogger.debug('Syncing user attributes');\n\t\t\t// Update name\n\t\t\tif (int_attrs.name) {\n\t\t\t\tRocketChat._setRealName(user._id, int_attrs.name);\n\t\t\t}\n\n\t\t\t// Update email\n\t\t\tif (int_attrs.email) {\n\t\t\t\tMeteor.users.update(user, { $set: { emails: [{ address: int_attrs.email, verified: true }] }});\n\t\t\t}\n\t\t}\n\t} else {\n\n\t\t// Define new user\n\t\tconst newUser = {\n\t\t\tusername: result.username,\n\t\t\tactive: true,\n\t\t\tglobalRoles: ['user'],\n\t\t\temails: [],\n\t\t\tservices: {\n\t\t\t\tcas: {\n\t\t\t\t\texternal_id: result.username,\n\t\t\t\t\tversion: cas_version,\n\t\t\t\t\tattrs: int_attrs\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Add User.name\n\t\tif (int_attrs.name) {\n\t\t\t_.extend(newUser, {\n\t\t\t\tname: int_attrs.name\n\t\t\t});\n\t\t}\n\n\t\t// Add email\n\t\tif (int_attrs.email) {\n\t\t\t_.extend(newUser, {\n\t\t\t\temails: [{ address: int_attrs.email, verified: true }]\n\t\t\t});\n\t\t}\n\n\t\t// Create the user\n\t\tlogger.debug(`User \"${ result.username }\" does not exist yet, creating it`);\n\t\tconst userId = Accounts.insertUserDoc({}, newUser);\n\n\t\t// Fetch and use it\n\t\tuser = Meteor.users.findOne(userId);\n\t\tlogger.debug(`Created new user for '${ result.username }' with id: ${ user._id }`);\n\t\t//logger.debug(JSON.stringify(user, undefined, 4));\n\n\t\tlogger.debug(`Joining user to attribute channels: ${ int_attrs.rooms }`);\n\t\tif (int_attrs.rooms) {\n\t\t\t_.each(int_attrs.rooms.split(','), function(room_name) {\n\t\t\t\tif (room_name) {\n\t\t\t\t\tlet room = RocketChat.models.Rooms.findOneByNameAndType(room_name, 'c');\n\t\t\t\t\tif (!room) {\n\t\t\t\t\t\troom = RocketChat.models.Rooms.createWithIdTypeAndName(Random.id(), 'c', room_name);\n\t\t\t\t\t}\n\t\t\t\t\tRocketChat.models.Rooms.addUsernameByName(room_name, result.username);\n\t\t\t\t\tRocketChat.models.Subscriptions.createWithRoomAndUser(room, user, {\n\t\t\t\t\t\tts: new Date(),\n\t\t\t\t\t\topen: true,\n\t\t\t\t\t\talert: true,\n\t\t\t\t\t\tunread: 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\treturn { userId: user._id };\n});\n"]}