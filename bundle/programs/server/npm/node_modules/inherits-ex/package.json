{
  "_args": [
    [
      {
        "raw": "inherits-ex@^1.1.2",
        "scope": null,
        "escapedName": "inherits-ex",
        "name": "inherits-ex",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/app/lilychat/node_modules/path.js"
    ]
  ],
  "_from": "inherits-ex@>=1.1.2 <2.0.0",
  "_id": "inherits-ex@1.2.0",
  "_inCache": true,
  "_location": "/inherits-ex",
  "_nodeVersion": "6.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/inherits-ex-1.2.0.tgz_1498808775999_0.00783447502180934"
  },
  "_npmUser": {
    "name": "riceball",
    "email": "snowyu.lee@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "inherits-ex@^1.1.2",
    "scope": null,
    "escapedName": "inherits-ex",
    "name": "inherits-ex",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/path.js",
    "/util-ex"
  ],
  "_resolved": "https://registry.npmjs.org/inherits-ex/-/inherits-ex-1.2.0.tgz",
  "_shasum": "31594e376e738198ef7540fd5759410a5d424038",
  "_shrinkwrap": null,
  "_spec": "inherits-ex@^1.1.2",
  "_where": "/app/lilychat/node_modules/path.js",
  "author": {
    "name": "Riceball LEE",
    "email": "snowyu.lee@gmail.com"
  },
  "browser": {
    "./lib/isEmptyFunction.js": "./lib/isEmptyFunction-cli.js"
  },
  "bugs": {
    "url": "https://github.com/snowyu/inherits-ex.js/issues"
  },
  "dependencies": {
    "xtend": "^4.0.0"
  },
  "description": "Browser-friendly enhanced inheritance fully compatible with standard node.js and coffee-script",
  "devDependencies": {
    "chai": "~1.10.0",
    "coffee-coverage": "^0.6.2",
    "grunt": "*",
    "grunt-contrib-clean": "*",
    "grunt-contrib-coffee": "*",
    "grunt-contrib-copy": "*",
    "grunt-contrib-jshint": "*",
    "grunt-contrib-uglify": "*",
    "grunt-contrib-watch": "*",
    "grunt-mocha-test": "*",
    "grunt-newer": "*",
    "grunt-release": "*",
    "grunt-saucelabs": "*",
    "istanbul": "^0.3.17",
    "mocha": "~2.1.0",
    "pre-commit": "1.1.3",
    "sinon": "~1.12.2",
    "sinon-chai": "~2.6.0",
    "source-map-support": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "31594e376e738198ef7540fd5759410a5d424038",
    "tarball": "https://registry.npmjs.org/inherits-ex/-/inherits-ex-1.2.0.tgz"
  },
  "files": [
    "README.md",
    "LICENSE-MIT",
    "*.js",
    "*.coffee",
    "test",
    "src",
    "lib"
  ],
  "gitHead": "016ca118f6c60955124a4994375755c8c3aeb1a7",
  "homepage": "https://github.com/snowyu/inherits-ex.js",
  "keywords": [
    "inheritance",
    "class",
    "klass",
    "oop",
    "object-oriented",
    "mixin",
    "inherits",
    "browser",
    "coffee",
    "coffeescript",
    "coffee-script",
    "browserify"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "riceball",
      "email": "snowyu.lee@gmail.com"
    }
  ],
  "name": "inherits-ex",
  "optionalDependencies": {},
  "pre-commit": [
    "test"
  ],
  "readme": "### Inherits-Ex [![npm](https://img.shields.io/npm/v/inherits-ex.svg)](https://npmjs.org/package/inherits-ex)\n\n[![Join the chat at https://gitter.im/snowyu/inherits-ex.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/snowyu/inherits-ex.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https://img.shields.io/travis/snowyu/inherits-ex.js/master.png)](http://travis-ci.org/snowyu/inherits-ex.js)\n[![Code Climate](https://codeclimate.com/github/snowyu/inherits-ex.js/badges/gpa.svg)](https://codeclimate.com/github/snowyu/inherits-ex.js)\n[![Test Coverage](https://codeclimate.com/github/snowyu/inherits-ex.js/badges/coverage.svg)](https://codeclimate.com/github/snowyu/inherits-ex.js/coverage)\n[![downloads](https://img.shields.io/npm/dm/inherits-ex.svg)](https://npmjs.org/package/inherits-ex)\n[![license](https://img.shields.io/npm/l/inherits-ex.svg)](https://npmjs.org/package/inherits-ex)\n\nBrowser-friendly enhanced inheritance fully compatible with standard node.js\n[inherits](http://nodejs.org/api/util.html#util_util_inherits_constructor_superconstructor)\nand coffee-script.\n\nThis package modifies and enhances the standard `inherits` from node.js\n`util` module in node environment. It also has a shim for old\nbrowsers with no `Object.create` support.\n\nDiffers from the standard implementation is:\n\n+ coffee-script supports\n+ static inheritance\n+ multi-inheritances(inheritance chain) supports\n+ inherits at anytime.\n  * you can not declare method/property before inherits in the standard way for it will replace the prototype object.\n+ duplication inheritance check\n+ more helper functions\n\nThe standard `inherits` implementation is in `inherits-ex/lib/inheritsDirectly`,\nof casue it's the coffee-script supports and browser-friendly.\n\n# API\n\n## inherits(ctor, superCtor|[superCtor, ...])\n\n```js\n  var inherits = require('inherits-ex/lib/inherits')\n```\n\nThe enhanced `inherits` implementation.\n\n+ coffee-script supports\n+ multi-inheritances(inheritance chain) supports\n+ inherits at anytime.\n  * you can not declare method/property before inherits in the standard way for it will replace the prototype object.\n+ duplication inheritance check\n+ add the `super_` property(the super ctor) to the ctor.\n+ add the `__super__` property(the super's prototype) to the ctor for the coffeeScirpt `super` keyword.\n+ add the `Class` property(point to the current class) to the object's prototype.\n  * just be care: the ctor may not be the current class.\n\n### usage\n\n```coffee\n\nassert = require('assert')\ninherits = require('inherits-ex/lib/inherits')\nisInheritedFrom = require('inherits-ex/lib/isInheritedFrom')\nlog = console.log.bind console\n\nclass Root\n  m: -> log('root')\n\nclass A\n  inherits A, Root\n  m: ->\n    log('A')\n    super\n\nclass B\n  inherits B, Root\n  m: ->\n    log('B')\n    super\n\nclass MyClass\n  # MyClass -> A -> Root\n  inherits MyClass, B\n  # MyClass -> A -> B -> Root\n  inherits MyClass, A\n\nassert.notOk inherits(A, Root) #duplication inheritances prohibited.\nassert.ok isInheritedFrom(MyClass, A)\nassert.ok isInheritedFrom(MyClass, Root)\nassert.ok isInheritedFrom(MyClass, B)\n\n```\n\nand the following codes do same thing:\n\n```coffee\n\nclass Root\n  @static: 1\n  m: -> log('root')\n\nclass A\n  m: ->\n    log('A')\n    super\n\nclass B\n  m: ->\n    log('B')\n    super\n\nclass MyClass\n  # create inheritances chain:\n  # MyClass -> A -> B -> Root\n  inherits MyClass, [A, B, Root]\n\nassert.ok isInheritedFrom(MyClass, A)\nassert.ok isInheritedFrom(MyClass, Root)\nassert.ok isInheritedFrom(MyClass, B)\nassert.equal MyClass.static, 1\n```\n\n## inheritsDirectly(ctor, superCtor)\n\n```js\n  var inheritsDirectly = require('inherits-ex/lib/inheritsDirectly')\n```\n\nThe standard `inherits` implementation in node.js environment with coffee-script supports\nand browser-friendly.\n\n## isInheritedFrom(ctor, superCtor|superCtorName, raiseError=false)\n\n```js\n  var isInheritedFrom = require('inherits-ex/lib/isInheritedFrom')\n```\n\nreturn the superCtor's son if ctor is inherited from superCtor.\nelse return false.\n\nit will use the ctor.name to check whether inherited from superCtorName.\n\n## mixin(ctor, superCtor|[superCtor, ...])\n\n```js\n  var mixin = require('inherits-ex/lib/mixin')\n```\n\nmixin all superCtors to ctor.\n\n+ duplication mixin or inheritance check\n+ the methods in mixins could super() across mixin classes.\n\n``` coffee\n\nmCallOrder = []\nclass Root\nclass C\n  m: ->\n    mCallOrder.push 'C'\n    super\nclass A\n  m: ->\n    mCallOrder.push 'A'\nclass A1\n  m: ->\n    mCallOrder.push 'A1'\n    super\nclass B\n  inherits B, Root\nclass B1\n  m: ->\n    mCallOrder.push 'B1'\n    super\n\ninherits(C, Root).should.be.equal true, \"C should inherits from Root\"\ninherits(B1, B).should.be.equal true, \"B1 should inherits from B\"\ninherits(A1, A).should.be.equal true, \"A1 should inherits from A\"\nmixin(B1, [A1, C]).should.be.equal true, 'mixin'\no = new B1()\no.m(\"a\", 12) # call chain: B1::m -> C::m -> A1::m -> A::m\nA::m.should.have.been.calledOnce\nA::m.should.have.been.calledWith \"a\", 12\nmCallOrder.should.be.deep.equal ['B1', 'C', 'A1', 'A']\n```\n\nThe inheritance chain: `B1 -> MixinCtor_ -> B -> Root`\nAll mixins will be added to `MixinCtor_`.\n\n## isMixinedFrom(ctor, superCtor|superCtorName)\n\n```js\n  var isMixinedFrom = require('inherits-ex/lib/isMixinedFrom')\n```\n\n## createObject(ctor, args...)\n\nThe helper function to create the object dynamically.\n\n```js\n  var createObject = require('inherits-ex/lib/createObject')\n```\n\n### usage\n\n```coffee\n\nclass RefObject\n  constructor: -> @initialize.apply @, arguments\nclass MyObject\n  inherits MyObject, RefObject\n  initialize: (@a,@b)->\n    super\n\nobj = createObject(MyObject, \"a\", \"b\")\n#obj = new MyObject(\"a\", \"b\") # it will have no property a and b.\nassert.equal obj.a \"a\"\nassert.equal obj.b \"b\"\n\n\n```\n## createObjectWith(ctor, [args...])\n\nThe helper function to create the object dynamically.\n\n```js\n  var createObjectWith = require('inherits-ex/lib/createObjectWith')\n```\n\n## createFunction(name, [args,] body[, scope[, values]])\n\n* arguments:\n  * `name` *(String)*: the function name\n  * `args` *(Array)*: the function argument list. it's optional.\n  * `body` *(String)*: the function body.\n  * ``scope` *(Object|Array)*: the optional function scope.\n    * ignore the `values`  if it's an object.\n    * the `value` is requierd if it's an array. It's the key's name list\n  * `value` *(Array)*: the optional function scope's value list. only for the `scope` is the Array.\n\nThe helper function to create the function dynamically.\n\n```js\n  var createFunction = require('inherits-ex/lib/createFunction')\n```\n\n### usage\n\n```coffee\n\nclass RefObject\n  constructor: -> @initialize.apply @, arguments\nclass MyObject\n  inherits MyObject, RefObject\n  initialize: (@a,@b)->\n    super\n\nobj = createObject(MyObject, \"a\", \"b\")\n#obj = new MyObject(\"a\", \"b\") # it will have no property a and b.\nassert.equal obj.a \"a\"\nassert.equal obj.b \"b\"\n\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/snowyu/inherits-ex.js.git"
  },
  "scripts": {
    "test": "grunt test",
    "test-cov": "istanbul cover node_modules/.bin/_mocha --report lcovonly -- --reporter dot"
  },
  "version": "1.2.0"
}
