{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:ldap/server/ldap.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/sync.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/loginHandler.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/testConnection.js","meteor://ðŸ’»app/packages/rocketchat:ldap/server/syncUsers.js"],"names":["ldapjs","LDAPJS","logger","Logger","sections","connection","bind","search","auth","LDAP","self","connected","options","host","RocketChat","settings","get","port","connect_timeout","idle_timeout","encryption","ca_cert","reject_unauthorized","domain_base","use_custom_domain_search","custom_domain_search","domain_search_user","domain_search_password","domain_search_filter","domain_search_user_id","domain_search_object_class","domain_search_object_category","group_filter_enabled","group_filter_object_class","group_filter_group_id_attribute","group_filter_group_member_attribute","group_filter_group_member_format","group_filter_group_name","connectSync","Meteor","wrapAsync","connectAsync","searchAllSync","searchAllAsync","callback","info","replied","connectionOptions","url","timeout","connectTimeout","idleTimeout","reconnect","tlsOptions","rejectUnauthorized","chainLines","split","cert","ca","forEach","line","push","match","join","debug","client","createClient","bindSync","on","error","starttls","response","setTimeout","Error","getDomainBindSearch","JSON","parse","filter","userDN","password","length","item","bindIfNecessary","domainBinded","domain_search","searchUsersSync","username","searchOptions","replace","scope","getUserByIdSync","id","attribute","Unique_Identifier_Field","filters","EqualityFilter","value","Buffer","OrFilter","toString","result","Array","isArray","getUserByUsernameSync","isUserInGroup","res","entries","jsonEntries","entry","json","stringify","authSync","dn","disconnect","unbind","slug","text","slugify","getLdapUsername","ldapUser","usernameField","indexOf","field","object","getLdapUserUniqueID","LDAP_Domain_Search_User_ID","concat","find","_","isEmpty","raw","getDataToSyncUserData","user","syncUserData","syncUserDataFieldMap","trim","fieldMap","userData","emailList","map","userField","ldapField","hasOwnProperty","isObject","address","verified","name","emails","uniqueId","services","ldap","idAttribute","size","email","_id","_setRealName","users","update","$set","findOne","_setUsername","avatar","thumbnailPhoto","jpegPhoto","rs","RocketChatFile","bufferToStream","RocketChatFileAvatarInstance","deleteFile","encodeURIComponent","ws","createWriteStream","bindEnvironment","models","Users","setAvatarOrigin","Notifications","notifyLogged","pipe","addLdapUser","userObject","mail","Accounts","createUser","userId","sync","findLDAPUsers","ldapUsers","userQuery","interval","key","clearInterval","clearTimeout","setInterval","fallbackDefaultAccountSystem","loginRequest","digest","SHA256","algorithm","_runLoginHandlers","registerLoginHandler","ldapOptions","undefined","ldapPass","stampedToken","_generateStampedLoginToken","$push","_hashStampedToken","setPassword","logout","token","startup","addGroup","enableQuery","enableTLSQuery","$in","customBindSearchEnabledQuery","customBindSearchDisabledQuery","syncDataQuery","groupFilterQuery","add","type","values","i18nLabel","multiline","actionText","methods","ldap_test_connection","method","authz","hasRole","console","log","message","params","ldap_sync_users"],"mappings":"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","file":"/packages/rocketchat_ldap.js","sourcesContent":["/* globals LDAP:true, LDAPJS */\n/* exported LDAP */\n\nconst ldapjs = LDAPJS;\n\nconst logger = new Logger('LDAP', {\n\tsections: {\n\t\tconnection: 'Connection',\n\t\tbind: 'Bind',\n\t\tsearch: 'Search',\n\t\tauth: 'Auth'\n\t}\n});\n\nLDAP = class LDAP {\n\tconstructor() {\n\t\tconst self = this;\n\n\t\tself.ldapjs = ldapjs;\n\n\t\tself.connected = false;\n\n\t\tself.options = {\n\t\t\thost: RocketChat.settings.get('LDAP_Host'),\n\t\t\tport: RocketChat.settings.get('LDAP_Port'),\n\t\t\tconnect_timeout: RocketChat.settings.get('LDAP_Connect_Timeout'),\n\t\t\tidle_timeout: RocketChat.settings.get('LDAP_Idle_Timeout'),\n\t\t\tencryption: RocketChat.settings.get('LDAP_Encryption'),\n\t\t\tca_cert: RocketChat.settings.get('LDAP_CA_Cert'),\n\t\t\treject_unauthorized: RocketChat.settings.get('LDAP_Reject_Unauthorized') || false,\n\t\t\tdomain_base: RocketChat.settings.get('LDAP_Domain_Base'),\n\t\t\tuse_custom_domain_search: RocketChat.settings.get('LDAP_Use_Custom_Domain_Search'),\n\t\t\tcustom_domain_search: RocketChat.settings.get('LDAP_Custom_Domain_Search'),\n\t\t\tdomain_search_user: RocketChat.settings.get('LDAP_Domain_Search_User'),\n\t\t\tdomain_search_password: RocketChat.settings.get('LDAP_Domain_Search_Password'),\n\t\t\tdomain_search_filter: RocketChat.settings.get('LDAP_Domain_Search_Filter'),\n\t\t\tdomain_search_user_id: RocketChat.settings.get('LDAP_Domain_Search_User_ID'),\n\t\t\tdomain_search_object_class: RocketChat.settings.get('LDAP_Domain_Search_Object_Class'),\n\t\t\tdomain_search_object_category: RocketChat.settings.get('LDAP_Domain_Search_Object_Category'),\n\t\t\tgroup_filter_enabled: RocketChat.settings.get('LDAP_Group_Filter_Enable'),\n\t\t\tgroup_filter_object_class: RocketChat.settings.get('LDAP_Group_Filter_ObjectClass'),\n\t\t\tgroup_filter_group_id_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Id_Attribute'),\n\t\t\tgroup_filter_group_member_attribute: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Attribute'),\n\t\t\tgroup_filter_group_member_format: RocketChat.settings.get('LDAP_Group_Filter_Group_Member_Format'),\n\t\t\tgroup_filter_group_name: RocketChat.settings.get('LDAP_Group_Filter_Group_Name')\n\t\t};\n\n\t\tself.connectSync = Meteor.wrapAsync(self.connectAsync, self);\n\t\tself.searchAllSync = Meteor.wrapAsync(self.searchAllAsync, self);\n\t}\n\n\tconnectAsync(callback) {\n\t\tconst self = this;\n\n\t\tlogger.connection.info('Init setup');\n\n\t\tlet replied = false;\n\n\t\tconst connectionOptions = {\n\t\t\turl: `${ self.options.host }:${ self.options.port }`,\n\t\t\ttimeout: 1000 * 60 * 10,\n\t\t\tconnectTimeout: self.options.connect_timeout,\n\t\t\tidleTimeout: self.options.idle_timeout,\n\t\t\treconnect: false\n\t\t};\n\n\t\tconst tlsOptions = {\n\t\t\trejectUnauthorized: self.options.reject_unauthorized\n\t\t};\n\n\t\tif (self.options.ca_cert && self.options.ca_cert !== '') {\n\t\t\t// Split CA cert into array of strings\n\t\t\tconst chainLines = RocketChat.settings.get('LDAP_CA_Cert').split('\\n');\n\t\t\tlet cert = [];\n\t\t\tconst ca = [];\n\t\t\tchainLines.forEach(function(line) {\n\t\t\t\tcert.push(line);\n\t\t\t\tif (line.match(/-END CERTIFICATE-/)) {\n\t\t\t\t\tca.push(cert.join('\\n'));\n\t\t\t\t\tcert = [];\n\t\t\t\t}\n\t\t\t});\n\t\t\ttlsOptions.ca = ca;\n\t\t}\n\n\t\tif (self.options.encryption === 'ssl') {\n\t\t\tconnectionOptions.url = `ldaps://${ connectionOptions.url }`;\n\t\t\tconnectionOptions.tlsOptions = tlsOptions;\n\t\t} else {\n\t\t\tconnectionOptions.url = `ldap://${ connectionOptions.url }`;\n\t\t}\n\n\t\tlogger.connection.info('Connecting', connectionOptions.url);\n\t\tlogger.connection.debug('connectionOptions', connectionOptions);\n\n\t\tself.client = ldapjs.createClient(connectionOptions);\n\n\t\tself.bindSync = Meteor.wrapAsync(self.client.bind, self.client);\n\n\t\tself.client.on('error', function(error) {\n\t\t\tlogger.connection.error('connection', error);\n\t\t\tif (replied === false) {\n\t\t\t\treplied = true;\n\t\t\t\tcallback(error, null);\n\t\t\t}\n\t\t});\n\n\t\tif (self.options.encryption === 'tls') {\n\n\t\t\t// Set host parameter for tls.connect which is used by ldapjs starttls. This shouldn't be needed in newer nodejs versions (e.g v5.6.0).\n\t\t\t// https://github.com/RocketChat/Rocket.Chat/issues/2035\n\t\t\t// https://github.com/mcavage/node-ldapjs/issues/349\n\t\t\ttlsOptions.host = self.options.host;\n\n\t\t\tlogger.connection.info('Starting TLS');\n\t\t\tlogger.connection.debug('tlsOptions', tlsOptions);\n\n\t\t\tself.client.starttls(tlsOptions, null, function(error, response) {\n\t\t\t\tif (error) {\n\t\t\t\t\tlogger.connection.error('TLS connection', error);\n\t\t\t\t\tif (replied === false) {\n\t\t\t\t\t\treplied = true;\n\t\t\t\t\t\tcallback(error, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlogger.connection.info('TLS connected');\n\t\t\t\tself.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tself.client.on('connect', function(response) {\n\t\t\t\tlogger.connection.info('LDAP connected');\n\t\t\t\tself.connected = true;\n\t\t\t\tif (replied === false) {\n\t\t\t\t\treplied = true;\n\t\t\t\t\tcallback(null, response);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tsetTimeout(function() {\n\t\t\tif (replied === false) {\n\t\t\t\tlogger.connection.error('connection time out', connectionOptions.timeout);\n\t\t\t\treplied = true;\n\t\t\t\tcallback(new Error('Timeout'));\n\t\t\t}\n\t\t}, connectionOptions.timeout);\n\t}\n\n\tgetDomainBindSearch() {\n\t\tconst self = this;\n\n\t\tif (self.options.use_custom_domain_search === true) {\n\t\t\tlet custom_domain_search;\n\t\t\ttry {\n\t\t\t\tcustom_domain_search = JSON.parse(self.options.custom_domain_search);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error('Invalid Custom Domain Search JSON');\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tfilter: custom_domain_search.filter,\n\t\t\t\tdomain_search_user: custom_domain_search.userDN || '',\n\t\t\t\tdomain_search_password: custom_domain_search.password || ''\n\t\t\t};\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (self.options.domain_search_object_category !== '') {\n\t\t\tfilter.push(`(objectCategory=${ self.options.domain_search_object_category })`);\n\t\t}\n\n\t\tif (self.options.domain_search_object_class !== '') {\n\t\t\tfilter.push(`(objectclass=${ self.options.domain_search_object_class })`);\n\t\t}\n\n\t\tif (self.options.domain_search_filter !== '') {\n\t\t\tfilter.push(`(${ self.options.domain_search_filter })`);\n\t\t}\n\n\t\tconst domain_search_user_id = self.options.domain_search_user_id.split(',');\n\t\tif (domain_search_user_id.length === 1) {\n\t\t\tfilter.push(`(${ domain_search_user_id[0] }=#{username})`);\n\t\t} else {\n\t\t\tfilter.push('(|');\n\t\t\tdomain_search_user_id.forEach((item) => {\n\t\t\t\tfilter.push(`(${ item }=#{username})`);\n\t\t\t});\n\t\t\tfilter.push(')');\n\t\t}\n\n\t\tfilter.push(')');\n\n\t\treturn {\n\t\t\tfilter: filter.join(''),\n\t\t\tdomain_search_user: self.options.domain_search_user || '',\n\t\t\tdomain_search_password: self.options.domain_search_password || ''\n\t\t};\n\t}\n\n\tbindIfNecessary() {\n\t\tconst self = this;\n\n\t\tif (self.domainBinded === true) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domain_search = self.getDomainBindSearch();\n\n\t\tif (domain_search.domain_search_user !== '' && domain_search.domain_search_password !== '') {\n\t\t\tlogger.bind.info('Binding admin user', domain_search.domain_search_user);\n\t\t\tself.bindSync(domain_search.domain_search_user, domain_search.domain_search_password);\n\t\t\tself.domainBinded = true;\n\t\t}\n\t}\n\n\tsearchUsersSync(username) {\n\t\tconst self = this;\n\n\t\tself.bindIfNecessary();\n\n\t\tconst domain_search = self.getDomainBindSearch();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: domain_search.filter.replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('domain_base', self.options.domain_base);\n\n\t\treturn self.searchAllSync(self.options.domain_base, searchOptions);\n\t}\n\n\tgetUserByIdSync(id, attribute) {\n\t\tconst self = this;\n\n\t\tself.bindIfNecessary();\n\n\t\tconst Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field').split(',');\n\n\t\tlet filter;\n\n\t\tif (attribute) {\n\t\t\tfilter = new self.ldapjs.filters.EqualityFilter({\n\t\t\t\tattribute,\n\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t});\n\t\t} else {\n\t\t\tconst filters = [];\n\t\t\tUnique_Identifier_Field.forEach(function(item) {\n\t\t\t\tfilters.push(new self.ldapjs.filters.EqualityFilter({\n\t\t\t\t\tattribute: item,\n\t\t\t\t\tvalue: new Buffer(id, 'hex')\n\t\t\t\t}));\n\t\t\t});\n\n\t\t\tfilter = new self.ldapjs.filters.OrFilter({filters});\n\t\t}\n\n\t\tconst searchOptions = {\n\t\t\tfilter,\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching by id', id);\n\t\tlogger.search.debug('search filter', searchOptions.filter.toString());\n\t\tlogger.search.debug('domain_base', self.options.domain_base);\n\n\t\tconst result = self.searchAllSync(self.options.domain_base, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by id', id, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tgetUserByUsernameSync(username) {\n\t\tconst self = this;\n\n\t\tself.bindIfNecessary();\n\n\t\tconst domain_search = self.getDomainBindSearch();\n\n\t\tconst searchOptions = {\n\t\t\tfilter: domain_search.filter.replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.info('Searching user', username);\n\t\tlogger.search.debug('searchOptions', searchOptions);\n\t\tlogger.search.debug('domain_base', self.options.domain_base);\n\n\t\tconst result = self.searchAllSync(self.options.domain_base, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (result.length > 1) {\n\t\t\tlogger.search.error('Search by username', username, 'returned', result.length, 'records');\n\t\t}\n\n\t\treturn result[0];\n\t}\n\n\tisUserInGroup(username) {\n\t\tconst self = this;\n\n\t\tif (!self.options.group_filter_enabled) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst filter = ['(&'];\n\n\t\tif (self.options.group_filter_object_class !== '') {\n\t\t\tfilter.push(`(objectclass=${ self.options.group_filter_object_class })`);\n\t\t}\n\n\t\tif (self.options.group_filter_group_member_attribute !== '') {\n\t\t\tfilter.push(`(${ self.options.group_filter_group_member_attribute }=${ self.options.group_filter_group_member_format })`);\n\t\t}\n\n\t\tif (self.options.group_filter_group_id_attribute !== '') {\n\t\t\tfilter.push(`(${ self.options.group_filter_group_id_attribute }=${ self.options.group_filter_group_name })`);\n\t\t}\n\t\tfilter.push(')');\n\n\t\tconst searchOptions = {\n\t\t\tfilter: filter.join('').replace(/#{username}/g, username),\n\t\t\tscope: 'sub'\n\t\t};\n\n\t\tlogger.search.debug('Group filter LDAP:', searchOptions.filter);\n\n\t\tconst result = self.searchAllSync(self.options.domain_base, searchOptions);\n\n\t\tif (!Array.isArray(result) || result.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tsearchAllAsync(domain_base, options, callback) {\n\t\tconst self = this;\n\n\t\tself.client.search(domain_base, options, function(error, res) {\n\t\t\tif (error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tres.on('error', function(error) {\n\t\t\t\tlogger.search.error(error);\n\t\t\t\tcallback(error);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\t\tconst entries = [];\n\t\t\tconst jsonEntries = [];\n\n\t\t\tres.on('searchEntry', function(entry) {\n\t\t\t\tentries.push(entry);\n\t\t\t\tjsonEntries.push(entry.json);\n\t\t\t});\n\n\t\t\tres.on('end', function(/*result*/) {\n\t\t\t\tlogger.search.info('Search result count', entries.length);\n\t\t\t\tlogger.search.debug('Search result', JSON.stringify(jsonEntries, null, 2));\n\t\t\t\tcallback(null, entries);\n\t\t\t});\n\t\t});\n\t}\n\n\tauthSync(dn, password) {\n\t\tconst self = this;\n\n\t\tlogger.auth.info('Authenticating', dn);\n\n\t\ttry {\n\t\t\tself.bindSync(dn, password);\n\t\t\tlogger.auth.info('Authenticated', dn);\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\tlogger.auth.info('Not authenticated', dn);\n\t\t\tlogger.auth.debug('error', error);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tdisconnect() {\n\t\tconst self = this;\n\n\t\tself.connected = false;\n\t\tlogger.connection.info('Disconecting');\n\t\tself.client.unbind();\n\t}\n};\n","/* globals slug:true, slugify, LDAP, getLdapUsername:true, getLdapUserUniqueID:true, getDataToSyncUserData:true, syncUserData:true, sync:true, addLdapUser:true  */\n\nconst logger = new Logger('LDAPSync', {});\n\nslug = function slug(text) {\n\tif (RocketChat.settings.get('UTF8_Names_Slugify') !== true) {\n\t\treturn text;\n\t}\n\ttext = slugify(text, '.');\n\treturn text.replace(/[^0-9a-z-_.]/g, '');\n};\n\n\ngetLdapUsername = function getLdapUsername(ldapUser) {\n\tconst usernameField = RocketChat.settings.get('LDAP_Username_Field');\n\n\tif (usernameField.indexOf('#{') > -1) {\n\t\treturn usernameField.replace(/#{(.+?)}/g, function(match, field) {\n\t\t\treturn ldapUser.object[field];\n\t\t});\n\t}\n\n\treturn ldapUser.object[usernameField];\n};\n\n\ngetLdapUserUniqueID = function getLdapUserUniqueID(ldapUser) {\n\tlet Unique_Identifier_Field = RocketChat.settings.get('LDAP_Unique_Identifier_Field');\n\n\tif (Unique_Identifier_Field !== '') {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tUnique_Identifier_Field = [];\n\t}\n\n\tlet LDAP_Domain_Search_User_ID = RocketChat.settings.get('LDAP_Domain_Search_User_ID');\n\n\tif (LDAP_Domain_Search_User_ID !== '') {\n\t\tLDAP_Domain_Search_User_ID = LDAP_Domain_Search_User_ID.replace(/\\s/g, '').split(',');\n\t} else {\n\t\tLDAP_Domain_Search_User_ID = [];\n\t}\n\n\tUnique_Identifier_Field = Unique_Identifier_Field.concat(LDAP_Domain_Search_User_ID);\n\n\tif (Unique_Identifier_Field.length > 0) {\n\t\tUnique_Identifier_Field = Unique_Identifier_Field.find((field) => {\n\t\t\treturn !_.isEmpty(ldapUser.object[field]);\n\t\t});\n\t\tif (Unique_Identifier_Field) {\n\t\t\tUnique_Identifier_Field = {\n\t\t\t\tattribute: Unique_Identifier_Field,\n\t\t\t\tvalue: ldapUser.raw[Unique_Identifier_Field].toString('hex')\n\t\t\t};\n\t\t}\n\t\treturn Unique_Identifier_Field;\n\t}\n};\n\n\ngetDataToSyncUserData = function getDataToSyncUserData(ldapUser, user) {\n\tconst syncUserData = RocketChat.settings.get('LDAP_Sync_User_Data');\n\tconst syncUserDataFieldMap = RocketChat.settings.get('LDAP_Sync_User_Data_FieldMap').trim();\n\n\tif (syncUserData && syncUserDataFieldMap) {\n\t\tconst fieldMap = JSON.parse(syncUserDataFieldMap);\n\t\tconst userData = {};\n\n\t\tconst emailList = [];\n\t\t_.map(fieldMap, function(userField, ldapField) {\n\t\t\tif (!ldapUser.object.hasOwnProperty(ldapField)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tswitch (userField) {\n\t\t\t\tcase 'email':\n\t\t\t\t\tif (_.isObject(ldapUser.object[ldapField])) {\n\t\t\t\t\t\t_.map(ldapUser.object[ldapField], function(item) {\n\t\t\t\t\t\t\temailList.push({ address: item, verified: true });\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\temailList.push({ address: ldapUser.object[ldapField], verified: true });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'name':\n\t\t\t\t\tif (user.name !== ldapUser.object[ldapField]) {\n\t\t\t\t\t\tuserData.name = ldapUser.object[ldapField];\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\tif (emailList.length > 0) {\n\t\t\tif (JSON.stringify(user.emails) !== JSON.stringify(emailList)) {\n\t\t\t\tuserData.emails = emailList;\n\t\t\t}\n\t\t}\n\n\t\tconst uniqueId = getLdapUserUniqueID(ldapUser);\n\n\t\tif (uniqueId && (!user.services || !user.services.ldap || user.services.ldap.id !== uniqueId.value || user.services.ldap.idAttribute !== uniqueId.attribute)) {\n\t\t\tuserData['services.ldap.id'] = uniqueId.value;\n\t\t\tuserData['services.ldap.idAttribute'] = uniqueId.attribute;\n\t\t}\n\n\t\tif (user.ldap !== true) {\n\t\t\tuserData.ldap = true;\n\t\t}\n\n\t\tif (_.size(userData)) {\n\t\t\treturn userData;\n\t\t}\n\t}\n};\n\n\nsyncUserData = function syncUserData(user, ldapUser) {\n\tlogger.info('Syncing user data');\n\tlogger.debug('user', {'email': user.email, '_id': user._id});\n\tlogger.debug('ldapUser', ldapUser);\n\n\tconst userData = getDataToSyncUserData(ldapUser, user);\n\tif (user && user._id && userData) {\n\t\tlogger.debug('setting', JSON.stringify(userData, null, 2));\n\t\tif (userData.name) {\n\t\t\tRocketChat._setRealName(user._id, userData.name);\n\t\t\tdelete userData.name;\n\t\t}\n\t\tMeteor.users.update(user._id, { $set: userData });\n\t\tuser = Meteor.users.findOne({_id: user._id});\n\t}\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tconst username = slug(getLdapUsername(ldapUser));\n\t\tif (user && user._id && username !== user.username) {\n\t\t\tlogger.info('Syncing user username', user.username, '->', username);\n\t\t\tRocketChat._setUsername(user._id, username);\n\t\t}\n\t}\n\n\tif (user && user._id && RocketChat.settings.get('LDAP_Sync_User_Avatar') === true) {\n\t\tconst avatar = ldapUser.raw.thumbnailPhoto || ldapUser.raw.jpegPhoto;\n\t\tif (avatar) {\n\t\t\tlogger.info('Syncing user avatar');\n\t\t\tconst rs = RocketChatFile.bufferToStream(avatar);\n\t\t\tRocketChatFileAvatarInstance.deleteFile(encodeURIComponent(`${ user.username }.jpg`));\n\t\t\tconst ws = RocketChatFileAvatarInstance.createWriteStream(encodeURIComponent(`${ user.username }.jpg`), 'image/jpeg');\n\t\t\tws.on('end', Meteor.bindEnvironment(function() {\n\t\t\t\tMeteor.setTimeout(function() {\n\t\t\t\t\tRocketChat.models.Users.setAvatarOrigin(user._id, 'ldap');\n\t\t\t\t\tRocketChat.Notifications.notifyLogged('updateAvatar', {username: user.username});\n\t\t\t\t}, 500);\n\t\t\t}));\n\t\t\trs.pipe(ws);\n\t\t}\n\t}\n};\n\naddLdapUser = function addLdapUser(ldapUser, username, password) {\n\tconst userObject = {\n\t\tusername\n\t};\n\n\tconst userData = getDataToSyncUserData(ldapUser, {});\n\n\tif (userData && userData.emails) {\n\t\tuserObject.email = userData.emails[0].address;\n\t} else if (ldapUser.object.mail && ldapUser.object.mail.indexOf('@') > -1) {\n\t\tuserObject.email = ldapUser.object.mail;\n\t} else if (RocketChat.settings.get('LDAP_Default_Domain') !== '') {\n\t\tuserObject.email = `${ username }@${ RocketChat.settings.get('LDAP_Default_Domain') }`;\n\t} else {\n\t\tconst error = new Meteor.Error('LDAP-login-error', 'LDAP Authentication succeded, there is no email to create an account. Have you tried setting your Default Domain in LDAP Settings?');\n\t\tlogger.error(error);\n\t\tthrow error;\n\t}\n\n\tlogger.debug('New user data', userObject);\n\n\tif (password) {\n\t\tuserObject.password = password;\n\t}\n\n\ttry {\n\t\tuserObject._id = Accounts.createUser(userObject);\n\t} catch (error) {\n\t\tlogger.error('Error creating user', error);\n\t\tthrow error;\n\t}\n\n\tsyncUserData(userObject, ldapUser);\n\n\treturn {\n\t\tuserId: userObject._id\n\t};\n};\n\nsync = function sync() {\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn;\n\t}\n\n\tconst ldap = new LDAP();\n\n\ttry {\n\t\tldap.connectSync();\n\n\t\tconst users = RocketChat.models.Users.findLDAPUsers();\n\n\t\tif (RocketChat.settings.get('LDAP_Import_Users') === true && RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\t\tconst ldapUsers = ldap.searchUsersSync('*');\n\t\t\tldapUsers.forEach(function(ldapUser) {\n\t\t\t\tconst username = slug(getLdapUsername(ldapUser));\n\t\t\t\t// Look to see if user already exists\n\t\t\t\tconst userQuery = {\n\t\t\t\t\tusername\n\t\t\t\t};\n\n\t\t\t\tlogger.debug('userQuery', userQuery);\n\n\t\t\t\tconst user = Meteor.users.findOne(userQuery);\n\n\t\t\t\tif (!user) {\n\t\t\t\t\taddLdapUser(ldapUser, username);\n\t\t\t\t} else if (user.ldap !== true && RocketChat.settings.get('LDAP_Merge_Existing_Users') === true) {\n\t\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tusers.forEach(function(user) {\n\t\t\tlet ldapUser;\n\n\t\t\tif (user.services && user.services.ldap && user.services.ldap.id) {\n\t\t\t\tldapUser = ldap.getUserByIdSync(user.services.ldap.id, user.services.ldap.idAttribute);\n\t\t\t} else {\n\t\t\t\tldapUser = ldap.getUserByUsernameSync(user.username);\n\t\t\t}\n\n\t\t\tif (ldapUser) {\n\t\t\t\tsyncUserData(user, ldapUser);\n\t\t\t} else {\n\t\t\t\tlogger.info('Can\\'t sync user', user.username);\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tlogger.error(error);\n\t\treturn error;\n\t}\n\n\tldap.disconnect();\n\treturn true;\n};\n\nlet interval;\nlet timeout;\n\nRocketChat.settings.get('LDAP_Sync_User_Data', function(key, value) {\n\tMeteor.clearInterval(interval);\n\tMeteor.clearTimeout(timeout);\n\n\tif (value === true) {\n\t\tlogger.info('Enabling LDAP user sync');\n\t\tinterval = Meteor.setInterval(sync, 1000 * 60 * 60);\n\t\ttimeout = Meteor.setTimeout(function() {\n\t\t\tsync();\n\t\t}, 1000 * 60 * 10);\n\t} else {\n\t\tlogger.info('Disabling LDAP user sync');\n\t}\n});\n","/* globals LDAP, slug, getLdapUsername, getLdapUserUniqueID, syncUserData, addLdapUser */\n/* eslint new-cap: [2, {\"capIsNewExceptions\": [\"SHA256\"]}] */\n\nconst logger = new Logger('LDAPHandler', {});\n\nfunction fallbackDefaultAccountSystem(bind, username, password) {\n\tif (typeof username === 'string') {\n\t\tif (username.indexOf('@') === -1) {\n\t\t\tusername = {username};\n\t\t} else {\n\t\t\tusername = {email: username};\n\t\t}\n\t}\n\n\tlogger.info('Fallback to default account system', username);\n\n\tconst loginRequest = {\n\t\tuser: username,\n\t\tpassword: {\n\t\t\tdigest: SHA256(password),\n\t\t\talgorithm: 'sha-256'\n\t\t}\n\t};\n\n\treturn Accounts._runLoginHandlers(bind, loginRequest);\n}\n\nAccounts.registerLoginHandler('ldap', function(loginRequest) {\n\tif (!loginRequest.ldap || !loginRequest.ldapOptions) {\n\t\treturn undefined;\n\t}\n\n\tlogger.info('Init LDAP login', loginRequest.username);\n\n\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\treturn fallbackDefaultAccountSystem(this, loginRequest.username, loginRequest.ldapPass);\n\t}\n\n\tconst self = this;\n\tconst ldap = new LDAP();\n\tlet ldapUser;\n\n\ttry {\n\t\tldap.connectSync();\n\t\tconst users = ldap.searchUsersSync(loginRequest.username);\n\n\t\tif (users.length !== 1) {\n\t\t\tlogger.info('Search returned', users.length, 'record(s) for', loginRequest.username);\n\t\t\tthrow new Error('User not Found');\n\t\t}\n\n\t\tif (ldap.authSync(users[0].dn, loginRequest.ldapPass) === true) {\n\t\t\tif (ldap.isUserInGroup (loginRequest.username)) {\n\t\t\t\tldapUser = users[0];\n\t\t\t} else {\n\t\t\t\tthrow new Error('User not in a valid group');\n\t\t\t}\n\t\t} else {\n\t\t\tlogger.info('Wrong password for', loginRequest.username);\n\t\t}\n\t} catch (error) {\n\t\tlogger.error(error);\n\t}\n\n\tldap.disconnect();\n\n\tif (ldapUser === undefined) {\n\t\tif (RocketChat.settings.get('LDAP_Login_Fallback') === true) {\n\t\t\treturn fallbackDefaultAccountSystem(self, loginRequest.username, loginRequest.ldapPass);\n\t\t}\n\n\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication failed with provided username [${ loginRequest.username }]`);\n\t}\n\n\tlet username;\n\n\tif (RocketChat.settings.get('LDAP_Username_Field') !== '') {\n\t\tusername = slug(getLdapUsername(ldapUser));\n\t} else {\n\t\tusername = slug(loginRequest.username);\n\t}\n\n\t// Look to see if user already exists\n\tlet userQuery;\n\n\tconst Unique_Identifier_Field = getLdapUserUniqueID(ldapUser);\n\tlet user;\n\n\tif (Unique_Identifier_Field) {\n\t\tuserQuery = {\n\t\t\t'services.ldap.id': Unique_Identifier_Field.value\n\t\t};\n\n\t\tlogger.info('Querying user');\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\tif (!user) {\n\t\tuserQuery = {\n\t\t\tusername\n\t\t};\n\n\t\tlogger.debug('userQuery', userQuery);\n\n\t\tuser = Meteor.users.findOne(userQuery);\n\t}\n\n\t// Login user if they exist\n\tif (user) {\n\t\tif (user.ldap !== true && RocketChat.settings.get('LDAP_Merge_Existing_Users') !== true) {\n\t\t\tlogger.info('User exists without \"ldap: true\"');\n\t\t\tthrow new Meteor.Error('LDAP-login-error', `LDAP Authentication succeded, but there's already an existing user with provided username [${ username }] in Mongo.`);\n\t\t}\n\n\t\tlogger.info('Logging user');\n\n\t\tconst stampedToken = Accounts._generateStampedLoginToken();\n\n\t\tMeteor.users.update(user._id, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': Accounts._hashStampedToken(stampedToken)\n\t\t\t}\n\t\t});\n\n\t\tsyncUserData(user, ldapUser);\n\t\tAccounts.setPassword(user._id, loginRequest.ldapPass, {logout: false});\n\t\treturn {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token\n\t\t};\n\t}\n\n\tlogger.info('User does not exist, creating', username);\n\n\t// Create new user\n\treturn addLdapUser(ldapUser, username, loginRequest.ldapPass);\n});\n","Meteor.startup(function() {\n\tRocketChat.settings.addGroup('LDAP', function() {\n\t\tconst enableQuery = {_id: 'LDAP_Enable', value: true};\n\t\tconst enableTLSQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Encryption', value: {$in: ['tls', 'ssl']}}\n\t\t];\n\t\tconst customBindSearchEnabledQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Use_Custom_Domain_Search', value: true}\n\t\t];\n\t\tconst customBindSearchDisabledQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Use_Custom_Domain_Search', value: false}\n\t\t];\n\t\tconst syncDataQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Sync_User_Data', value: true}\n\t\t];\n\t\tconst groupFilterQuery = [\n\t\t\t{_id: 'LDAP_Enable', value: true},\n\t\t\t{_id: 'LDAP_Group_Filter_Enable', value: true}\n\t\t];\n\n\t\tthis.add('LDAP_Enable', false, { type: 'boolean', public: true });\n\t\tthis.add('LDAP_Login_Fallback', true, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Host', '', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Port', '389', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Connect_Timeout', 600000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Idle_Timeout', 600000, {type: 'int', enableQuery});\n\t\tthis.add('LDAP_Encryption', 'plain', { type: 'select', values: [ { key: 'plain', i18nLabel: 'No_Encryption' }, { key: 'tls', i18nLabel: 'StartTLS' }, { key: 'ssl', i18nLabel: 'SSL/LDAPS' } ], enableQuery });\n\t\tthis.add('LDAP_CA_Cert', '', { type: 'string', multiline: true, enableQuery: enableTLSQuery });\n\t\tthis.add('LDAP_Reject_Unauthorized', true, { type: 'boolean', enableQuery: enableTLSQuery });\n\t\tthis.add('LDAP_Domain_Base', '', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Use_Custom_Domain_Search', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Custom_Domain_Search', '', { type: 'string', enableQuery: customBindSearchEnabledQuery });\n\t\tthis.add('LDAP_Domain_Search_User', '', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Password', '', { type: 'password', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Filter', '', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Group_Filter_Enable', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Group_Filter_ObjectClass', 'groupOfUniqueNames', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Id_Attribute', 'cn', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Attribute', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Member_Format', 'uniqueMember', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Group_Filter_Group_Name', 'ROCKET_CHAT', { type: 'string', enableQuery: groupFilterQuery });\n\t\tthis.add('LDAP_Domain_Search_User_ID', 'sAMAccountName', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Object_Class', 'user', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Domain_Search_Object_Category', 'person', { type: 'string', enableQuery: customBindSearchDisabledQuery });\n\t\tthis.add('LDAP_Username_Field', 'sAMAccountName', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Unique_Identifier_Field', 'objectGUID,ibm-entryUUID,GUID,dominoUNID,nsuniqueId,uidNumber', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Sync_User_Data', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Sync_User_Avatar', true, { type: 'boolean', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Sync_User_Data_FieldMap', '{\"cn\":\"name\", \"mail\":\"email\"}', { type: 'string', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Default_Domain', '', { type: 'string', enableQuery });\n\t\tthis.add('LDAP_Merge_Existing_Users', false, { type: 'boolean', enableQuery });\n\t\tthis.add('LDAP_Import_Users', false, { type: 'boolean', enableQuery: syncDataQuery });\n\t\tthis.add('LDAP_Test_Connection', 'ldap_test_connection', { type: 'action', actionText: 'Test_Connection' });\n\t\tthis.add('LDAP_Sync_Users', 'ldap_sync_users', { type: 'action', actionText: 'Sync_Users' });\n\t});\n});\n","/* globals LDAP */\n\nMeteor.methods({\n\tldap_test_connection() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_test_connection' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tlet ldap;\n\t\ttry {\n\t\t\tldap = new LDAP();\n\t\t\tldap.connectSync();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow new Meteor.Error(error.message);\n\t\t}\n\n\t\ttry {\n\t\t\tldap.bindIfNecessary();\n\t\t\tldap.disconnect();\n\t\t} catch (error) {\n\t\t\tthrow new Meteor.Error(error.name || error.message);\n\t\t}\n\n\t\treturn {\n\t\t\tmessage: 'Connection_success',\n\t\t\tparams: []\n\t\t};\n\t}\n});\n","/* globals sync */\n\nMeteor.methods({\n\tldap_sync_users() {\n\t\tconst user = Meteor.user();\n\t\tif (!user) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (!RocketChat.authz.hasRole(user._id, 'admin')) {\n\t\t\tthrow new Meteor.Error('error-not-authorized', 'Not authorized', { method: 'ldap_sync_users' });\n\t\t}\n\n\t\tif (RocketChat.settings.get('LDAP_Enable') !== true) {\n\t\t\tthrow new Meteor.Error('LDAP_disabled');\n\t\t}\n\n\t\tconst result = sync();\n\n\t\tif (result === true) {\n\t\t\treturn {\n\t\t\t\tmessage: 'Sync_success',\n\t\t\t\tparams: []\n\t\t\t};\n\t\t}\n\n\t\tthrow result;\n\t}\n});\n"]}