{
  "_args": [
    [
      {
        "raw": "ip-range-check@https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
        "scope": null,
        "escapedName": "ip-range-check",
        "name": "ip-range-check",
        "rawSpec": "https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
        "spec": "https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
        "type": "remote"
      },
      "/app/lilychat/packages/rocketchat-oembed/.npm/package-new-go16ev"
    ]
  ],
  "_from": "ip-range-check@0.0.2",
  "_id": "ip-range-check@0.0.2",
  "_inCache": true,
  "_location": "/ip-range-check",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ip-range-check@https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
    "scope": null,
    "escapedName": "ip-range-check",
    "name": "ip-range-check",
    "rawSpec": "https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
    "spec": "https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
  "_shasum": "605c859687aa4f18463918d46190d8b3699a293c",
  "_shrinkwrap": null,
  "_spec": "ip-range-check@https://registry.npmjs.org/ip-range-check/-/ip-range-check-0.0.2.tgz",
  "_where": "/app/lilychat/packages/rocketchat-oembed/.npm/package-new-go16ev",
  "author": {
    "name": "Daniel Compton",
    "url": "http://danielcompton.net"
  },
  "bugs": {
    "url": "https://github.com/danielcompton/ip-range-check/issues"
  },
  "dependencies": {
    "ipaddr.js": "^1.0.1"
  },
  "description": "Check whether an IP(v4 or v6) is in an CIDR range",
  "devDependencies": {
    "mocha": "^2.2.5"
  },
  "homepage": "https://github.com/danielcompton/ip-range-check#readme",
  "keywords": [
    "ip",
    "ipv6",
    "IP",
    "Address",
    "CIDR",
    "range"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "ip-range-check",
  "optionalDependencies": {},
  "readme": "# IP Range Check\n\n[![Build Status](https://travis-ci.org/Day8/ip-range-check.svg?branch=master)](https://travis-ci.org/Day8/ip-range-check)\n\n[![NPM](https://nodei.co/npm/ip-range-check.png?downloads=true&downloadRank=true&stars=true)](https://www.npmjs.com/package/ip-range-check)\n\nThis module lets you check if an IP matches one or more IP's or [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) ranges. It handles IPv6, IPv4, and IPv4-mapped over IPv6 addresses.\n\nIt accepts either:\n\n* A single CIDR or IP string, e.g. `\"125.19.23.0/24\"`, or `\"2001:cdba::3257:9652\"`, or `\"62.230.58.1\"`\n* An array of CIDR and/or IP strings, e.g. `[\"125.19.23.0/24\", \"2001:cdba::3257:9652\", \"62.230.58.1\"]`\n\nImportantly, it cannot match an IPv4 address to an IPv6 CIDR or vice versa, (IPv4-mapped IPv6 addresses notwithstanding).\n\n## Installing\n\n```sh\nnpm install ip-range-check --save\n```\n\n## IPv4\n\n```js\nvar ipRangeCheck = require(\"ip-range-check\");\n\n// Checks CIDR\nipRangeCheck(\"192.168.1.1\", \"102.1.5.2/24\")\n// > false\nipRangeCheck(\"192.168.1.1\", \"192.168.1.0/24\")\n// > true\n\n// Checks if IP matches string\nipRangeCheck(\"192.168.1.1\", \"192.168.1.1\")\n// > true\n\n// Checks array of CIDR's and string\nipRangeCheck(\"192.168.1.1\", [\"102.1.5.2/24\", \"192.168.1.0/24\", \"106.1.180.84\"])\n// > true\n\n// Compare IPv6 with IPv4\nipRangeCheck(\"195.58.1.62\", [\"::1/128\", \"125.92.12.53\"])\n// > false\n\n```\n\n## IPv6\n\n```js\nvar ipRangeCheck = require(\"ip-range-check\");\n\n// Handles IPv6 in the same fashion as IPv4\nipRangeCheck(\"::1\", \"::2/128\")\n// > false\nipRangeCheck(\"::1\", [\"::2\", \"::3/128\"])\n// > false\nipRangeCheck(\"2001:cdba::3257:9652\", \"2001:cdba::3257:9652/128\")\n// > true\n\n// IPv4-mapped IPv6 addresses are automatically converted back to IPv4 addresses\n// and will match against IPv4 CIDR/IP's.\nipRangeCheck(\"0:0:0:0:0:FFFF:222.1.41.90\", \"222.1.41.0/24\")\n// > true\n\n// IPv6 addresses/CIDR's are normalised\nipRangeCheck(\"2001:cdba:0000:0000:0000:0000:3257:9652\", [\"2001:cdba::3257:9652\"])\n// > true\n```\n\n## Developing\n\nTo run the tests:\n\n```\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/day8/ip-range-check.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha"
  },
  "version": "0.0.2"
}
