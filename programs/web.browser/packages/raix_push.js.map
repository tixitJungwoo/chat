{"version":3,"sources":["meteor://ðŸ’»app/packages/raix:push/lib/common/main.js","meteor://ðŸ’»app/packages/raix:push/lib/common/notifications.js","meteor://ðŸ’»app/packages/raix:push/lib/client/browser.js","meteor://ðŸ’»app/packages/raix:push/lib/client/client.js"],"names":["Push","EventState","checkClientSecurity","options","apn","certData","Error","keyData","passphrase","gcm","apiKey","init","console","warn","_matchToken","Match","OneOf","String","notifications","Mongo","Collection","_validateDocument","notification","check","from","title","text","sent","Optional","Boolean","sending","Integer","badge","sound","notId","contentAvailable","image","style","summaryText","picture","query","token","tokens","payload","Object","delayUntil","Date","createdAt","createdBy","length","send","currentUser","Meteor","isClient","userId","isServer","_","extend","pick","test","JSON","stringify","insert","allow","rules","apply","deny","onNotification","message","foreground","emit","open","setBadge","isConfigured","Configure","self","debug","log","initPushUpdates","appName","iframe","coldstart","startupTime","startupThreshold","_atStartup","_parsePayload","value","EJSON","parse","err","error","addEventListener","e","event","soundname","unifiedMessage","msg","msgcnt","background","type","ejson","alert","evt","success","androidToken","emitState","iosToken","chrome","projectNumber","register","window","safari","startup","permissionData","pushNotification","permission","websitePushId","checkRemotePermission","requestPermission","webServiceUrl","deviceToken","navigator","push","mozSetMessageHandler","setupAppRegistrations","requestAccess","onsuccess","pushEndpoint","target","result","SimplePush","channel","endPoint","localStorageKey","addUserId","Package","loadLocalstorage","data","localStorage","getItem","id","Random","metadata","saveLocalstorage","setItem","stored","idDep","Tracker","Dependency","stateDep","changed","_setEnabled","state","enabled","depend","call","found","setUser","setMetadata","reportTokenToServer","_id","on","autorun","firstRun"],"mappings":"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","file":"/packages/raix_push.js","sourcesContent":["// The push object is an event emitter\nPush = new EventState();\n\n\n// Client-side security warnings, used to check options\ncheckClientSecurity = function(options) {\n\n  // Warn if certificates or keys are added here on client. We dont allow the\n  // user to do this for security reasons.\n  if (options.apn && options.apn.certData) {\n    throw new Error('Push.init: Dont add your APN certificate in client code!');\n  }\n\n  if (options.apn && options.apn.keyData) {\n    throw new Error('Push.init: Dont add your APN key in client code!');\n  }\n\n  if (options.apn && options.apn.passphrase) {\n    throw new Error('Push.init: Dont add your APN passphrase in client code!');\n  }\n\n  if (options.gcm && options.gcm.apiKey) {\n    throw new Error('Push.init: Dont add your GCM api key in client code!');\n  }\n};\n\n// DEPRECATED\nPush.init = function() {\n  console.warn('Push.init have been deprecated in favor of \"config.push.json\" please migrate');\n};\n","// This is the match pattern for tokens\n_matchToken = Match.OneOf({ apn: String }, { gcm: String });\n\n// Notifications collection\nPush.notifications = new Mongo.Collection('_raix_push_notifications');\n\n// This is a general function to validate that the data added to notifications\n// is in the correct format. If not this function will throw errors\nvar _validateDocument = function(notification) {\n\n  // Check the general notification\n  check(notification, {\n    from: String,\n    title: String,\n    text: String,\n    sent: Match.Optional(Boolean),\n    sending: Match.Optional(Match.Integer),\n    badge: Match.Optional(Match.Integer),\n    sound: Match.Optional(String),\n    notId: Match.Optional(Match.Integer),\n    contentAvailable: Match.Optional(Match.Integer),\n    apn: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      badge: Match.Optional(Match.Integer),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer)\n    }),\n    gcm: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      image: Match.Optional(String),\n      style: Match.Optional(String),\n      summaryText: Match.Optional(String),\n      picture: Match.Optional(String),\n      badge: Match.Optional(Match.Integer),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer)\n    }),\n    query: Match.Optional(String),\n    token: Match.Optional(_matchToken),\n    tokens: Match.Optional([_matchToken]),\n    payload: Match.Optional(Object),\n    delayUntil: Match.Optional(Date),\n    createdAt: Date,\n    createdBy: Match.OneOf(String, null)\n  });\n\n  // Make sure a token selector or query have been set\n  if (!notification.token && !notification.tokens && !notification.query) {\n    throw new Error('No token selector or query found');\n  }\n\n  // If tokens array is set it should not be empty\n  if (notification.tokens && !notification.tokens.length) {\n    throw new Error('No tokens in array');\n  }\n};\n\nPush.send = function(options) {\n  // If on the client we set the user id - on the server we need an option\n  // set or we default to \"<SERVER>\" as the creator of the notification\n  // If current user not set see if we can set it to the logged in user\n  // this will only run on the client if Meteor.userId is available\n  var currentUser = Meteor.isClient && Meteor.userId && Meteor.userId() ||\n          Meteor.isServer && (options.createdBy || '<SERVER>') || null;\n\n  // Rig the notification object\n   var notification = _.extend({\n    createdAt: new Date(),\n    createdBy: currentUser\n  }, _.pick(options, 'from', 'title', 'text'));\n\n   // Add extra\n   _.extend(notification, _.pick(options, 'payload', 'badge', 'sound', 'notId', 'delayUntil'));\n\n  if (Match.test(options.apn, Object)) {\n    notification.apn = _.pick(options.apn, 'from', 'title', 'text', 'badge', 'sound', 'notId');\n  }\n\n  if (Match.test(options.gcm, Object)) {\n    notification.gcm = _.pick(options.gcm, 'image', 'style', 'summaryText', 'picture', 'from', 'title', 'text', 'badge', 'sound', 'notId');\n  }\n\n  // Set one token selector, this can be token, array of tokens or query\n  if (options.query) {\n    // Set query to the json string version fixing #43 and #39\n    notification.query = JSON.stringify(options.query);\n  } else if (options.token) {\n    // Set token\n    notification.token = options.token;\n  } else if (options.tokens) {\n    // Set tokens\n    notification.tokens = options.tokens;\n  }\n  //console.log(options);\n  if (typeof options.contentAvailable !== 'undefined') {\n    notification.contentAvailable = options.contentAvailable;\n  }\n\n  notification.sent = false;\n  notification.sending = 0;\n\n  // Validate the notification\n  _validateDocument(notification);\n\n  // Try to add the notification to send, we return an id to keep track\n  return Push.notifications.insert(notification);\n};\n\nPush.allow = function(rules) {\n  if (rules.send) {\n    Push.notifications.allow({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n\nPush.deny = function(rules) {\n  if (rules.send) {\n    Push.notifications.deny({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n","/* global chrome: false */\nvar onNotification = function(notification) {\n  // alert('onNotification' + JSON.stringify(notification));\n\n  // Emit alert event - this requires the app to be in forground\n  if (notification.message && notification.foreground) {\n    Push.emit('alert', notification);\n  }\n\n  // Emit sound event\n  if (notification.sound) {\n    Push.emit('sound', notification);\n  }\n\n  // Emit badge event\n  if (notification.badge) {\n    Push.emit('badge', notification);\n  }\n\n  // If within thres\n  if (notification.open) {\n    Push.emit('startup', notification);\n  } else {\n    Push.emit('message', notification);\n  }\n};\n\nPush.setBadge = function(/* count */) {\n  // XXX: Not implemented\n};\n\nvar isConfigured = false;\n\nPush.Configure = function(options) {\n  var self = this;\n\n  options = options ||Â {};\n\n  // check(options, {\n  //   gcm: Match.Optional(Match.ObjectIncluding({\n  //     projectNumber: String\n  //   })),\n  //   apn: Match.Optional(Match.ObjectIncluding({\n  //     webServiceUrl: String,\n  //     websitePushId: String\n  //   })),\n  // });\n\n  // Block multiple calls\n  if (isConfigured) {\n    throw new Error('Push.Configure should not be called more than once!');\n  }\n\n  isConfigured = true;\n\n  // Add debug info\n  if (Push.debug) {\n    console.log('Push.Configure', options);\n  }\n\n  // Client-side security warnings\n  checkClientSecurity(options);\n\n  // Start token updates\n  initPushUpdates(options.appName);\n\n  // Add support for the raix:iframe push solution Deprecate this at some\n  // point mid aug 2015\n  if (options.iframe) {\n\n    var coldstart = true;\n    var startupTime = new Date();\n    var startupThreshold = 1000; // ms\n\n    var _atStartup = function() {\n      // If startup time is less than startupThreshold ago then lets say this is\n      // at startup.\n      return (new Date() - startupTime < startupThreshold);\n    };\n\n    var _parsePayload = function(value) {\n      // Android actually parses payload into an object - this is not the case with\n      // iOS (here is it just a string)\n      if (value !== ''+value) {\n        value = JSON.stringify(value);\n      }\n\n      // Run the string through ejson\n      try {\n        return EJSON.parse(value);\n      } catch(err) {\n        return { error: err };\n      }\n    };\n\n    // Rig iframe event listeners\n    options.iframe.addEventListener('deviceready', function() {\n\n      // Maintain properties\n\n      // At initial startup set startup time\n      startupTime = new Date();\n\n      // Update flag if app coldstart\n      options.iframe.addEventListener(\"pause\", function() {\n        coldstart = false;\n      }, false);\n\n      options.iframe.addEventListener('resume', function() {\n        // Reset startup time at resume\n        startupTime = new Date();\n      });\n\n      // EO Maintain properties\n\n      options.iframe.addEventListener('pushLaunch', function(e) {\n\n        if (e.event === 'message') {\n          // Android event\n\n          var sound = e.soundname || e.payload.sound;\n\n          // Only prefix sound if actual text found\n          if (sound && sound.length) {\n            sound = '/android_asset/www/' + sound;\n          }\n\n          // XXX: Investigate if we need more defaults\n          var unifiedMessage = {\n            message: e.payload.message || e.msg || '',\n            sound: sound,\n            badge: e.payload.msgcnt,\n            // Coldstart on android is a bit inconsistent - its only set when the\n            // notification opens the app\n            coldstart: (e.coldstart === Boolean(e.coldstart)) ? e.coldstart : coldstart,\n            background: !e.foreground,\n            foreground: !!e.foreground,\n            // open: _atStartup(),  // This is the iOS implementation\n            open: (e.coldstart === Boolean(e.coldstart)), // If set true / false its an open event\n            type: 'gcm.cordova'\n          };\n\n          // If payload.ejson this is an object - we hand it over to parsePayload,\n          // parsePayload will do the convertion for us\n          if (e.payload.ejson) {\n            unifiedMessage.payload = _parsePayload(e.payload.ejson);\n          }\n\n          // Trigger notification\n          onNotification(unifiedMessage);\n\n        } else {\n          // iOS event\n          var sound = e.sound; // jshint ignore: line\n\n          // Only prefix sound if actual text found\n          if (sound && sound.length) {\n            sound = '' + sound;\n          }\n\n          // XXX: Investigate if we need more defaults\n          var unifiedMessage = { // jshint ignore: line\n            message: e.alert,\n            sound: sound,\n            badge: e.badge,\n            coldstart: coldstart,\n            background: !e.foreground,\n            foreground: !!e.foreground,\n            open: _atStartup(),\n            type: 'apn.cordova'\n          };\n\n          // E.ejson should be a string - we send it directly to payload\n          if (e.ejson) {\n            unifiedMessage.payload = _parsePayload(e.ejson);\n          }\n\n          // Trigger notification\n          onNotification(unifiedMessage);\n\n        }\n\n      });\n\n\n      options.iframe.addEventListener('pushSuccess', function(evt) {\n        // Reformat into new event\n        self.emit('register', evt.success);\n      });\n\n      options.iframe.addEventListener('pushToken', function(evt) {\n        if (evt.androidToken) {\n          // Format the android token\n          Push.emitState('token', { gcm: evt.androidToken });\n        } else if (evt.iosToken) {\n          // Format the ios token\n          Push.emitState('token', { apn: evt.iosToken });\n        }\n      });\n\n      options.iframe.addEventListener('pushError', function(evt) {\n        Push.emit('error', { type: 'cordova.browser', error: evt.error ||Â evt });\n      });\n\n    });\n  } // EO options iframe\n\n  if (typeof chrome !== 'undefined' && chrome.gcm) {\n    // chrome.gcm api is supported!\n    // https://developer.chrome.com/extensions/gcm\n\n    // Set max message size\n    // chrome.gcm.MAX_MESSAGE_SIZE = 4096;\n\n    if (options.gcm.projectNumber) {\n      chrome.gcm.register(options.gcm.projectNumber, function(token) {\n        if (token) {\n          self.emitState('token', { gcm: token });\n        } else {\n          // Error\n          self.emit('error', { type: 'gcm.browser', error: 'Access denied' });\n        }\n      });\n    }\n\n  } else if ('safari' in window && 'pushNotification' in window.safari) {\n    // https://developer.apple.com/library/mac/documentation/NetworkingInternet/Conceptual/NotificationProgrammingGuideForWebsites/PushNotifications/PushNotifications.html#//apple_ref/doc/uid/TP40013225-CH3-SW1\n\n    if (options.apn) {\n\n      Meteor.startup(function() {\n        // Ensure that the user can receive Safari Push Notifications.\n        var permissionData = window.safari.pushNotification.permission(options.apn.websitePushId);\n        checkRemotePermission(permissionData);\n      });\n\n      var checkRemotePermission = function (permissionData) {\n          if (permissionData.permission === 'default') {\n              // This is a new web service URL and its validity is unknown.\n              window.safari.pushNotification.requestPermission(\n                  options.apn.webServiceUrl, // The web service URL.\n                  options.apn.websitePushId, // The Website Push ID.\n                  {}, // Data that you choose to send to your server to help you identify the user.\n                  checkRemotePermission         // The callback function.\n              );\n          }\n          else if (permissionData.permission === 'denied') {\n              // alert('denied');\n              // The user said no.\n              self.emit('error', { type: 'apn.browser', error: 'Access denied' });\n          }\n          else if (permissionData.permission === 'granted') {\n              // alert('granted');\n              // The web service URL is a valid push provider, and the user said yes.\n              // permissionData.deviceToken is now available to use.\n              self.emitState('token', { apn: permissionData.deviceToken });\n          }\n      };\n\n    }\n\n\n  } else if (navigator && navigator.push && navigator.push.register && navigator.mozSetMessageHandler) {\n    // check navigator.mozPush should be enough?\n    // https://wiki.mozilla.org/WebAPI/SimplePush\n\n    var channel = 'push';\n\n    // Store the pushEndpoint\n    var pushEndpoint;\n\n    Meteor.startup(function() {\n      setupAppRegistrations();\n    });\n\n    function setupAppRegistrations() { // jshint ignore: line\n      // Issue a register() call\n      // to register to listen for a notification,\n      // you simply call push.register\n      // Here, we'll register a channel for \"email\" updates.\n      // Channels can be for anything the app would like to get notifications for.\n      var requestAccess = navigator.push.register();\n\n      requestAccess.onsuccess = function(e) {\n        // Store the endpoint\n        pushEndpoint = e.target.result;\n\n        self.emitState('token', {\n          SimplePush: {\n            channel: channel,\n            endPoint: pushEndpoint\n          }\n        });\n      };\n\n    }\n\n    // Once we've registered, the AppServer can send version pings to the EndPoint.\n    // This will trigger a 'push' message to be sent to this handler.\n    navigator.mozSetMessageHandler('push', function(message) {\n        if (message.pushEndpoint === pushEndpoint) {\n          // Did we launch or were we already running?\n          self.emit('startup', message);\n        }\n      });\n\n    // // to unregister, you simply call..\n    // AppFramework.addEventListener('user-logout', function() {\n    //   navigator.push.unregister(pushEndpoint);\n    // });\n\n    // error recovery mechanism\n    // will be called very rarely, but application\n    // should register again when it is called\n    navigator.mozSetMessageHandler('register', function(/* e */) {\n      setupAppRegistrations();\n    });\n\n\n\n  }\n\n};\n\n/*\nTODO:\n\nadd event listener api\n\n*/\n","// Namespaced storage key\nvar localStorageKey = '_raix:push_token';\n\n// If we are using the accounts system then add the userId to appCollection\n// and monitor for logout\nvar addUserId = !!Package['accounts-base'];\n\n/*\n  1. Check if id is already set in localstorage\n  2. If not then create an app id\n  3. Refresh the apn/gcm push token for this app\n*/\n\nvar loadLocalstorage = function() {\n  var data = {};\n\n  try {\n    // Get the stored object from local storage\n    data = JSON.parse(localStorage.getItem(localStorageKey));\n\n  } catch(err) {\n    // XXX: Error using the local storage\n  }\n\n  return {\n    // Use a new id if not set\n    id: data && data.id || Random.id(),\n    // Set empty metadata object if nothing loaded\n    metadata: data && data.metadata || {},\n    // Set default token\n    token: null\n  };\n};\n\nvar saveLocalstorage = function(data) {\n  try {\n    // Try setting the id\n    localStorage.setItem(localStorageKey, JSON.stringify(data));\n  } catch(err) {\n    // XXX: storage error\n  }\n};\n\n// Set stored object\nvar stored = loadLocalstorage();\n// Reactive id\nvar idDep = new Tracker.Dependency();\nvar stateDep = new Tracker.Dependency();\n\n// Its either set by localStorage or random\nidDep.changed();\n\nvar _setEnabled = function(state) {\n  if (stored.enabled !== state) {\n    stored.enabled = state;\n    // Save the stored object\n    saveLocalstorage(stored);\n    stateDep.changed();\n  }\n};\n\nPush.id = function() {\n  idDep.depend();\n  return stored.id;\n};\n\nPush.enabled = function(state) {\n  if (stored) {\n    if (typeof state === 'undefined') {\n      // Act as a getter\n      stateDep.depend();\n      return stored.enabled !== false;\n    } else {\n      check(state, Boolean);\n      if (state !== stored.enabled && stored.id) {\n        // Latency compensation\n        _setEnabled(state);\n        // Update server\n        Meteor.call('raix:push-enable', {\n          id: stored.id,\n          enabled: state\n        }, function(err, found) {\n          if (err || !found) {\n            // On error or missing app item, revert\n            _setEnabled(!state);\n          }\n        });\n      }\n    }\n  }\n};\n\nPush.setUser = function() {\n  // Let the server update the userId on the id\n  Meteor.call('raix:push-setuser', stored.id);\n};\n\nPush.setMetadata = function(data) {\n  stored.metadata = data;\n  saveLocalstorage(stored);\n  // Set the metadata on the server collection if we have a token, otherwise\n  // we should only set the metadata in localstorage\n  if (stored.token) {\n    // Update the metadata\n    Meteor.call('raix:push-metadata', {\n      id: stored.id,\n      metadata: stored.metadata\n    });\n  }\n};\n\n// Report token to the server\nvar reportTokenToServer = function(token, appName) {\n  // Store the token\n  stored.token = token;\n\n  // Set the data object\n  var data = {\n    id: stored.id,\n    token: token,\n    appName: appName,\n    userId: (addUserId) ? Meteor.userId() : null,\n    metadata: stored.metadata\n  };\n\n  // token.gcm or token.apn\n  Meteor.call('raix:push-update', data, function(err, result) {\n    if (!err && result) {\n      // The result is the id - The server may update this if it finds a\n      // match for an old install\n      if (stored.id !== result._id) {\n        // The server did match the push token for this device\n        stored.id = result._id;\n        // Save the stored object\n        saveLocalstorage(stored);\n        // The id has changed.\n        idDep.changed();\n      }\n\n      // Make sure enabled is also updated to keep in sync\n      if (typeof result.enabled !== 'undefined') {\n        _setEnabled(result.enabled);\n      }\n    }\n  });\n};\n\ninitPushUpdates = function(appName) {\n  Meteor.startup(function() {\n    // Start listening for tokens\n    Push.on('token', function(token) {\n      if (Push.debug) {\n        console.log('Got token:', token);\n      }\n      // The app should be ready, lets call in\n      reportTokenToServer(token, appName ||Â 'main');\n    });\n\n    // Start listening for user updates if accounts package is added\n    if (addUserId) {\n      Tracker.autorun(function() {\n        // Depend on the userId\n        Meteor.userId();\n        // Dont run this the first time, its already done in the reportTokenToServer\n        if (!this.firstRun) {\n          // Update the userId\n          Push.setUser();\n        }\n      });\n    }\n  });\n};\n"]}