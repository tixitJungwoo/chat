{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:google-natural-language/server/index.js","meteor://ðŸ’»app/packages/rocketchat:google-natural-language/server/settings.js","meteor://ðŸ’»app/packages/rocketchat:google-natural-language/server/models/Rooms.js"],"names":["module","watch","require","googleLanguage","Npm","languageClient","RocketChat","settings","get","key","value","credentials","JSON","parse","e","console","error","setRoomSentiment","message","detectSentiment","msg","Meteor","bindEnvironment","result","models","Rooms","setSentiment","rid","callbacks","add","priority","MEDIUM","remove","startup","type","group","section","i18nLabel","multiline","enableQuery","_id","roomId","sentiment","update","$set"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb;AAAuCF,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb;;AAGvC,IAAMC,iBAAiBC,IAAIF,OAAJ,CAAY,wBAAZ,CAAvB;;AAEA,IAAIG,uBAAJ;AAEAC,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,sCAAxB,EAAgE,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC/E,KAAIA,KAAJ,EAAW;AACV,MAAI;AACHL,oBAAiBF,eAAe;AAC/BQ,iBAAaC,KAAKC,KAAL,CAAWH,KAAX;AADkB,IAAf,CAAjB;AAGA,GAJD,CAIE,OAAOI,CAAP,EAAU;AACXT,oBAAiB,IAAjB;AACAU,WAAQC,KAAR,CAAc,mDAAd,EAAmEF,CAAnE;AACA;AACD;AACD,CAXD;;AAaA,IAAMG,mBAAmB,UAASC,OAAT,EAAkB;AAC1C,KAAI,CAACb,cAAL,EAAqB;AACpB;AACA;;AAEDA,gBAAec,eAAf,CAA+BD,QAAQE,GAAvC,EAA4CC,OAAOC,eAAP,CAAuB,UAACN,KAAD,EAAQO,MAAR,EAAmB;AACrF,MAAI,CAACP,KAAL,EAAY;AACXV,cAAWkB,MAAX,CAAkBC,KAAlB,CAAwBC,YAAxB,CAAqCR,QAAQS,GAA7C,EAAkDJ,MAAlD;AACA;AACD,EAJ2C,CAA5C;AAMA,QAAOL,OAAP;AACA,CAZD;;AAcAZ,WAAWC,QAAX,CAAoBC,GAApB,CAAwB,+BAAxB,EAAyD,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACxE,KAAIA,KAAJ,EAAW;AACVJ,aAAWsB,SAAX,CAAqBC,GAArB,CAAyB,kBAAzB,EAA6CZ,gBAA7C,EAA+DX,WAAWsB,SAAX,CAAqBE,QAArB,CAA8BC,MAA7F,EAAqG,uBAArG;AACA,EAFD,MAEO;AACNzB,aAAWsB,SAAX,CAAqBI,MAArB,CAA4B,kBAA5B,EAAgD,uBAAhD;AACA;AACD,CAND,mG;;;;;;;;;;;AClCAX,OAAOY,OAAP,CAAe,YAAW;AACzB3B,YAAWC,QAAX,CAAoBsB,GAApB,CAAwB,+BAAxB,EAAyD,KAAzD,EAAgE;AAC/DK,QAAM,SADyD;AAE/DC,SAAO,SAFwD;AAG/DC,WAAS,yBAHsD;AAI/D,YAAQ,IAJuD;AAK/DC,aAAW;AALoD,EAAhE;AAOA/B,YAAWC,QAAX,CAAoBsB,GAApB,CAAwB,sCAAxB,EAAgE,EAAhE,EAAoE;AACnEK,QAAM,QAD6D;AAEnEC,SAAO,SAF4D;AAGnEC,WAAS,yBAH0D;AAInEE,aAAW,IAJwD;AAKnEC,eAAa;AACZC,QAAK,+BADO;AAEZ9B,UAAO;AAFK,GALsD;AASnE2B,aAAW;AATwD,EAApE;AAWA,CAnBD,mG;;;;;;;;;;;ACAA/B,WAAWkB,MAAX,CAAkBC,KAAlB,CAAwBC,YAAxB,GAAuC,UAASe,MAAT,EAAiBC,SAAjB,EAA4B;AAClE,QAAO,KAAKC,MAAL,CAAY;AAAEH,OAAKC;AAAP,EAAZ,EAA6B;AAAEG,QAAM;AAAEF;AAAF;AAAR,EAA7B,CAAP;AACA,CAFD,kG","file":"/packages/rocketchat_google-natural-language.js","sourcesContent":["import './settings.js';\nimport './models/Rooms.js';\n\nconst googleLanguage = Npm.require('@google-cloud/language');\n\nlet languageClient;\n\nRocketChat.settings.get('GoogleNaturalLanguage_ServiceAccount', (key, value) => {\n\tif (value) {\n\t\ttry {\n\t\t\tlanguageClient = googleLanguage({\n\t\t\t\tcredentials: JSON.parse(value)\n\t\t\t});\n\t\t} catch (e) {\n\t\t\tlanguageClient = null;\n\t\t\tconsole.error('Error parsing Google Natural Language credential.', e);\n\t\t}\n\t}\n});\n\nconst setRoomSentiment = function(message) {\n\tif (!languageClient) {\n\t\treturn;\n\t}\n\n\tlanguageClient.detectSentiment(message.msg, Meteor.bindEnvironment((error, result) => {\n\t\tif (!error) {\n\t\t\tRocketChat.models.Rooms.setSentiment(message.rid, result);\n\t\t}\n\t}));\n\n\treturn message;\n};\n\nRocketChat.settings.get('GoogleNaturalLanguage_Enabled', (key, value) => {\n\tif (value) {\n\t\tRocketChat.callbacks.add('afterSaveMessage', setRoomSentiment, RocketChat.callbacks.priority.MEDIUM, 'GoogleNaturalLanguage');\n\t} else {\n\t\tRocketChat.callbacks.remove('afterSaveMessage', 'GoogleNaturalLanguage');\n\t}\n});\n","Meteor.startup(function() {\n\tRocketChat.settings.add('GoogleNaturalLanguage_Enabled', false, {\n\t\ttype: 'boolean',\n\t\tgroup: 'Message',\n\t\tsection: 'Google Natural Language',\n\t\tpublic: true,\n\t\ti18nLabel: 'Enabled'\n\t});\n\tRocketChat.settings.add('GoogleNaturalLanguage_ServiceAccount', '', {\n\t\ttype: 'string',\n\t\tgroup: 'Message',\n\t\tsection: 'Google Natural Language',\n\t\tmultiline: true,\n\t\tenableQuery: {\n\t\t\t_id: 'GoogleNaturalLanguage_Enabled',\n\t\t\tvalue: true\n\t\t},\n\t\ti18nLabel: 'Service_account_key'\n\t});\n});\n","RocketChat.models.Rooms.setSentiment = function(roomId, sentiment) {\n\treturn this.update({ _id: roomId }, { $set: { sentiment } });\n};\n"]}