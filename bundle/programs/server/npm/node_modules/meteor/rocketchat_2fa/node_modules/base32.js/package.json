{
  "_args": [
    [
      {
        "raw": "base32.js@https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
        "scope": null,
        "escapedName": "base32.js",
        "name": "base32.js",
        "rawSpec": "https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
        "spec": "https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
        "type": "remote"
      },
      "/app/lilychat/packages/rocketchat-2fa/.npm/package-new-m44lef"
    ]
  ],
  "_from": "base32.js@0.0.1",
  "_id": "base32.js@0.0.1",
  "_inCache": true,
  "_location": "/base32.js",
  "_phantomChildren": {},
  "_requested": {
    "raw": "base32.js@https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
    "scope": null,
    "escapedName": "base32.js",
    "name": "base32.js",
    "rawSpec": "https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
    "spec": "https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/speakeasy"
  ],
  "_resolved": "https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
  "_shasum": "d045736a57b1f6c139f0c7df42518a84e91bb2ba",
  "_shrinkwrap": null,
  "_spec": "base32.js@https://registry.npmjs.org/base32.js/-/base32.js-0.0.1.tgz",
  "_where": "/app/lilychat/packages/rocketchat-2fa/.npm/package-new-m44lef",
  "author": {
    "name": "Michael Phan-Ba",
    "email": "michael@mikepb.com"
  },
  "browser": "base32.js",
  "bugs": {
    "url": "https://github.com/mikepb/base32.js/issues"
  },
  "dependencies": {},
  "description": "Base 32 encodings for JavaScript",
  "devDependencies": {
    "jsdoc": "*",
    "karma": "*",
    "karma-chrome-launcher": "*",
    "karma-mocha": "*",
    "karma-webpack": "*",
    "mocha": "*",
    "webpack": "*"
  },
  "homepage": "https://github.com/mikepb/base32.js#readme",
  "keywords": [
    "base32",
    "crockford",
    "rfc4648",
    "encoding",
    "decoding",
    "crc"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "base32.js",
  "optionalDependencies": {},
  "readme": "# Base 32 for JavaScript\n\n[Wikipedia](https://en.wikipedia.org/wiki/Base32):\n\n> Base32 is a base 32 transfer encoding using the twenty-six letters A–Z and six digits 2–7. It is primarily used to encode binary data, but is able to encode binary text like ASCII.\n>\n> Base32 has number of advantages over Base64:\n>\n> 1. The resulting character set is all one case (usually represented as uppercase), which can often be beneficial when using a case-insensitive filesystem, spoken language, or human memory.\n>\n> 2. The result can be used as file name because it can not possibly contain '/' symbol which is usually acts as path separator in Unix-based operating systems.\n>\n> 3. The alphabet was selected to avoid similar-looking pairs of different symbols, so the strings can be accurately transcribed by hand. (For example, the symbol set omits the symbols for 1, 8 and zero, since they could be confused with the letters 'I', 'B', and 'O'.)\n>\n> 4. A result without padding can be included in a URL without encoding any characters.\n>\n> However, Base32 representation takes roughly 20% more space than Base64.\n\n## Documentation\n\nFull documentation at http://mikepb.github.io/base32.js/\n\n## Installation\n\n```sh\n$ npm install base32.js\n```\n\n## Usage\n\nEncoding an array of bytes using [Crockford][crock32], appending a CRC-8\nchecksum:\n\n```js\nvar base32 = require(\"base32.js\");\n\nvar buf = [1, 2, 3, 4];\nvar encoder = new base32.Encoder({ type: \"crockford\", lc: true });\nvar str = encoder.write(buf).finalize();\n// str = \"04106173\"\n\nvar decoder = new base32.Decoder({ type: \"crockford\" });\nvar out = decoder.write(str).finalize();\n// out = [1, 2, 3, 4]\n```\n\nThe default Base32 variant if no `type` is provided is `\"rfc4648\"` without\npadding.\n\n# Browser support\n\nThe browser versions of the library may be found under the `dist/` directory.\nThe browser files are updated on each versioned release, but not for\ndevelopment. [Karma][karma] is used to run the [mocha][] tests in the browser.\n\n```sh\n$ npm install -g karma-cli\n$ npm run karma\n```\n\n## Related projects\n\n- [agnoster/base32-js][agnoster]\n\n[agnoster]: https://github.com/agnoster/base32-js\n[crock32]: http://www.crockford.com/wrmg/base32.html\n[karma]: http://karma-runner.github.io\n[mocha]: http://mochajs.org\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mikepb/base32.js.git"
  },
  "scripts": {
    "dist": "webpack base32.js dist/base32.js && webpack --optimize-minimize base32.js dist/base32.min.js",
    "doc": "jsdoc -c jsdoc.json",
    "karma": "karma start --single-run",
    "test": "mocha --reporter dot"
  },
  "version": "0.0.1"
}
