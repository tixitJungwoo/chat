{
  "_args": [
    [
      {
        "raw": "localforage@https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
        "scope": null,
        "escapedName": "localforage",
        "name": "localforage",
        "rawSpec": "https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
        "spec": "https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
        "type": "remote"
      },
      "/app/lilychat/packages/rocketchat-lib/.npm/package-new-hrc3ty"
    ]
  ],
  "_from": "localforage@1.4.2",
  "_id": "localforage@1.4.2",
  "_inCache": true,
  "_location": "/localforage",
  "_phantomChildren": {},
  "_requested": {
    "raw": "localforage@https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
    "scope": null,
    "escapedName": "localforage",
    "name": "localforage",
    "rawSpec": "https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
    "spec": "https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
  "_shasum": "5fae8a91d146d1ea9b4c6dcd0eddebdcf6a61653",
  "_shrinkwrap": null,
  "_spec": "localforage@https://registry.npmjs.org/localforage/-/localforage-1.4.2.tgz",
  "_where": "/app/lilychat/packages/rocketchat-lib/.npm/package-new-hrc3ty",
  "author": {
    "name": "Mozilla"
  },
  "bugs": {
    "url": "http://github.com/mozilla/localForage/issues"
  },
  "dependencies": {
    "lie": "3.0.2"
  },
  "description": "Offline storage, improved.",
  "devDependencies": {
    "babel-core": "^6.5.1",
    "babel-loader": "^6.2.2",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-plugin-transform-es2015-modules-umd": "^6.5.0",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-es2015-loose": "^7.0.0",
    "babelify": "^7.2.0",
    "bundle-collapser": "^1.2.1",
    "cors": "^2.3.1",
    "derequire": "^2.0.3",
    "grunt": "^0.4.2",
    "grunt-babel": "^6.0.0",
    "grunt-browserify": "^3.8.0",
    "grunt-contrib-concat": "^0.3.0",
    "grunt-contrib-connect": "^0.8.0",
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-uglify": "^0.4.0",
    "grunt-contrib-watch": "^0.5.0",
    "grunt-es3-safe-recast": "^0.1.0",
    "grunt-jscs": "^1.5.0",
    "grunt-mocha": "^0.4.10",
    "grunt-rollup": "^0.6.2",
    "grunt-run": "^0.5.2",
    "grunt-saucelabs": "^5.1.2",
    "grunt-webpack": "^1.0.11",
    "load-grunt-tasks": "^0.4.0",
    "mocha": "^1.18.2",
    "ncp": "^2.0.0",
    "phantomjs": "^1.9.7-12",
    "rimraf": "^2.5.2",
    "rollupify": "^0.1.0",
    "script-loader": "^0.6.1",
    "uglify-js": "^2.3.x",
    "webpack": "^1.12.13",
    "webpack-dev-server": "^1.10.1"
  },
  "homepage": "https://github.com/mozilla/localForage",
  "keywords": [
    "indexeddb",
    "localstorage",
    "storage",
    "websql"
  ],
  "license": "Apache-2.0",
  "main": "dist/localforage.js",
  "name": "localforage",
  "optionalDependencies": {},
  "readme": "# localForage [![Build Status](https://travis-ci.org/mozilla/localForage.svg?branch=master)](http://travis-ci.org/mozilla/localForage)\n\nlocalForage is a fast and simple storage library for JavaScript. localForage\nimproves the offline experience of your web app by using asynchronous storage\n(IndexedDB or WebSQL) with a simple, `localStorage`-like API.\n\nlocalForage uses localStorage in browsers with no IndexedDB or\nWebSQL support. See [the wiki for detailed compatibility info][supported browsers].\n\nTo use localForage, just drop a single JavaScript file into your page:\n\n```html\n<script src=\"localforage.js\"></script>\n<script>localforage.getItem('something', myCallback);</script>\n```\n\nDownload the [latest localForage from GitHub](https://github.com/mozilla/localForage/releases/latest), or install with\n[npm](https://www.npmjs.com/):\n\n```bash\nnpm install localforage\n```\n\nor [bower](http://bower.io):\n\n```bash\nbower install localforage\n```\n\nlocalForage is compatible with [browserify](http://browserify.org/).\n\n[supported browsers]: https://github.com/mozilla/localForage/wiki/Supported-Browsers-Platforms\n\n## Support\n\nLost? Need help? Try the\n[localForage API documentation](https://mozilla.github.io/localForage).\n\nIf you're stuck using the library, running the tests, or want to contribute\nto localForage, you can visit\n[irc.freenode.net](https://freenode.net/) and head to the `#localforage`\nchannel to ask questions about localForage.\n\nThe best person to ask about localForage is [**tofumatt**][tofumatt], who\nis usually online from 8am-8pm GMT (London Time).\n\n[tofumatt]: http://tofumatt.com/\n\n# How to use localForage\n\n## Callbacks vs Promises\n\nBecause localForage uses async storage, it has an async API.\nIt's otherwise exactly the same as the\n[localStorage API](https://hacks.mozilla.org/2009/06/localstorage/).\n\nlocalForage has a dual API that allows you to either use Node-style callbacks \nor [Promises](https://www.promisejs.org/). If you are unsure which one is right for you, it's recommend to use Promises.\n\nHere's an example of the Node-style callback form:\n\n```js\nlocalforage.setItem('key', 'value', function (err) {\n  // if err is non-null, we got an error\n  localforage.getItem('key', function (err, value) {\n    // if err is non-null, we got an error. otherwise, value is the value \n  });\n});\n```\n\nAnd the Promise form:\n\n```js\nlocalforage.setItem('key', 'value').then(function () {\n  return localforage.getItem('key');\n}).then(function (value) {\n  // we got our value\n}).catch(function (err) {\n  // we got an error\n});\n```\n\nFor more examples, please visit [the API docs](http://mozilla.github.io/localForage). \n\n## Storing Blobs, TypedArrays, and other JS objects\n\nYou can store any type in localForage; you aren't limited to strings like in\nlocalStorage. Even if localStorage is your storage backend, localForage\nautomatically does `JSON.parse()` and `JSON.stringify()` when getting/setting\nvalues.\n\nlocalForage supports storing all native JS objects that can be serialized to\nJSON, as well as ArrayBuffers, Blobs, and TypedArrays. Check the\n[API docs][api] for a full list of types supported by localForage.\n\nAll types are supported in every storage backend, though storage limits in\nlocalStorage make storing many large Blobs impossible.\n\n[api]: https://mozilla.github.io/localForage/#setitem\n\n## Configuration\n\nYou can set database information with the `config()` method.\nAvailable options are `driver`, `name`, `storeName`, `version`, `size`, and\n`description`.\n\nExample:\n```javascript\nlocalforage.config({\n    driver      : localforage.WEBSQL, // Force WebSQL; same as using setDriver()\n    name        : 'myApp',\n    version     : 1.0,\n    size        : 4980736, // Size of database, in bytes. WebSQL-only for now.\n    storeName   : 'keyvaluepairs', // Should be alphanumeric, with underscores.\n    description : 'some description'\n});\n```\n\n**Note:** you must call `config()` _before_ you interact with your data. This\nmeans calling `config()` before using `getItem()`, `setItem()`, `removeItem()`,\n`clear()`, `key()`, `keys()` or `length()`.\n\n## Multiple instances\n\nYou can create multiple instances of localForage that point to different stores\nusing `createInstance`. All the configuration options used by\n[`config`](#configuration) are supported.\n\n``` javascript\nvar store = localforage.createInstance({\n  name: \"nameHere\"\n});\n\nvar otherStore = localforage.createInstance({\n  name: \"otherName\"\n});\n\n// Setting the key on one of these doesn't affect the other.\nstore.setItem(\"key\", \"value\");\notherStore.setItem(\"key\", \"value2\");\n```\n\n## RequireJS\n\nYou can use localForage with [RequireJS](http://requirejs.org/):\n\n```javascript\ndefine(['localforage'], function(localforage) {\n    // As a callback:\n    localforage.setItem('mykey', 'myvalue', console.log);\n\n    // With a Promise:\n    localforage.setItem('mykey', 'myvalue').then(console.log);\n});\n```\n\n## Browserify and Webpack\n\nlocalForage 1.3+ works with both Browserify and Webpack. If you're using an\nearlier version of localForage and are having issues with Browserify or\nWebpack, please upgrade to 1.3.0 or above.\n\nIf you're using localForage in your own build system (eg. browserify or\nwebpack) make sure you have the\n[required plugins and transformers](https://github.com/mozilla/localForage/blob/master/package.json#L24)\ninstalled (eg. `npm install --save-dev babel-plugin-system-import-transformer`).\n\n## TypeScript\n\nTo import localForage in TypeScript:\n\n```javascript\nconst localForage:LocalForage = require(\"localforage\");\n```\n\nNote that the ES6 style import is not supported for our module type. Check out the following to know why:\n* http://stackoverflow.com/questions/29596714/new-es6-syntax-for-importing-commonjs-amd-modules-i-e-import-foo-require\n* http://www.jbrantly.com/es6-modules-with-typescript-and-webpack/\n\n## Framework Support\n\nIf you use a framework listed, there's a localForage storage driver for the\nmodels in your framework so you can store data offline with localForage. We\nhave drivers for the following frameworks:\n\n* [AngularJS](https://github.com/ocombe/angular-localForage)\n* [Backbone](https://github.com/mozilla/localForage-backbone)\n* [Ember](https://github.com/genkgo/ember-localforage-adapter)\n\nIf you have a driver you'd like listed, please\n[open an issue](https://github.com/mozilla/localForage/issues/new) to have it\nadded to this list.\n\n## Custom Drivers\n\nYou can create your own driver if you want; see the\n[`defineDriver`](https://mozilla.github.io/localForage/#definedriver) API docs.\n\nThere is a [list of custom drivers on the wiki][custom drivers].\n\n[custom drivers]: https://github.com/mozilla/localForage/wiki/Custom-Drivers\n\n# Working on localForage\n\nYou'll need [node/npm](http://nodejs.org/) and\n[bower](http://bower.io/#installing-bower).\n\nTo work on localForage, you should start by\n[forking it](https://github.com/mozilla/localForage/fork) and installing its\ndependencies. Replace `USERNAME` with your GitHub username and run the\nfollowing:\n\n```bash\n# Install bower globally if you don't have it:\nnpm install -g bower\n\n# Replace USERNAME with your GitHub username:\ngit clone git@github.com:USERNAME/localForage.git\ncd localForage\nnpm install\nbower install\n```\n\nOmitting the bower dependencies will cause the tests to fail!\n\n## Running Tests\n\nYou need PhantomJS installed to run local tests. Run `npm test` (or,\ndirectly: `grunt test`). Your code must also pass the\n[linter](http://jshint.com/).\n\nlocalForage is designed to run in the browser, so the tests explicitly require\na browser environment. Local tests are run on a headless WebKit (using\n[PhantomJS](http://phantomjs.org)).\n\nWhen you submit a pull request, tests will be run against all browsers that\nlocalForage supports on Travis CI using [Sauce Labs](https://saucelabs.com/).\n\n## Building the API Documentation\n\nWe currently use a Ruby tool to build our\n[API documentation](https://mozilla.github.io/localForage). You can install the Ruby dependencies with [Bundler](http://bundler.io):\n\n```bash\n# From inside the localForage directory\nbundle install\n```\n\nThen use `grunt` to serve the site:\n\n```bash\ngrunt site\n```\n\nNavigate to [localhost:4567](http://localhost:4567/) in your browser to see the\ndocs.\n\nThere is an [open issue to move to a node tool for the docs](https://github.com/mozilla/localForage/issues/192).\n\n# License\n\nThis program is free software; it is distributed under an\n[Apache License](https://github.com/mozilla/localForage/blob/master/LICENSE).\n\n---\n\nCopyright (c) 2013-2015 [Mozilla](https://mozilla.org)\n([Contributors](https://github.com/mozilla/localForage/graphs/contributors)).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mozilla/localForage.git"
  },
  "scripts": {
    "publish-docs": "node -e \"require('grunt').cli()\" null copy build-rules-html publish-rules",
    "test": "node -e \"require('grunt').cli()\" null test"
  },
  "version": "1.4.2"
}
