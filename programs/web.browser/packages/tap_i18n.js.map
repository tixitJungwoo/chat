{"version":3,"sources":["meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-helpers.coffee","meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-common.coffee","meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-client.coffee","meteor://ðŸ’»app/packages/tap_i18n/lib/tap_i18n/tap_i18n-init.coffee"],"names":["share","helpers"],"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","file":"/packages/tap_i18n.js","sourcesContent":["share.helpers = {}","fallback_language = globals.fallback_language\n\nTAPi18n = ->\n  EventEmitter.call @\n\n  @_fallback_language = fallback_language\n\n  @_language_changed_tracker = new Tracker.Dependency\n\n  @_loaded_languages = [fallback_language] # stores the loaded languages, the fallback language is loaded automatically\n\n  @conf = null # If conf isn't null we assume that tap:i18n is enabled for the project.\n             # We assume conf is valid, we sterilize and validate it during the build process.\n\n  @packages = {} # Stores the packages' package-tap.i18n jsons\n\n  @languages_names = {} # Stores languages that we've found languages files for in the project dir.\n                                      # format:\n                                      # {\n                                      #    lang_tag: [lang_name_in_english, lang_name_in_local_language]\n                                      # }\n\n  @translations = {} # Stores the packages/project translations - Server side only\n                   # fallback_language translations are not stored here\n\n\n  if Meteor.isClient\n    Session.set @_loaded_lang_session_key, null\n\n    @_languageSpecificTranslators = {}\n    @_languageSpecificTranslatorsTrackers = {}\n\n  if Meteor.isServer\n    @server_translators = {}\n\n    Meteor.startup =>\n      # If tap-i18n is enabled for that project\n      if @_enabled()\n        @_registerHTTPMethod()\n\n  @__ = @_getPackageI18nextProxy(globals.project_translations_domain)\n\n  TAPi18next.setLng fallback_language\n\n  return @\n\nUtil.inherits TAPi18n, EventEmitter\n\n_.extend TAPi18n.prototype,\n  _loaded_lang_session_key: \"TAPi18n::loaded_lang\"\n\n  _enable: (conf) ->\n    # tap:i18n gets enabled for a project once a conf file is set for it.\n    # It can be either a conf object that was set by project-tap.i18n file or\n    # a default conf, which is being added if the project has lang files\n    # (*.i18n.json) but not project-tap.i18n\n    @conf = conf\n\n    @._onceEnabled()\n\n  _onceEnabled: () ->\n    # The arch specific code can use this for procedures that should be performed once\n    # tap:i18n gets enabled (project conf file is being set)\n    return\n\n  _enabled: ->\n    # read the comment of @conf\n    @conf?\n\n  _getPackageDomain: (package_name) ->\n    package_name.replace(/:/g, \"-\")\n\n  addResourceBundle: (lang_tag, package_name, translations) ->\n    TAPi18next.addResourceBundle(lang_tag, @_getPackageDomain(package_name), translations)\n\n  _getSpecificLangTranslator: (lang) ->\n    current_lang = TAPi18next.lng()\n\n    translator = null\n    TAPi18next.setLng lang, {fixLng: true}, (lang_translator) =>\n      translator = lang_translator\n\n    # Restore i18next lang that had been changed in the process of generating\n    # lang specific translator\n    TAPi18next.setLng current_lang\n\n    return translator\n\n  _getProjectLanguages: () ->\n    # Return an array of languages available for the current project\n    if @._enabled()\n      if _.isArray @.conf.supported_languages\n        return _.union([@._fallback_language], @.conf.supported_languages)\n      else\n        # If supported_languages is null, all the languages we found\n        # translations files to in the project level are considered supported.\n        # We use the @.languages_names array to tell which languages we found\n        # since for every i18n.json file we found in the project level we add\n        # an entry for its language to @.languages_names in the build process.\n        #\n        # We also know for certain that when tap-i18n is enabled the fallback\n        # lang is in @.languages_names\n        return _.keys @.languages_names\n    else\n      return [@._fallback_language]\n\n  getLanguages: ->\n    if not @._enabled()\n      return null\n\n    languages = {}\n    for lang_tag in @._getProjectLanguages()\n      languages[lang_tag] =\n        name: @.languages_names[lang_tag][1]\n        en: @.languages_names[lang_tag][0]\n\n    languages\n\n  _loadLangFileObject: (language_tag, data) ->\n    for package_name, package_keys of data\n      # Translations that are added by loadTranslations() have higher priority\n      package_keys = _.extend({}, package_keys, @_loadTranslations_cache[language_tag]?[package_name] or {})\n\n      @addResourceBundle(language_tag, package_name, package_keys)\n\n  _loadTranslations_cache: {}\n  loadTranslations: (translations, namespace) ->\n    project_languages = @_getProjectLanguages()\n\n    for language_tag, translation_keys of translations\n      if not @_loadTranslations_cache[language_tag]?\n        @_loadTranslations_cache[language_tag] = {}\n\n      if not @_loadTranslations_cache[language_tag][namespace]?\n        @_loadTranslations_cache[language_tag][namespace] = {}\n\n      _.extend(@_loadTranslations_cache[language_tag][namespace], translation_keys)\n\n      @addResourceBundle(language_tag, namespace, translation_keys)\n\n      if Meteor.isClient and @getLanguage() == language_tag\n        # Retranslate if session language updated\n        @_language_changed_tracker.changed()","_.extend TAPi18n.prototype,\n  _languageSpecificTranslators: null\n  _languageSpecificTranslatorsTrackers: null\n\n  _getLanguageFilePath: (lang_tag) ->\n    if not @_enabled()\n      return null\n\n    path = if @.conf.cdn_path? then @.conf.cdn_path else @.conf.i18n_files_route\n    path = path.replace /\\/$/, \"\"\n    if Meteor.isCordova and path[0] == \"/\"\n      path = Meteor.absoluteUrl().replace(/\\/+$/, \"\") + path\n\n    \"#{path}/#{lang_tag}.json\"\n\n  _loadLanguage: (languageTag) ->\n    # Load languageTag and its dependencies languages to TAPi18next if we\n    # haven't loaded them already.\n    #\n    # languageTag dependencies languages are:\n    # * The base language if languageTag is a dialect.\n    # * The fallback language (en) if we haven't loaded it already.\n    #\n    # Returns a deferred object that resolves with no arguments if all files\n    # loaded successfully to TAPi18next and rejects with array of error\n    # messages otherwise\n    #\n    # Example:\n    # TAPi18n._loadLanguage(\"pt-BR\")\n    #   .done(function () {\n    #     console.log(\"languageLoaded successfully\");\n    #   })\n    #   .fail(function (messages) {\n    #     console.log(\"Couldn't load languageTag\", messages);\n    #   })\n    #\n    # The above example will attempt to load pt-BR, pt and en\n\n    dfd = new $.Deferred()\n\n    if not @_enabled()\n      return dfd.reject \"tap-i18n is not enabled in the project level, check tap-i18n README\"\n\n    project_languages = @_getProjectLanguages()\n\n    if languageTag in project_languages\n      if languageTag not in @_loaded_languages\n        loadLanguageTag = =>\n          jqXHR = $.getJSON(@_getLanguageFilePath(languageTag))\n\n          jqXHR.done (data) =>\n            @_loadLangFileObject(languageTag, data)\n\n            @_loaded_languages.push languageTag\n\n            dfd.resolve()\n\n          jqXHR.fail (xhr, error_code) =>\n            dfd.reject(\"Couldn't load language '#{languageTag}' JSON: #{error_code}\")\n\n        directDependencyLanguageTag = if \"-\" in languageTag then languageTag.replace(/-.*/, \"\") else fallback_language\n\n        # load dependency language if it is part of the project and not the fallback language\n        if languageTag != fallback_language and directDependencyLanguageTag in project_languages\n          dependencyLoadDfd = @_loadLanguage directDependencyLanguageTag\n\n          dependencyLoadDfd.done =>\n            # All dependencies loaded successfully\n            loadLanguageTag()\n\n          dependencyLoadDfd.fail (message) =>\n            dfd.reject(\"Loading process failed since dependency language\n              '#{directDependencyLanguageTag}' failed to load: \" + message)\n        else\n          loadLanguageTag()\n      else\n        # languageTag loaded already\n        dfd.resolve()\n    else\n      dfd.reject([\"Language #{languageTag} is not supported\"])\n\n    return dfd.promise()\n\n  _registerHelpers: (package_name, template) ->\n    if package_name != globals.project_translations_domain\n      tapI18nextProxy = @_getPackageI18nextProxy(@packages[package_name].namespace)\n    else\n      tapI18nextProxy = @_getPackageI18nextProxy(globals.project_translations_domain)\n\n    underscore_helper = (key, args...) ->\n      options = (args.pop()).hash\n      if not _.isEmpty(args)\n        options.sprintf = args\n\n      tapI18nextProxy(key, options)\n\n    # template specific helpers\n    if package_name != globals.project_translations_domain\n      # {{_ }}\n      if Template[template]? and Template[template].helpers?\n        helpers = {}\n        helpers[@packages[package_name].helper_name] = underscore_helper\n        Template[template].helpers(helpers)\n\n    # global helpers\n    else\n      # {{_ }}\n      UI.registerHelper @conf.helper_name, underscore_helper\n\n      # {{languageTag}}\n      UI.registerHelper \"languageTag\", () => @getLanguage()\n\n    return\n      \n  _getRegisterHelpersProxy: (package_name) ->\n    # A proxy to _registerHelpers where the package_name is fixed to package_name\n    (template) =>\n      @_registerHelpers(package_name, template)\n\n  _prepareLanguageSpecificTranslator: (lang_tag) ->\n    dfd = (new $.Deferred()).resolve().promise()\n\n    if lang_tag of @_languageSpecificTranslatorsTrackers\n      return dfd\n\n    @_languageSpecificTranslatorsTrackers[lang_tag] = new Tracker.Dependency\n\n    if not(lang_tag of @_languageSpecificTranslators)\n      dfd = @_loadLanguage(lang_tag)\n        .done =>\n          @_languageSpecificTranslators[lang_tag] = @_getSpecificLangTranslator(lang_tag)\n\n          @_languageSpecificTranslatorsTrackers[lang_tag].changed()\n\n    return dfd\n\n  _getPackageI18nextProxy: (package_name) ->\n    # A proxy to TAPi18next.t where the namespace is preset to the package's\n\n    (key, options, lang_tag=null) =>\n      # Devs get confused and use lang option instead of lng option, make lang\n      # alias of lng\n      if options?.lang? and not options?.lng?\n        options.lng = options.lang\n\n      if options?.lng? and not lang_tag?\n        lang_tag = options.lng\n        # Remove options.lng so we won't pass it to the regular TAPi18next\n        # before the language specific translator is ready to keep behavior\n        # consistent.\n        #\n        # If lang is actually ready before the language specifc translator is\n        # ready, TAPi18next will translate to lang_tag if we won't remove\n        # options.lng.\n        delete options.lng\n\n      if lang_tag?\n        @_prepareLanguageSpecificTranslator(lang_tag)\n\n        @_languageSpecificTranslatorsTrackers[lang_tag].depend()\n\n        if lang_tag of @_languageSpecificTranslators\n          return @_languageSpecificTranslators[lang_tag] \"#{TAPi18n._getPackageDomain(package_name)}:#{key}\", options\n        else\n          return TAPi18next.t \"#{TAPi18n._getPackageDomain(package_name)}:#{key}\", options\n\n      # If inside a reactive computation, we want to invalidate the computation if the client lang changes\n      @_language_changed_tracker.depend()\n\n\n      TAPi18next.t \"#{TAPi18n._getPackageDomain(package_name)}:#{key}\", options\n\n  _onceEnabled: () ->\n    @_registerHelpers globals.project_translations_domain\n\n  _abortPreviousSetLang: null\n  setLanguage: (lang_tag) ->\n    self = @\n\n    @_abortPreviousSetLang?()\n\n    isAborted = false\n    @_abortPreviousSetLang = -> isAborted = true\n    \n    @_loadLanguage(lang_tag).then =>\n      if not isAborted\n        TAPi18next.setLng(lang_tag)\n\n        @_language_changed_tracker.changed()\n        Session.set @_loaded_lang_session_key, lang_tag\n\n  getLanguage: ->\n    if not @._enabled()\n      return null\n\n    session_lang = Session.get @_loaded_lang_session_key\n\n    if session_lang? then session_lang else @._fallback_language\n","TAPi18n = new TAPi18n()"]}