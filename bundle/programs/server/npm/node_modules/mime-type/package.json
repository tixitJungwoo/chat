{
  "_args": [
    [
      {
        "raw": "mime-type@^3.0.4",
        "scope": null,
        "escapedName": "mime-type",
        "name": "mime-type",
        "rawSpec": "^3.0.4",
        "spec": ">=3.0.4 <4.0.0",
        "type": "range"
      },
      "/app/lilychat"
    ]
  ],
  "_from": "mime-type@>=3.0.4 <4.0.0",
  "_id": "mime-type@3.0.5",
  "_inCache": true,
  "_location": "/mime-type",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/mime-type-3.0.5.tgz_1494996167674_0.4888475686311722"
  },
  "_npmUser": {
    "name": "riceball",
    "email": "snowyu.lee@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mime-type@^3.0.4",
    "scope": null,
    "escapedName": "mime-type",
    "name": "mime-type",
    "rawSpec": "^3.0.4",
    "spec": ">=3.0.4 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mime-type/-/mime-type-3.0.5.tgz",
  "_shasum": "7ed2926a7da822689f81254f5987fe9503622e9a",
  "_shrinkwrap": null,
  "_spec": "mime-type@^3.0.4",
  "_where": "/app/lilychat",
  "bugs": {
    "url": "https://github.com/snowyu/mime-type.js/issues"
  },
  "contributors": [
    {
      "name": "Riceball LEE https://github.com/snowyu"
    },
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Jeremiah Senkpiel",
      "email": "fishrock123@rocketmail.com",
      "url": "https://searchbeam.jit.su"
    },
    {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    }
  ],
  "dependencies": {
    "media-typer": "^0.3.0",
    "minimatch": "^3.0.4",
    "path.js": "^1.0.7",
    "util-ex": "^0.3.15"
  },
  "description": "the custom more powerful mime-type utility can work with mime-db.",
  "devDependencies": {
    "coffee-script": "^1.12.6",
    "istanbul": "0.4.5",
    "mime-db": "^1.28.0",
    "mocha": "~3.4.1",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "shasum": "7ed2926a7da822689f81254f5987fe9503622e9a",
    "tarball": "https://registry.npmjs.org/mime-type/-/mime-type-3.0.5.tgz"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "lib",
    "src",
    "with-db.js",
    "index.js"
  ],
  "gitHead": "12b80817f155a3a70eba0b87a928bf5e495eb299",
  "homepage": "https://github.com/snowyu/mime-type.js#readme",
  "keywords": [
    "mime",
    "mime-db",
    "types"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "riceball",
      "email": "snowyu.lee@gmail.com"
    }
  ],
  "name": "mime-type",
  "optionalDependencies": {},
  "pre-commit": [
    "test"
  ],
  "readme": "# mime-type\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nThe custom more powerful mime-type utility can work with [mime-db](https://github.com/jshttp/mime-db).\n\nfork from [mime-types](https://github.com/jshttp/mime-types), these features added:\n\n- you can load mime-types via [mime-db](https://github.com/jshttp/mime-db) `mime = new Mime(require('mime-db'))`\n  - or use `mime = require('mime-type/with-db')` directly, but first\n  - you need `npm install mime-db`\n- `mime = new Mime()` business, so you could do `lookup = mime.lookup.bind(mime)`.\n- you can add the mime-type via `.define(type, mime)` functionality\n- you can add many mime-type via `.load(mimes)` functionality\n- you can search the mime-type via `.glob(pattern)` functionality\n- you can remove a mime-type via `.delete(type)` functionality\n- you can clear mime-types via `.clear(filter)` functionality\n- `.exist(type)` functionality to check whether a mime-type is exist.\n- `.extensions` will be deprecated, use `mime[type].extensions` instead.\n- All functions return `undefined` if input is invalid or not found.\n\nOtherwise, the API is compatible.\n\n## Install\n\n```sh\n$ npm install mime-type\n```\n\n## API\n\n```js\n//create an empty mime-type:\nvar mime = require('mime-type')()\n//or create an instance and load mime-db. you need `npm install mime-db`\nvar mime = require('mime-type/with-db')\n//it equals to:\nvar db = require('mime-db')\nvar mime = require('mime-type')(db)\n```\n\nAll functions return `undefined` if input is invalid or not found.\n\n### mime.lookup(path)\n\nLookup the content-type associated with a file.\n\n```js\nmime.lookup('json')             // 'application/json'\nmime.lookup('.md')              // 'text/x-markdown'\nmime.lookup('file.html')        // 'text/html'\nmime.lookup('folder/file.js')   // 'application/javascript'\nmime.lookup('folder/.htaccess') // false\n\nmime.lookup('cats') // false\n```\n\n### mime.glob(pattern)\n\nReturn all MIME types which matching a pattern\n\n```js\nmime.glob('*/*')             // ['application/octet-stream']\nmime.glob('*/*markdown')     // ['text/x-markdown']\nmime.glob('text/j*')         // ['text/jade', 'text/jsx']\nmime.glob('unknown/x')       // []\n```\n\n### mime.exist(type)\n\ntest whether a mime-type is exist.\nIt is an alias for `mime.hasOwnProperty`\n\n```js\nmime.exist('text/x-markdown') // true\nmime.exist('unknown/xxx')     // false\n```\n\n### mime.define(type, object, duplicationWay)\n\ndefine a new mime-type. the duplicationWay is the process way of duplication extensions:\n\n* mime.dupDefault: the default process way.\n* mime.dupOverwrite: the news overwrite the olds\n* mime.dupSkip: just skip it.\n* mime.dupAppend: append the news to the exist extensions.\n\nreturn the added extensions list if successful or `undefined`.\n\n```js\nmime.define('script/coffee', {\n  extensions: ['coffee', 'litcoffee', 'coffee.md']\n}, mime.dupAppend)\nmime.lookup ('coffee') //[ 'text/coffeescript', 'script/coffee' ]\n```\n\n### mime.delete(type)\n\nremove a specified mime-type\n\n```js\nmime.delete('script/coffee') //true\n```\n\n### mime.clear(filter)\n\nclear all or specified mime-types\n\nthe filter could be a string pattern or a function\n\nreturn the count of deleted mime-types.\n\n```js\nmime.clear() //clear all mime-types\nmime.clear('text/*') //clear the specified mime-types\nmime.clear(function(type, mime){\n  return type.substr(0,5) === 'text/'\n})\n```\n\n### mime.load(mimes)\n\nload a lot of mime-types. return the count of loaded mime-types.\n\n```js\nmime.clear() //clear all mime-types\nmime.load({\n  'script/coffee': {\n    extensions: ['coffee', 'coffee.md', 'litcoffee'],\n    compressible: true,\n    charset: 'utf-8',\n    defaultExtension: 'coffee.md'\n  },\n  'script/python': {\n    extensions: ['py', 'py.md', 'litpy'],\n    compressible: true,\n    charset: 'utf-8'\n  }\n})\n```\n\n### mime.contentType(type)\n\nCreate a full content-type header given a content-type or extension.\n\n```js\nmime.contentType('markdown')  // 'text/x-markdown; charset=utf-8'\nmime.contentType('file.json') // 'application/json; charset=utf-8'\n\n// from a full path\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\n```\n\n### mime.extension(type)\n\nGet the default extension for a content-type.\n\n```js\nmime.extension('application/octet-stream') // 'bin'\n```\n\n### mime.charset(type)\n\nLookup the implied default charset of a content-type.\n\n```js\nmime.charset('text/x-markdown') // 'UTF-8'\n```\n\n### var type = mime.types[extension]\n\nA map of content-types by extension.\n\n### [extensions...] = mime.extensions[type]\n\nA map of extensions by content-type.\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/mime-type.svg\n[npm-url]: https://npmjs.org/package/mime-type\n[node-version-image]: https://img.shields.io/node/v/mime-type.svg\n[node-version-url]: http://nodejs.org/download/\n[travis-image]: https://img.shields.io/travis/snowyu/mime-type.js/master.svg\n[travis-url]: https://travis-ci.org/snowyu/mime-type.js\n[coveralls-image]: https://img.shields.io/coveralls/snowyu/mime-type.js/master.svg\n[coveralls-url]: https://coveralls.io/r/snowyu/mime-type.js\n[downloads-image]: https://img.shields.io/npm/dm/mime-type.svg\n[downloads-url]: https://npmjs.org/package/mime-type\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/snowyu/mime-type.js.git"
  },
  "scripts": {
    "pretest": "coffee -o lib -c src/*.coffee",
    "test": "mocha --reporter spec test/test.js",
    "test-cov": "npm run pretest; istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot test/test.js",
    "test-travis": "npm run pretest; istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot test/test.js"
  },
  "version": "3.0.5"
}
