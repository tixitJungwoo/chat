{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat_importer/lib/_importer.coffee","meteor://ðŸ’»app/packages/rocketchat_importer/lib/importTool.coffee","meteor://ðŸ’»app/lib/importTool.coffee.js","meteor://ðŸ’»app/packages/rocketchat_importer/client/admin/adminImport.coffee","meteor://ðŸ’»app/client/admin/adminImport.coffee.js","meteor://ðŸ’»app/packages/rocketchat_importer/client/admin/adminImportPrepare.coffee","meteor://ðŸ’»app/client/admin/adminImportPrepare.coffee.js","meteor://ðŸ’»app/packages/rocketchat_importer/client/admin/adminImportProgress.coffee","meteor://ðŸ’»app/client/admin/adminImportProgress.coffee.js"],"names":["Importer","Importers","addImporter","name","importer","options","mimeType","warnings","Template","adminImport","helpers","isAdmin","RocketChat","authz","hasRole","Meteor","userId","isImporters","Object","keys","length","getDescription","TAPi18n","__","from","importers","_","each","key","push","events","event","call","error","data","console","log","t","handleError","FlowRouter","go","toastr","module","import","v","adminImportPrepare","importerKey","getParam","i","isLoaded","instance","loaded","get","isPreparing","preparing","users","channels","template","blob","e","files","j","len","reader","ref","results","originalEvent","target","dataTransfer","set","FileReader","readAsDataURL","onloadend","result","type","warn","step","btn","channel","k","len1","ref1","user","$","prop","do_import","user_id","is","channel_id","is_deleted","attr","is_archived","onCreated","loadSelection","ReactiveVar","progress","err","adminImportProgress","completed","total","updateProgress","success","toUpperCase","slice","count","setTimeout","warning"],"mappings":"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","file":"/packages/rocketchat_importer.js","sourcesContent":["Importer = {}\n","Importer.Importers = {}\n\nImporter.addImporter = (name, importer, options) ->\n\tif not Importer.Importers[name]?\n\t\tImporter.Importers[name] =\n\t\t\tname: options.name\n\t\t\timporter: importer\n\t\t\tmimeType: options.mimeType\n\t\t\twarnings: options.warnings\n","Importer.Importers = {};\n\nImporter.addImporter = function(name, importer, options) {\n  if (Importer.Importers[name] == null) {\n    return Importer.Importers[name] = {\n      name: options.name,\n      importer: importer,\n      mimeType: options.mimeType,\n      warnings: options.warnings\n    };\n  }\n};\n","Template.adminImport.helpers\n\tisAdmin: ->\n\t\treturn RocketChat.authz.hasRole(Meteor.userId(), 'admin')\n\tisImporters: ->\n\t\treturn Object.keys(Importer.Importers).length > 0\n\tgetDescription: (importer) ->\n\t\treturn TAPi18n.__('Importer_From_Description', { from: importer.name })\n\timporters: ->\n\t\timporters = []\n\t\t_.each Importer.Importers, (importer, key) ->\n\t\t\timporter.key = key\n\t\t\timporters.push importer\n\t\treturn importers\n\nTemplate.adminImport.events\n\t'click .start-import': (event) ->\n\t\timporter = @\n\n\t\tMeteor.call 'setupImporter', importer.key, (error, data) ->\n\t\t\tif error\n\t\t\t\tconsole.log t('importer_setup_error'), importer.key, error\n\t\t\t\treturn handleError(error)\n\t\t\telse\n\t\t\t\tFlowRouter.go '/admin/import/prepare/' + importer.key\n","Template.adminImport.helpers({\n  isAdmin: function() {\n    return RocketChat.authz.hasRole(Meteor.userId(), 'admin');\n  },\n  isImporters: function() {\n    return Object.keys(Importer.Importers).length > 0;\n  },\n  getDescription: function(importer) {\n    return TAPi18n.__('Importer_From_Description', {\n      from: importer.name\n    });\n  },\n  importers: function() {\n    var importers;\n    importers = [];\n    _.each(Importer.Importers, function(importer, key) {\n      importer.key = key;\n      return importers.push(importer);\n    });\n    return importers;\n  }\n});\n\nTemplate.adminImport.events({\n  'click .start-import': function(event) {\n    var importer;\n    importer = this;\n    return Meteor.call('setupImporter', importer.key, function(error, data) {\n      if (error) {\n        console.log(t('importer_setup_error'), importer.key, error);\n        return handleError(error);\n      } else {\n        return FlowRouter.go('/admin/import/prepare/' + importer.key);\n      }\n    });\n  }\n});\n","import toastr from 'toastr'\nTemplate.adminImportPrepare.helpers\n\tisAdmin: ->\n\t\treturn RocketChat.authz.hasRole(Meteor.userId(), 'admin')\n\timporter: ->\n\t\timporterKey = FlowRouter.getParam('importer')\n\t\timporter = undefined\n\t\t_.each Importer.Importers, (i, key) ->\n\t\t\ti.key = key\n\t\t\tif key == importerKey\n\t\t\t\timporter = i\n\n\t\treturn importer\n\tisLoaded: ->\n\t\treturn Template.instance().loaded.get()\n\tisPreparing: ->\n\t\treturn Template.instance().preparing.get()\n\tusers: ->\n\t\treturn Template.instance().users.get()\n\tchannels: ->\n\t\treturn Template.instance().channels.get()\n\nTemplate.adminImportPrepare.events\n\t'change .import-file-input': (event, template) ->\n\t\timporter = @\n\t\treturn if not importer.key\n\n\t\te = event.originalEvent or event\n\t\tfiles = e.target.files\n\t\tif not files or files.length is 0\n\t\t\tfiles = e.dataTransfer?.files or []\n\n\t\tfor blob in files\n\t\t\ttemplate.preparing.set true\n\n\t\t\treader = new FileReader()\n\t\t\treader.readAsDataURL(blob)\n\t\t\treader.onloadend = ->\n\t\t\t\tMeteor.call 'prepareImport', importer.key, reader.result, blob.type, blob.name, (error, data) ->\n\t\t\t\t\tif error\n\t\t\t\t\t\ttoastr.error t('Invalid_Import_File_Type')\n\t\t\t\t\t\ttemplate.preparing.set false\n\t\t\t\t\t\treturn\n\n\t\t\t\t\tif !data\n\t\t\t\t\t\tconsole.warn 'The importer ' + importer.key + ' is not set up correctly, as it did not return any data.'\n\t\t\t\t\t\ttoastr.error t('Importer_not_setup')\n\t\t\t\t\t\ttemplate.preparing.set false\n\t\t\t\t\t\treturn\n\n\t\t\t\t\tif data.step\n\t\t\t\t\t\tconsole.warn 'Invalid file, contains `data.step`.', data\n\t\t\t\t\t\ttoastr.error t('Invalid_Export_File', importer.key)\n\t\t\t\t\t\ttemplate.preparing.set false\n\t\t\t\t\t\treturn\n\n\t\t\t\t\ttemplate.users.set data.users\n\t\t\t\t\ttemplate.channels.set data.channels\n\t\t\t\t\ttemplate.loaded.set true\n\t\t\t\t\ttemplate.preparing.set false\n\n\t'click .button.start': (event, template) ->\n\t\tbtn = this\n\t\t$(btn).prop \"disabled\", true\n\t\timporter = @\n\t\tfor user in template.users.get()\n\t\t\tuser.do_import = $(\"[name=#{user.user_id}]\").is(':checked')\n\n\t\tfor channel in template.channels.get()\n\t\t\tchannel.do_import = $(\"[name=#{channel.channel_id}]\").is(':checked')\n\n\t\tMeteor.call 'startImport', FlowRouter.getParam('importer'), { users: template.users.get(), channels: template.channels.get() }, (error, data) ->\n\t\t\tif error\n\t\t\t\tconsole.warn 'Error on starting the import:', error\n\t\t\t\treturn handleError(error)\n\t\t\telse\n\t\t\t\tFlowRouter.go '/admin/import/progress/' + FlowRouter.getParam('importer')\n\n\t'click .button.restart': (event, template) ->\n\t\tMeteor.call 'restartImport', FlowRouter.getParam('importer'), (error, data) ->\n\t\t\tif error\n\t\t\t\tconsole.warn 'Error while restarting the import:', error\n\t\t\t\thandleError(error)\n\t\t\t\treturn\n\n\t\t\ttemplate.users.set []\n\t\t\ttemplate.channels.set []\n\t\t\ttemplate.loaded.set false\n\n\t'click .button.uncheck-deleted-users': (event, template) ->\n\t\tfor user in template.users.get() when user.is_deleted\n\t\t\t$(\"[name=#{user.user_id}]\").attr('checked', false);\n\n\t'click .button.uncheck-archived-channels': (event, template) ->\n\t\tfor channel in template.channels.get() when channel.is_archived\n\t\t\t$(\"[name=#{channel.channel_id}]\").attr('checked', false);\n\n\nTemplate.adminImportPrepare.onCreated ->\n\tinstance = @\n\t@preparing = new ReactiveVar true\n\t@loaded = new ReactiveVar false\n\t@users = new ReactiveVar []\n\t@channels = new ReactiveVar []\n\n\tloadSelection = (progress) ->\n\t\tif progress?.step\n\t\t\tswitch progress.step\n\t\t\t\t#When the import is running, take the user to the progress page\n\t\t\t\twhen 'importer_importing_started', 'importer_importing_users', 'importer_importing_channels', 'importer_importing_messages', 'importer_finishing'\n\t\t\t\t\tFlowRouter.go '/admin/import/progress/' + FlowRouter.getParam('importer')\n\t\t\t\t# when the import is done, restart it (new instance)\n\t\t\t\twhen 'importer_user_selection'\n\t\t\t\t\tMeteor.call 'getSelectionData', FlowRouter.getParam('importer'), (error, data) ->\n\t\t\t\t\t\tif error\n\t\t\t\t\t\t\thandleError error\n\t\t\t\t\t\tinstance.users.set data.users\n\t\t\t\t\t\tinstance.channels.set data.channels\n\t\t\t\t\t\tinstance.loaded.set true\n\t\t\t\t\t\tinstance.preparing.set false\n\t\t\t\twhen 'importer_new'\n\t\t\t\t\tinstance.preparing.set false\n\t\t\t\telse\n\t\t\t\t\tMeteor.call 'restartImport', FlowRouter.getParam('importer'), (error, progress) ->\n\t\t\t\t\t\tif error\n\t\t\t\t\t\t\thandleError(error)\n\t\t\t\t\t\tloadSelection(progress)\n\t\telse\n\t\t\tconsole.warn 'Invalid progress information.', progress\n\n\t# Load the initial progress to determine what we need to do\n\tif FlowRouter.getParam('importer')\n\t\tMeteor.call 'getImportProgress', FlowRouter.getParam('importer'), (error, progress) ->\n\t\t\tif error\n\t\t\t\tconsole.warn 'Error while getting the import progress:', error\n\t\t\t\thandleError error\n\t\t\t\treturn\n\n\t\t\t# if the progress isnt defined, that means there currently isn't an instance\n\t\t\t# of the importer, so we need to create it\n\t\t\tif progress is undefined\n\t\t\t\tMeteor.call 'setupImporter', FlowRouter.getParam('importer'), (err, data) ->\n\t\t\t\t\tif err\n\t\t\t\t\t\thandleError(err)\n\t\t\t\t\tinstance.preparing.set false\n\t\t\t\t\tloadSelection(data)\n\t\t\telse\n\t\t\t\t# Otherwise, we might need to do something based upon the current step\n\t\t\t\t# of the import\n\t\t\t\tloadSelection(progress)\n\telse\n\t\tFlowRouter.go '/admin/import'\n","import toastr from 'toastr';\n\nTemplate.adminImportPrepare.helpers({\n  isAdmin: function() {\n    return RocketChat.authz.hasRole(Meteor.userId(), 'admin');\n  },\n  importer: function() {\n    var importer, importerKey;\n    importerKey = FlowRouter.getParam('importer');\n    importer = void 0;\n    _.each(Importer.Importers, function(i, key) {\n      i.key = key;\n      if (key === importerKey) {\n        return importer = i;\n      }\n    });\n    return importer;\n  },\n  isLoaded: function() {\n    return Template.instance().loaded.get();\n  },\n  isPreparing: function() {\n    return Template.instance().preparing.get();\n  },\n  users: function() {\n    return Template.instance().users.get();\n  },\n  channels: function() {\n    return Template.instance().channels.get();\n  }\n});\n\nTemplate.adminImportPrepare.events({\n  'change .import-file-input': function(event, template) {\n    var blob, e, files, importer, j, len, reader, ref, results;\n    importer = this;\n    if (!importer.key) {\n      return;\n    }\n    e = event.originalEvent || event;\n    files = e.target.files;\n    if (!files || files.length === 0) {\n      files = ((ref = e.dataTransfer) != null ? ref.files : void 0) || [];\n    }\n    results = [];\n    for (j = 0, len = files.length; j < len; j++) {\n      blob = files[j];\n      template.preparing.set(true);\n      reader = new FileReader();\n      reader.readAsDataURL(blob);\n      results.push(reader.onloadend = function() {\n        return Meteor.call('prepareImport', importer.key, reader.result, blob.type, blob.name, function(error, data) {\n          if (error) {\n            toastr.error(t('Invalid_Import_File_Type'));\n            template.preparing.set(false);\n            return;\n          }\n          if (!data) {\n            console.warn('The importer ' + importer.key + ' is not set up correctly, as it did not return any data.');\n            toastr.error(t('Importer_not_setup'));\n            template.preparing.set(false);\n            return;\n          }\n          if (data.step) {\n            console.warn('Invalid file, contains `data.step`.', data);\n            toastr.error(t('Invalid_Export_File', importer.key));\n            template.preparing.set(false);\n            return;\n          }\n          template.users.set(data.users);\n          template.channels.set(data.channels);\n          template.loaded.set(true);\n          return template.preparing.set(false);\n        });\n      });\n    }\n    return results;\n  },\n  'click .button.start': function(event, template) {\n    var btn, channel, importer, j, k, len, len1, ref, ref1, user;\n    btn = this;\n    $(btn).prop(\"disabled\", true);\n    importer = this;\n    ref = template.users.get();\n    for (j = 0, len = ref.length; j < len; j++) {\n      user = ref[j];\n      user.do_import = $(\"[name=\" + user.user_id + \"]\").is(':checked');\n    }\n    ref1 = template.channels.get();\n    for (k = 0, len1 = ref1.length; k < len1; k++) {\n      channel = ref1[k];\n      channel.do_import = $(\"[name=\" + channel.channel_id + \"]\").is(':checked');\n    }\n    return Meteor.call('startImport', FlowRouter.getParam('importer'), {\n      users: template.users.get(),\n      channels: template.channels.get()\n    }, function(error, data) {\n      if (error) {\n        console.warn('Error on starting the import:', error);\n        return handleError(error);\n      } else {\n        return FlowRouter.go('/admin/import/progress/' + FlowRouter.getParam('importer'));\n      }\n    });\n  },\n  'click .button.restart': function(event, template) {\n    return Meteor.call('restartImport', FlowRouter.getParam('importer'), function(error, data) {\n      if (error) {\n        console.warn('Error while restarting the import:', error);\n        handleError(error);\n        return;\n      }\n      template.users.set([]);\n      template.channels.set([]);\n      return template.loaded.set(false);\n    });\n  },\n  'click .button.uncheck-deleted-users': function(event, template) {\n    var j, len, ref, results, user;\n    ref = template.users.get();\n    results = [];\n    for (j = 0, len = ref.length; j < len; j++) {\n      user = ref[j];\n      if (user.is_deleted) {\n        results.push($(\"[name=\" + user.user_id + \"]\").attr('checked', false));\n      }\n    }\n    return results;\n  },\n  'click .button.uncheck-archived-channels': function(event, template) {\n    var channel, j, len, ref, results;\n    ref = template.channels.get();\n    results = [];\n    for (j = 0, len = ref.length; j < len; j++) {\n      channel = ref[j];\n      if (channel.is_archived) {\n        results.push($(\"[name=\" + channel.channel_id + \"]\").attr('checked', false));\n      }\n    }\n    return results;\n  }\n});\n\nTemplate.adminImportPrepare.onCreated(function() {\n  var instance, loadSelection;\n  instance = this;\n  this.preparing = new ReactiveVar(true);\n  this.loaded = new ReactiveVar(false);\n  this.users = new ReactiveVar([]);\n  this.channels = new ReactiveVar([]);\n  loadSelection = function(progress) {\n    if (progress != null ? progress.step : void 0) {\n      switch (progress.step) {\n        case 'importer_importing_started':\n        case 'importer_importing_users':\n        case 'importer_importing_channels':\n        case 'importer_importing_messages':\n        case 'importer_finishing':\n          return FlowRouter.go('/admin/import/progress/' + FlowRouter.getParam('importer'));\n        case 'importer_user_selection':\n          return Meteor.call('getSelectionData', FlowRouter.getParam('importer'), function(error, data) {\n            if (error) {\n              handleError(error);\n            }\n            instance.users.set(data.users);\n            instance.channels.set(data.channels);\n            instance.loaded.set(true);\n            return instance.preparing.set(false);\n          });\n        case 'importer_new':\n          return instance.preparing.set(false);\n        default:\n          return Meteor.call('restartImport', FlowRouter.getParam('importer'), function(error, progress) {\n            if (error) {\n              handleError(error);\n            }\n            return loadSelection(progress);\n          });\n      }\n    } else {\n      return console.warn('Invalid progress information.', progress);\n    }\n  };\n  if (FlowRouter.getParam('importer')) {\n    return Meteor.call('getImportProgress', FlowRouter.getParam('importer'), function(error, progress) {\n      if (error) {\n        console.warn('Error while getting the import progress:', error);\n        handleError(error);\n        return;\n      }\n      if (progress === void 0) {\n        return Meteor.call('setupImporter', FlowRouter.getParam('importer'), function(err, data) {\n          if (err) {\n            handleError(err);\n          }\n          instance.preparing.set(false);\n          return loadSelection(data);\n        });\n      } else {\n        return loadSelection(progress);\n      }\n    });\n  } else {\n    return FlowRouter.go('/admin/import');\n  }\n});\n","import toastr from 'toastr'\nTemplate.adminImportProgress.helpers\n\tstep: ->\n\t\treturn Template.instance().step.get()\n\tcompleted: ->\n\t\treturn Template.instance().completed.get()\n\ttotal: ->\n\t\treturn Template.instance().total.get()\n\nTemplate.adminImportProgress.onCreated ->\n\tinstance = @\n\t@step = new ReactiveVar t('Loading...')\n\t@completed = new ReactiveVar 0\n\t@total = new ReactiveVar 0\n\t@updateProgress = ->\n\t\tif FlowRouter.getParam('importer') isnt ''\n\t\t\tMeteor.call 'getImportProgress', FlowRouter.getParam('importer'), (error, progress) ->\n\t\t\t\tif error\n\t\t\t\t\tconsole.warn 'Error on getting the import progress:', error\n\t\t\t\t\thandleError error\n\t\t\t\t\treturn\n\n\t\t\t\tif progress\n\t\t\t\t\tif progress.step is 'importer_done'\n\t\t\t\t\t\ttoastr.success t(progress.step[0].toUpperCase() + progress.step.slice(1))\n\t\t\t\t\t\tFlowRouter.go '/admin/import'\n\t\t\t\t\telse if progress.step is 'importer_import_failed'\n\t\t\t\t\t\ttoastr.error t(progress.step[0].toUpperCase() + progress.step.slice(1))\n\t\t\t\t\t\tFlowRouter.go '/admin/import/prepare/' + FlowRouter.getParam('importer')\n\t\t\t\t\telse\n\t\t\t\t\t\tinstance.step.set t(progress.step[0].toUpperCase() + progress.step.slice(1))\n\t\t\t\t\t\tinstance.completed.set progress.count.completed\n\t\t\t\t\t\tinstance.total.set progress.count.total\n\t\t\t\t\t\tsetTimeout(() ->\n\t\t\t\t\t\t\tinstance.updateProgress()\n\t\t\t\t\t\t, 100)\n\t\t\t\telse\n\t\t\t\t\ttoastr.warning t('Importer_not_in_progress')\n\t\t\t\t\tFlowRouter.go '/admin/import/prepare/' + FlowRouter.getParam('importer')\n\n\tinstance.updateProgress()\n","import toastr from 'toastr';\n\nTemplate.adminImportProgress.helpers({\n  step: function() {\n    return Template.instance().step.get();\n  },\n  completed: function() {\n    return Template.instance().completed.get();\n  },\n  total: function() {\n    return Template.instance().total.get();\n  }\n});\n\nTemplate.adminImportProgress.onCreated(function() {\n  var instance;\n  instance = this;\n  this.step = new ReactiveVar(t('Loading...'));\n  this.completed = new ReactiveVar(0);\n  this.total = new ReactiveVar(0);\n  this.updateProgress = function() {\n    if (FlowRouter.getParam('importer') !== '') {\n      return Meteor.call('getImportProgress', FlowRouter.getParam('importer'), function(error, progress) {\n        if (error) {\n          console.warn('Error on getting the import progress:', error);\n          handleError(error);\n          return;\n        }\n        if (progress) {\n          if (progress.step === 'importer_done') {\n            toastr.success(t(progress.step[0].toUpperCase() + progress.step.slice(1)));\n            return FlowRouter.go('/admin/import');\n          } else if (progress.step === 'importer_import_failed') {\n            toastr.error(t(progress.step[0].toUpperCase() + progress.step.slice(1)));\n            return FlowRouter.go('/admin/import/prepare/' + FlowRouter.getParam('importer'));\n          } else {\n            instance.step.set(t(progress.step[0].toUpperCase() + progress.step.slice(1)));\n            instance.completed.set(progress.count.completed);\n            instance.total.set(progress.count.total);\n            return setTimeout(function() {\n              return instance.updateProgress();\n            }, 100);\n          }\n        } else {\n          toastr.warning(t('Importer_not_in_progress'));\n          return FlowRouter.go('/admin/import/prepare/' + FlowRouter.getParam('importer'));\n        }\n      });\n    }\n  };\n  return instance.updateProgress();\n});\n"]}